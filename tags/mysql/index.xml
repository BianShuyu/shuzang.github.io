<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>mysql - 标签 - Shuzang's Blog</title><link>https://shuzang.github.io/tags/mysql/</link><description>mysql - 标签 - Shuzang's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>lylw1996@qq.com (shuzang)</managingEditor><webMaster>lylw1996@qq.com (shuzang)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 13 Oct 2020 19:15:00 +0800</lastBuildDate><atom:link href="https://shuzang.github.io/tags/mysql/" rel="self" type="application/rss+xml"/><item><title>Mysql学习补充-临时表与派生表</title><link>https://shuzang.github.io/mysql-learning-supplement-temporary-table-and-derived-table/</link><pubDate>Tue, 13 Oct 2020 19:15:00 +0800</pubDate><author>作者</author><guid>https://shuzang.github.io/mysql-learning-supplement-temporary-table-and-derived-table/</guid><description><![CDATA[<p>区分 MySQL 中临时表与派生表的概念，明确它们的用途。</p>
<h2 id="1-临时表">1. 临时表</h2>
<p>本节参考 <a href="https://www.yiibai.com/mysql/temporary-table.html" target="_blank" rel="noopener noreffer">易百教程-MySQL临时表</a></p>
<h3 id="11-简介">1.1 简介</h3>
<p>就像它的名字，临时表是一个临时的结果集，一般在多表连接时使用，存储一个临时的结果以便另一个查询来处理。</p>
<p>临时表的一些注意如下</p>
<ul>
<li>在 <code>CREATE</code> 和 <code>TABLE</code> 中间添加 <code>TEMPORARY</code> 关键字来创建临时表，即 <code>CREATE TEMPOPARY TABLE</code>；</li>
<li>连接结束时，临时表会被自动删除，当然，也可以使用 DROP TABLE 显式删除。注意，这里的连接结束指的是数据库连接，当开发时使用连接池或者持久连接时，无法保证临时表在程序终止时自动删除，因为程序结束时连接不一定结束，而是会放到连接池；</li>
<li>临时表只能被创建它的客户端看到和访问，因此不同的客户端可以创建具有相同名称的临时表，不会导致冲突；</li>
<li>临时表可以与数据库中的普通表（永久表）具有相同的名称，但会屏蔽掉永久表，只有临时表被删除后永久表才能再次访问。但不建议这样做，因为如果服务器断线重连，将无法区分临时表和永久表，此时发起 DELETE TABLE 可能会删除掉永久表。</li>
</ul>
<h3 id="12-创建">1.2 创建</h3>
<p>如上所述，使用 <code>CREATE TEMPORARY TABLE</code> 创建临时表。下例中创建了一个临时表，按照收入存储前 10 名客户</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">CREATE</span> <span class="n">TEMPORARY</span> <span class="k">TABLE</span> <span class="n">top10customers</span>
<span class="k">SELECT</span> <span class="n">p</span><span class="p">.</span><span class="n">customerNumber</span><span class="p">,</span> 
       <span class="n">c</span><span class="p">.</span><span class="n">customerName</span><span class="p">,</span> 
       <span class="nf">FORMAT</span><span class="p">(</span><span class="nf">SUM</span><span class="p">(</span><span class="n">p</span><span class="p">.</span><span class="n">amount</span><span class="p">),</span><span class="mi">2</span><span class="p">)</span> <span class="n">total</span>
<span class="k">FROM</span> <span class="n">payments</span> <span class="n">p</span>
<span class="k">INNER</span> <span class="k">JOIN</span> <span class="n">customers</span> <span class="n">c</span> <span class="k">ON</span> <span class="n">c</span><span class="p">.</span><span class="n">customerNumber</span> <span class="o">=</span> <span class="n">p</span><span class="p">.</span><span class="n">customerNumber</span>
<span class="k">GROUP</span> <span class="k">BY</span> <span class="n">p</span><span class="p">.</span><span class="n">customerNumber</span>
<span class="k">ORDER</span> <span class="k">BY</span> <span class="n">total</span> <span class="k">DESC</span>
<span class="k">LIMIT</span> <span class="mi">10</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><p>从创建的临时表中查询数据如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">top10customers</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="13-删除">1.3 删除</h3>
<p>使用 <code>DROP TEMPORARY TABLE</code> 删除临时表，如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">DROP</span> <span class="n">TEMPORARY</span> <span class="k">TABLE</span> <span class="n">top10customers</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><p>关键词 <code>TEMPORARY</code> 可以省略，但为了避免删除永久表的错误，最好还是加上该关键词。</p>
<h2 id="2-派生表">2. 派生表</h2>
<p>本节参考 <a href="https://www.yiibai.com/mysql/derived-table.html" target="_blank" rel="noopener noreffer">易百教程-MySQL派生</a></p>
<p>当在 SELECT 语句的 FROM 子句中使用独立子查询时，将其称为派生表。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">SELECT</span> <span class="n">column_list</span>
<span class="k">FROM</span> <span class="p">(</span> <span class="c1"># 圆括号中的子查询结果即为派生表
</span><span class="c1"></span>	<span class="k">SELECT</span> <span class="n">column_list</span>
    <span class="k">FROM</span> <span class="n">table_1</span>
<span class="p">)</span> <span class="n">derived_table_name</span> <span class="c1"># 派生表必须具有别名
</span><span class="c1"></span><span class="k">WHERE</span> <span class="n">derived_table_name</span><span class="p">.</span><span class="n">c1</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><p>派生表必须具有别名，以便在稍后的查询中引用，否则，MySQL 将给出如下错误</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">Every</span> <span class="n">derived</span> <span class="k">table</span> <span class="n">must</span> <span class="n">have</span> <span class="n">its</span> <span class="n">own</span> <span class="n">alias</span><span class="p">.</span>
</code></pre></td></tr></table>
</div>
</div><p>所以，我们可以看到，派生表不需要像临时表那样需要创建。</p>]]></description></item><item><title>Mysql学习补充-语句执行顺序</title><link>https://shuzang.github.io/mysql-learning-supplement-statement-execution-order/</link><pubDate>Sun, 13 Sep 2020 16:08:00 +0800</pubDate><author>作者</author><guid>https://shuzang.github.io/mysql-learning-supplement-statement-execution-order/</guid><description><![CDATA[<p>这篇文章用来仔细思考 MySQL 查询语句的执行顺序。</p>
<p>手写 MySQL  语句的顺序通常如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">select</span> <span class="o">&lt;</span><span class="n">select_list</span><span class="o">&gt;</span>
<span class="k">from</span> <span class="o">&lt;</span><span class="n">table_name</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="n">join_type</span><span class="o">&gt;</span> <span class="k">join</span> <span class="o">&lt;</span><span class="n">join_table</span><span class="o">&gt;</span> <span class="k">on</span> <span class="o">&lt;</span><span class="n">join_condition</span><span class="o">&gt;</span>
<span class="k">where</span> <span class="o">&lt;</span><span class="n">where_condition</span><span class="o">&gt;</span>
<span class="k">group</span> <span class="k">by</span> <span class="o">&lt;</span><span class="n">group_by_list</span><span class="o">&gt;</span>
<span class="k">having</span> <span class="o">&lt;</span><span class="n">having_condition</span><span class="o">&gt;</span>
<span class="k">order</span> <span class="k">by</span> <span class="o">&lt;</span><span class="n">order_by_condition</span><span class="o">&gt;</span>
<span class="k">limit</span> <span class="o">&lt;</span><span class="n">limt_number</span><span class="o">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>MySQL 语句的执行顺序如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">from</span> <span class="o">&lt;</span><span class="k">left</span> <span class="k">table</span><span class="o">&gt;</span>
<span class="k">on</span> <span class="o">&lt;</span><span class="n">on_condition</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="n">join_type</span><span class="o">&gt;</span> <span class="k">join</span> <span class="o">&lt;</span><span class="n">join_table</span><span class="o">&gt;</span>
<span class="k">where</span> <span class="o">&lt;</span><span class="n">where_condition</span><span class="o">&gt;</span>
<span class="k">group</span> <span class="k">by</span> <span class="o">&lt;</span><span class="n">group_by_list</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="nf">sum</span><span class="p">()</span><span class="nf">avg</span><span class="p">()</span><span class="err">等聚合函数</span><span class="o">&gt;</span>
<span class="k">having</span> <span class="o">&lt;</span><span class="n">having_condition</span><span class="o">&gt;</span>
<span class="k">select</span> <span class="o">&lt;</span><span class="n">select_list</span><span class="o">&gt;</span>
<span class="k">distinct</span>
<span class="k">order</span> <span class="k">by</span> <span class="o">&lt;</span><span class="n">order_by_condition</span><span class="o">&gt;</span>
<span class="k">limit</span> <span class="o">&lt;</span><span class="n">limit_number</span><span class="o">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>下面做一下解释</p>
<p><strong>第一步</strong>：如果有连接运算，加载 from 子句指定的表中的前两个计算笛卡尔积，生成虚拟表 vt1；</p>
<p><strong>第二步</strong>：对虚拟表 vt1 执行 on 表达式，筛选符合条件的元组，生成虚拟表 vt2，如果是外连接，基表中的数据会全部保留；</p>
<p><strong>第三步</strong>：如果 from 子句中的表数量大于 2，则重复前两部，直至所有的表都连接完成，得到虚拟表 vt3；</p>
<p><strong>第四步</strong>：执行 where 表达式，筛选符合条件的数据生成 vt4；</p>
<p><strong>第五步</strong>：执行 group by 子句。group by 子句执行过后，会对子句组合成唯一值并且对每个唯一值只包含一行，生成 vt5,。一旦执行group by，后面的所有步骤只能得到 vt5 中的列（group by的子句包含的列）和聚合函数。</p>
<p><strong>第六步</strong>：执行聚合函数，生成 vt6；</p>
<p><strong>第七步</strong>：执行 having 表达式，筛选 vt6 中的数据，生成vt7。having是唯一一个在分组后的条件筛选;</p>
<p><strong>第八步</strong>：执行 select 语句，从 vt7 中筛选列，生成 vt8；</p>
<p><strong>第九步</strong>：执行 distinct，对 vt8 去重，生成 vt9。如果执行过 group by 就没必要再去执行 distinct，因为分组后，每组只会有一条数据，并且每条数据都不相同。</p>
<p><strong>第十步</strong>：对 vt9 进行排序，此处返回的不是一个虚拟表，而是一个游标，记录了数据的排序顺序，此处可以使用别名；</p>
<p><strong>第十一步</strong>：执行 limit 语句，将结果返回给客户端。</p>
<hr>
<p><strong>参考</strong></p>
<p>[1] 樱桃mayue，51CTO博客，<a href="https://blog.51cto.com/13593129/2357192?source=dra" target="_blank" rel="noopener noreffer">MySql学习笔记（二）：SQL执行顺序</a>，2019.03.02</p>]]></description></item><item><title>Mysql学习补充-关系数据理论</title><link>https://shuzang.github.io/mysql-learning-supplement-relational-data-theory/</link><pubDate>Fri, 11 Sep 2020 19:30:00 +0800</pubDate><author>作者</author><guid>https://shuzang.github.io/mysql-learning-supplement-relational-data-theory/</guid><description><![CDATA[<p>MySQL 作为关系数据库，关系数据理论是基础，本文进行补充学习，主要包括关系模型、关系代数和范式的相关知识。</p>
<h2 id="1-关系模型">1. 关系模型</h2>
<h3 id="11-简介">1.1 简介</h3>
<p>模型就是描述数据的概念的集合。</p>
<p>数据库的本质作用是存储抽象自现实世界的数据，这一过程可以分为两个阶段</p>
<ol>
<li>对现实世界进行抽象，强调语义的表达，这一阶段称为<strong>概念模型</strong>，一般使用线条、图形、文字等来进行描述，是用户和数据库设计人员的沟通语言，比如 E-R 图。</li>
<li>用计算机可理解的方式进行二次抽象，强调数据描述的确定性，这一阶段称作<strong>数据模型</strong>，包括遵循的数据结构、对数据的各种操作和数据的约束条件三部分。</li>
</ol>
<p>关系模型正是当前广泛使用的一种数据模型，使用关系模型的数据库称为关系型数据库，MySQL 正是广为使用的一种关系型数据库。</p>
<h3 id="12-基本概念">1.2 基本概念</h3>
<p><strong>域</strong>：域是一组具有相同类型值的集合，比如 MAN = {王兵，李平} 就是一个域，WOMAN = {丁梅，吴芳} 也是一个域。</p>
<p><strong>笛卡尔积</strong>：给定一组域 $D_1,D_2,&hellip;,D_n$，它们的笛卡尔积就定义为
$$
D_1 \times D_2 \times &hellip; D_n={(d_1,d_2,&hellip;,d_n)|d_i \in D_i,i=1,2,&hellip;,n}
$$
以上面的 MAN 和 WOMEN 域为例，$MAN \times WOMEN = {(王兵,丁梅),(王兵,吴芳),(李平,丁梅),(李平,吴芳)}$，一个笛卡尔积可以表示为一个二维表，如下</p>
<table>
<thead>
<tr>
<th>MAN</th>
<th>WOMAN</th>
</tr>
</thead>
<tbody>
<tr>
<td>王兵</td>
<td>丁梅</td>
</tr>
<tr>
<td>王兵</td>
<td>吴芳</td>
</tr>
<tr>
<td>李平</td>
<td>丁梅</td>
</tr>
<tr>
<td>李平</td>
<td>吴芳</td>
</tr>
</tbody>
</table>
<p><strong>元组</strong>：笛卡尔积中的每个元素叫做一个元组，也就是二维表中的一行。</p>
<p><strong>关系</strong>：$D_1 \times D_2 \times &hellip; D_n$ 的子集叫做在域 $D_1,D_2,&hellip;,D_n$ 上的一个关系，可以表示为 $R(D_1,D_2,&hellip;,D_n)$，n 叫做关系的目/度。关系是关系模型最核心的概念，一个关系数据库就是一组关系的集合，而一个关系就是一张二维表（笛卡尔积所代表的二维表的一个子集），比如，我们假设王兵的妻子是丁梅，李平的妻子是吴芳，则取笛卡尔积的一个子集就可以构造出一个关系 FAMILY</p>
<table>
<thead>
<tr>
<th>husband</th>
<th>wife</th>
</tr>
</thead>
<tbody>
<tr>
<td>王兵</td>
<td>丁梅</td>
</tr>
<tr>
<td>李平</td>
<td>吴芳</td>
</tr>
</tbody>
</table>
<p>关系具有一些规定（性质）</p>
<ol>
<li>关系中不能存在完全相同的两个元组</li>
<li>关系中元组行的序不重要</li>
<li>关系中列的序不重要</li>
</ol>
<p><strong>属性</strong>：关系的每一列都有一个自己的名字，称为属性。这一，上面的关系就可以表示为 $FAMILY = {husband,wife}$</p>
<p><strong>候选码</strong>：能够唯一标识一个元组的最小属性组叫做候选码，在上面的例子中，需要丈夫和妻子两个人的名字才能区分每一对夫妻，因此其候选码为 (husband,wife)，但在其它例子比如学生名单中，学生学号可以唯一标识学生，因此学号可以单独作为候选码。</p>
<p><strong>主属性</strong>：候选码中的属性叫做主属性。</p>
<p><strong>非码属性</strong>：不包含在任何候选码中的属性叫做非码属性。</p>
<p><strong>关系模式</strong>：对关系进一步抽象，表示所有关系的一个通用方法就是关系模式，表达为 $R(U,D,dom,F)$，其中 R 为关系名，U 是组成该关系的属性名集合，D 是属性组 U 中属性来自的域，dom 是属性到域的映射集合，F 为属性间数据的依赖关系集合。通常我们会简写为 $R(U)$，所以才有了上面的 $FAMILY = {husband,wife}$ 这种表示。</p>
<h2 id="2-关系代数">2. 关系代数</h2>
<p>一个数据模型，不仅包含表达数据的数据结构，还包含可对数据进行的操作。关系模型中，每个关系看作一个集合，对关系的操作可以就归纳为对集合的操作，这就是本节要介绍的关系代数。</p>
<p>关系代数的运算分为：传统的集合运算和专门的关系运算。</p>
<h3 id="21-集合运算">2.1 集合运算</h3>
<p>就是指求<strong>交集</strong>、<strong>并集</strong>和<strong>差集</strong>，要求运算的两个关系具有相同的目，且相应的属性取自同一个域。</p>
<p>还有一个特别的集合运算叫做<strong>广义笛卡尔积</strong>。假设两个关系 R 和 S 分别为 n 和 m 目，则其广义笛卡尔积是一个 n + m 列的元组的集合。若 R 有 k1 个元组，S 有 k2 个元组，则广义笛卡尔积有 $k1 × k2$ 个元组，记作 $R \times S$。通常我们在描述时一般直接称为笛卡尔积运算。</p>
<p>假设 R 关系如下</p>
<table>
<thead>
<tr>
<th>A</th>
<th>B</th>
<th>C</th>
</tr>
</thead>
<tbody>
<tr>
<td>a1</td>
<td>b1</td>
<td>c1</td>
</tr>
<tr>
<td>a2</td>
<td>b2</td>
<td>c2</td>
</tr>
</tbody>
</table>
<p>S 关系如下</p>
<table>
<thead>
<tr>
<th>D</th>
<th>E</th>
</tr>
</thead>
<tbody>
<tr>
<td>d1</td>
<td>e1</td>
</tr>
<tr>
<td>d2</td>
<td>e2</td>
</tr>
<tr>
<td>d3</td>
<td>e3</td>
</tr>
</tbody>
</table>
<p>则 $R \times S$ 如下</p>
<table>
<thead>
<tr>
<th>A</th>
<th>B</th>
<th>C</th>
<th>D</th>
<th>E</th>
</tr>
</thead>
<tbody>
<tr>
<td>a1</td>
<td>b1</td>
<td>c1</td>
<td>d1</td>
<td>e1</td>
</tr>
<tr>
<td>a1</td>
<td>b1</td>
<td>c1</td>
<td>d2</td>
<td>e2</td>
</tr>
<tr>
<td>a1</td>
<td>b1</td>
<td>c1</td>
<td>d3</td>
<td>e3</td>
</tr>
<tr>
<td>a2</td>
<td>b2</td>
<td>c2</td>
<td>d1</td>
<td>e1</td>
</tr>
<tr>
<td>a2</td>
<td>b2</td>
<td>c2</td>
<td>d2</td>
<td>e2</td>
</tr>
<tr>
<td>a2</td>
<td>b2</td>
<td>c2</td>
<td>d3</td>
<td>e3</td>
</tr>
</tbody>
</table>
<h3 id="22-关系运算">2.2 关系运算</h3>
<p><strong>选择</strong>：选择运算是在关系 R 中选择满足给定条件的元组，记作 $\sigma_F(R) = {t \in R \and F(t) = true}$，其中 $\sigma$ 为选择运算符，$F$ 为选择条件</p>
<p>选择运算 $\sigma_{A=&lsquo;a1&rsquo;}(R)$ 的结果为</p>
<table>
<thead>
<tr>
<th>A</th>
<th>B</th>
<th>C</th>
</tr>
</thead>
<tbody>
<tr>
<td>a1</td>
<td>b1</td>
<td>c1</td>
</tr>
</tbody>
</table>
<p><strong>投影</strong>：投影运算是在关系 R 中选出若干属性列组成新的关系，记作 $\pi_A(R) = {t[A]|t \in R}$，其中 $\pi$ 为投影运算符，$A$ 为选择的属性列名。需要注意的是，投影运算可能缩减元组个数，因为要去重。</p>
<p>投影运算 $\pi_{A,B}(R)$ 的结果为</p>
<table>
<thead>
<tr>
<th>A</th>
<th>B</th>
</tr>
</thead>
<tbody>
<tr>
<td>a1</td>
<td>b1</td>
</tr>
<tr>
<td>a2</td>
<td>b2</td>
</tr>
</tbody>
</table>
<p><strong>连接</strong>：连接运算是从两个关系的笛卡尔积中选取属性间满足一定条件的元组，称为θ连接，记作 $R \bowtie S$，$\bowtie$ 下面应该有个θ连接的表达式，比如 $A = B$，当θ为等号时称作<strong>等值连接</strong>。</p>
<p>连接运算可以理解为笛卡尔积和选择两个运算的结合，下面是一个等值连接的例子</p>
<p></p>
<p>当等值连接中等于号的两端是相同的属性组时，称为自然连接，上图同时也是一个<strong>自然连接</strong>，可以直接表示为 $R \bowtie S$</p>
<p><strong>左连接</strong>：左连接的意思是左表的记录会全部显示出来，而右表只会显示符合搜索条件的记录，右表记录不足的填充 NULL。</p>
<p><strong>右连接</strong>：与左连接相反，右表的记录全部显示出来，左表只会显示符合搜索条件的记录，左表记录不足的填充 NULL。</p>
<p>象集：给定一个关系 R(X,Y)，X和Y为属性组，当 t[X]=x时，x在R中的象集为：$Y_x={t[Y]|t \in R, t[X]=x}$</p>
<p>除：给定关系 R(X,Y) 和 S(Y,X)，其中 X,Y,Z 为属性组。R中的Y和S中的Y可以有不同的名字，但必须取自同一个域，R与S除得到一个新关系P(X)，P是R中满足下列条件的元组在X属性列上的投影：元组在X分量值x的象集$Y_x$包含S在Y上投影的集合，记作：$R \div S = {t_r[X]|t_r \in R \land \pi_y(S) \subseteq Y_x }$</p>
<p></p>
<h2 id="3-约束">3. 约束</h2>
<p>数据的约束条件是一组完整性规则的集合，这些规则用来限定数据模型中的数据，使其符合某种特征，比如对学生年龄的限定，奖金必须低于基本工资等。</p>
<p>关系模型的完整性约束主要包括</p>
<ol>
<li>实体完整性：主码中的属性不可取空值</li>
<li>参照完整性：关系中的某个属性列与另一个关系的主码对应</li>
<li>用户自定义完整性：类似于学生年龄取值这种符合现实特征的</li>
</ol>]]></description></item><item><title>Mysql学习8-存储过程、触发器和事件</title><link>https://shuzang.github.io/mysql-learning-8-procedure-trigger-and-event/</link><pubDate>Wed, 15 Jul 2020 17:22:00 +0800</pubDate><author>作者</author><guid>https://shuzang.github.io/mysql-learning-8-procedure-trigger-and-event/</guid><description><![CDATA[<p>存储过程是在数据库中定义一些 SQL 语句的集合，可以直接调用这些存储过程来执行已经定义好的 SQL 语句。避免了开发人员重复编写相同 SQL 语句的问题。</p>
<p>触发器和存储过程相似，都是嵌入到 MySQL 中的一段程序。触发器是由事件来触发某个操作。当数据库执行这些事件时，就会激活触发器来执行相应的操作。</p>
<p>本篇介绍这两个概念</p>
<h2 id="1-存储过程">1. 存储过程</h2>
<p>数据库的实际操作中，经常会有需要多条 SQL 语句处理多个表才能完成的操作。例如，为了确认学生能否毕业，需要同时查询学生档案表、成绩表和综合表，此时就需要使用多条 SQL 语句来针对这几个数据表完成处理要求。<strong>存储过程</strong>就是这样一组为了完成特定功能的 SQL 语句的集合。</p>
<p>使用存储过程的目的是将常用或复杂的工作预先用 SQL 语句写好并用一个指定名称存储起来，这个过程经编译和优化后存储在数据库服务器中，因此称为存储过程。当以后需要数据库提供与已定义好的存储过程的功能相同的服务时，只需调用“CALL存储过程名字”即可自动完成</p>
<p>常用操作数据库的 SQL 语句在执行的时候需要先编译，然后执行。存储过程则采用另一种方式来执行 SQL 语句。</p>
<p>一个存储过程是一个可编程的函数，它在数据库中创建并保存，一般由 SQL 语句和一些特殊的控制结构组成。当希望在不同的应用程序或平台上执行相同的特定功能时，存储过程尤为合适。</p>
<p>MySQL 5.0 版本以前并不支持存储过程，这使 MySQL 在应用上大打折扣。MySQL 从 5.0 版本开始支持存储过程，既提高了数据库的处理速度，同时也提高了数据库编程的灵活性</p>
<p>存储过程是数据库中的一个重要功能，存储过程可以用来转换数据、数据迁移、制作报表，它类似于编程语言，一次执行成功，就可以随时被调用，完成指定的功能操作。</p>
<p>使用存储过程不仅可以提高数据库的访问效率，同时也可以提高数据库使用的安全性。</p>
<p>对于调用者来说，存储过程封装了 SQL 语句，调用者无需考虑逻辑功能的具体实现过程。只是简单调用即可，它可以被 Java 和 C# 等编程语言调用。</p>
<h3 id="11-创建存储过程">1.1 创建存储过程</h3>
<p>创建存储过程使用 CREATE PROCEDURE 语句，语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">CREATE</span> <span class="k">PROCEDURE</span> <span class="o">&lt;</span><span class="err">过程名</span><span class="o">&gt;</span> <span class="p">(</span> <span class="p">[</span><span class="err">过程参数</span><span class="p">[,</span><span class="err">…</span><span class="p">]</span> <span class="p">]</span> <span class="p">)</span> <span class="o">&lt;</span><span class="err">过程体</span><span class="o">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>其中，<strong>过程参数</strong>是存储过程的参数列表。MySQL 存储过程支持三种类型的参数，即输入参数、输出参数和输入/输出参数，分别用 IN、OUT 和 INOUT 三个关键字标识。其中，输入参数可以传递给一个存储过程，输出参数用于存储过程需要返回一个操作结果的情形，而输入/输出参数既可以充当输入参数也可以充当输出参数。格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="p">[</span> <span class="k">IN</span> <span class="o">|</span> <span class="k">OUT</span> <span class="o">|</span> <span class="k">INOUT</span> <span class="p">]</span> <span class="o">&lt;</span><span class="err">参数名</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="err">类型</span><span class="o">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p><strong>过程体</strong>是存储过程的主体部分，包含在过程调用的时候必须执行的 SQL 语句。这个部分以关键字 <strong>BEGIN</strong> 开始，以关键字 <strong>END</strong> 结束。若存储过程体中只有一条 SQL 语句，则可以省略 BEGIN-END 标志。</p>
<p>在 MySQL 中，服务器处理 SQL 语句默认是以分号作为语句结束标志的。然而，在创建存储过程时，存储过程体可能包含有多条 SQL 语句，这些 SQL 语句如果仍以分号作为语句结束符，那么 MySQL 服务器在处理时会以遇到的第一条 SQL 语句结尾处的分号作为整个程序的结束符，而不再去处理存储过程体中后面的 SQL 语句，这样显然不行。为解决以上问题，通常使用 <strong>DELIMITER</strong> 命令将结束命令修改为其他字符。语法格式如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">DELIMITER</span> <span class="err">$$</span>
</code></pre></td></tr></table>
</div>
</div><p>语法说明如下：</p>
<ul>
<li>$$ 是用户定义的结束符，通常这个符号可以是一些特殊的符号，如两个“?”或两个“￥”等。</li>
<li>当使用 DELIMITER 命令时，应该避免使用反斜杠“\”字符，因为它是 MySQL 的转义字符。</li>
</ul>
<p>在 MySQL 命令行客户端输入如下 SQL 语句。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span> <span class="o">&gt;</span> <span class="n">DELIMITER</span> <span class="o">??</span>
</code></pre></td></tr></table>
</div>
</div><p>成功执行这条 SQL 语句后，任何命令、语句或程序的结束标志就换为两个问号“??”了。</p>
<p>若希望换回默认的分号“;”作为结束标志，则在 MySQL 命令行客户端输入下列语句即可：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span> <span class="o">&gt;</span> <span class="n">DELIMITER</span> <span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><p>注意：DELIMITER 和分号“;”之间一定要有一个空格。在创建存储过程时，必须具有 CREATE ROUTINE 权限。</p>
<p>假如创建名称为 GetScoreByStu 的存储过程，输入参数是学生姓名。存储过程的作用是通过输入的学生姓名从学生成绩信息表中查询指定学生的成绩信息，输入的 SQL 语句和执行过程如下所示。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="n">DELIMITER</span> <span class="o">//</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">CREATE</span> <span class="k">PROCEDURE</span> <span class="n">GetScoreByStu</span>
    <span class="o">-&gt;</span> <span class="p">(</span><span class="k">IN</span> <span class="n">name</span> <span class="kt">VARCHAR</span><span class="p">(</span><span class="mi">30</span><span class="p">))</span>
    <span class="o">-&gt;</span> <span class="n">BEGIN</span>
    <span class="o">-&gt;</span> <span class="k">SELECT</span> <span class="n">student_score</span> <span class="k">FROM</span> <span class="n">tb_students_score</span>
    <span class="o">-&gt;</span> <span class="k">WHERE</span> <span class="n">student_name</span><span class="o">=</span><span class="n">name</span><span class="p">;</span>
    <span class="o">-&gt;</span> <span class="n">END</span> <span class="o">//</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">01</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="12-查看存储过程">1.2 查看存储过程</h3>
<p>创建好存储过程后，可以使用 SHOW CREATE 语句查看存储过程的定义，语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">SHOW</span> <span class="k">PROCEDURE</span> <span class="n">STATUS</span> <span class="k">LIKE</span> <span class="err">存储过程名</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><p>举例如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SHOW</span> <span class="k">PROCEDURE</span> <span class="n">STATUS</span> <span class="k">LIKE</span> <span class="s1">&#39;showstuscore&#39;</span> <span class="err">\</span><span class="n">G</span>
<span class="o">***************************</span> <span class="mi">1</span><span class="p">.</span> <span class="n">row</span> <span class="o">***************************</span>
                  <span class="n">Db</span><span class="p">:</span> <span class="n">test</span>
                <span class="n">Name</span><span class="p">:</span> <span class="n">showstuscore</span>
                <span class="n">Type</span><span class="p">:</span> <span class="k">PROCEDURE</span>
             <span class="n">Definer</span><span class="p">:</span> <span class="n">root</span><span class="o">@</span><span class="n">localhost</span>
            <span class="n">Modified</span><span class="p">:</span> <span class="mi">2020</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">20</span> <span class="mi">13</span><span class="p">:</span><span class="mi">34</span><span class="p">:</span><span class="mi">50</span>
             <span class="n">Created</span><span class="p">:</span> <span class="mi">2020</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">20</span> <span class="mi">13</span><span class="p">:</span><span class="mi">34</span><span class="p">:</span><span class="mi">50</span>
       <span class="n">Security_type</span><span class="p">:</span> <span class="n">DEFINER</span>
             <span class="n">Comment</span><span class="p">:</span>
<span class="n">character_set_client</span><span class="p">:</span> <span class="n">gbk</span>
<span class="n">collation_connection</span><span class="p">:</span> <span class="n">gbk_chinese_ci</span>
  <span class="k">Database</span> <span class="n">Collation</span><span class="p">:</span> <span class="n">latin1_swedish_ci</span>
<span class="mi">1</span> <span class="n">row</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">01</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>也可以查看存储过程的定义，语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">SHOW</span> <span class="k">CREATE</span> <span class="k">PROCEDURE</span> <span class="err">存储过程名</span>
</code></pre></td></tr></table>
</div>
</div><p>举例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SHOW</span> <span class="k">CREATE</span> <span class="k">PROCEDURE</span> <span class="n">showstuscore</span> <span class="err">\</span><span class="n">G</span>
<span class="o">***************************</span> <span class="mi">1</span><span class="p">.</span> <span class="n">row</span> <span class="o">***************************</span>
           <span class="k">Procedure</span><span class="p">:</span> <span class="n">showstuscore</span>
            <span class="n">sql_mode</span><span class="p">:</span> <span class="n">STRICT_TRANS_TABLES</span><span class="p">,</span><span class="n">NO_AUTO_CREATE_USER</span><span class="p">,</span><span class="n">NO_ENGINE_SUBSTITUTION</span>
    <span class="k">Create</span> <span class="k">Procedure</span><span class="p">:</span> <span class="k">CREATE</span> <span class="n">DEFINER</span><span class="o">=`</span><span class="n">root</span><span class="o">`@`</span><span class="n">localhost</span><span class="o">`</span> <span class="k">PROCEDURE</span> <span class="o">`</span><span class="n">showstuscore</span><span class="o">`</span><span class="p">()</span>
<span class="n">BEGIN</span>
<span class="k">SELECT</span> <span class="n">id</span><span class="p">,</span><span class="n">name</span><span class="p">,</span><span class="n">score</span> <span class="k">FROM</span> <span class="n">studentinfo</span><span class="p">;</span>
<span class="n">END</span>
<span class="n">character_set_client</span><span class="p">:</span> <span class="n">gbk</span>
<span class="n">collation_connection</span><span class="p">:</span> <span class="n">gbk_chinese_ci</span>
  <span class="k">Database</span> <span class="n">Collation</span><span class="p">:</span> <span class="n">latin1_swedish_ci</span>
<span class="mi">1</span> <span class="n">row</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">01</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="13-修改存储过程">1.3 修改存储过程</h3>
<p>使用 ALTER PROCEDURE 语句修改存储过程，语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">ALTER</span> <span class="k">PROCEDURE</span> <span class="err">存储过程名</span> <span class="p">[</span> <span class="err">特征</span> <span class="p">...</span> <span class="p">]</span>
</code></pre></td></tr></table>
</div>
</div><p><code>特征</code>指定了存储过程的特性，可能的取值有：</p>
<ul>
<li>CONTAINS SQL 表示子程序包含 SQL 语句，但不包含读或写数据的语句。</li>
<li>NO SQL 表示子程序中不包含 SQL 语句。</li>
<li>READS SQL DATA 表示子程序中包含读数据的语句。</li>
<li>MODIFIES SQL DATA 表示子程序中包含写数据的语句。</li>
<li>SQL SECURITY { DEFINER |INVOKER } 指明谁有权限来执行。</li>
<li>DEFINER 表示只有定义者自己才能够执行。</li>
<li>INVOKER 表示调用者可以执行。</li>
<li>COMMENT &lsquo;string&rsquo; 表示注释信息。</li>
</ul>
<p>下面修改存储过程 showstuscore 的定义，将读写权限改为 MODIFIES SQL DATA，并指明调用者可以执行，代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">ALTER</span> <span class="k">PROCEDURE</span> <span class="n">showstuscore</span> <span class="k">MODIFIES</span> <span class="k">SQL</span> <span class="n">DATA</span> <span class="k">SQL</span> <span class="n">SECURITY</span> <span class="n">INVOKER</span><span class="p">;</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">01</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="14-删除存储过程">1.4 删除存储过程</h3>
<p>存储过程被创建后，就会一直保存在数据库服务器上，直至被删除。当 MySQL 数据库中存在废弃的存储过程时，我们需要将它从数据库中删除。</p>
<p>使用 DROP PROCEDURE 语句删除存储过程，语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">DROP</span> <span class="k">PROCEDURE</span> <span class="p">[</span> <span class="k">IF</span> <span class="k">EXISTS</span> <span class="p">]</span> <span class="o">&lt;</span><span class="err">过程名</span><span class="o">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>注意：存储过程名称后面没有参数列表，也没有括号，在删除之前，必须确认该存储过程没有任何依赖关系，否则会导致其他与之关联的存储过程无法运行。</p>
<p>下面删除存储过程 ShowStuScore，SQL 语句和运行结果如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">DROP</span> <span class="k">PROCEDURE</span> <span class="n">ShowStuScore</span><span class="p">;</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">08</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="2-触发器">2. 触发器</h2>
<p>MySQL 的触发器和存储过程一样，都是嵌入到 MySQL 中的一段程序，是 MySQL 中管理数据的有力工具。不同的是执行存储过程要使用 CALL 语句来调用，而触发器的执行不需要使用 CALL 语句来调用，也不需要手工启动，而是通过对数据表的相关操作来触发、激活从而实现执行。比如当对 student 表进行操作（INSERT，DELETE 或 UPDATE）时就会激活它执行。</p>
<p>触发器与数据表关系密切，主要用于保护表中的数据。特别是当有多个表具有一定的相互联系的时候，触发器能够让不同的表保持数据的一致性。</p>
<p>在 MySQL 中，只有执行 INSERT、UPDATE 和 DELETE 操作时才能激活触发器，其它 SQL 语句则不会激活触发器。</p>
<p>那么为什么要使用触发器呢？比如，在实际开发项目时，我们经常会遇到以下情况：</p>
<ul>
<li>在学生表中添加一条关于学生的记录时，学生的总数就必须同时改变。</li>
<li>增加一条学生记录时，需要检查年龄是否符合范围要求。</li>
<li>删除一条学生信息时，需要删除其成绩表上的对应记录。</li>
<li>删除一条数据时，需要在数据库存档表中保留一个备份副本。</li>
</ul>
<p>虽然上述情况实现的业务逻辑不同，但是它们都需要在数据表发生更改时，自动进行一些处理。这时就可以使用触发器处理。例如，对于第一种情况，可以创建一个触发器对象，每当添加一条学生记录时，就执行一次计算学生总数的操作，这样就可以保证每次添加一条学生记录后，学生总数和学生记录数是一致的。</p>
<h3 id="21-优缺点">2.1 优缺点</h3>
<p>触发器的优点如下：</p>
<ul>
<li>触发器的执行是自动的，当对触发器相关表的数据做出相应的修改后立即执行。</li>
<li>触发器可以实施比 FOREIGN KEY 约束、CHECK 约束更为复杂的检查和操作。</li>
<li>触发器可以实现表数据的级联更改，在一定程度上保证了数据的完整性。</li>
</ul>
<p>触发器的缺点如下：</p>
<ul>
<li>使用触发器实现的业务逻辑在出现问题时很难进行定位，特别是涉及到多个触发器的情况下，会使后期维护变得困难。</li>
<li>大量使用触发器容易导致代码结构被打乱，增加了程序的复杂性，</li>
<li>如果需要变动的数据量较大时，触发器的执行效率会非常低。</li>
</ul>
<h3 id="22-mysql支持的触发器">2.2 MySQL支持的触发器</h3>
<p>在实际使用中，MySQL 所支持的触发器有三种：INSERT 触发器、UPDATE 触发器和 DELETE 触发器。</p>
<h4 id="insert-触发器">INSERT 触发器</h4>
<p>在 INSERT 语句执行之前或之后响应的触发器。</p>
<p>使用 INSERT 触发器需要注意以下几点：</p>
<ul>
<li>在 INSERT 触发器代码内，可引用一个名为 NEW（不区分大小写）的虚拟表来访问被插入的行。</li>
<li>在 BEFORE INSERT 触发器中，NEW 中的值也可以被更新，即允许更改被插入的值（只要具有对应的操作权限）。</li>
<li>对于 AUTO_INCREMENT 列，NEW 在 INSERT 执行之前包含的值是 0，在 INSERT 执行之后将包含新的自动生成值。</li>
</ul>
<h4 id="update-触发器">UPDATE 触发器</h4>
<p>在 UPDATE 语句执行之前或之后响应的触发器。</p>
<p>使用 UPDATE 触发器需要注意以下几点：</p>
<ul>
<li>在 UPDATE 触发器代码内，可引用一个名为 NEW（不区分大小写）的虚拟表来访问更新的值。</li>
<li>在 UPDATE 触发器代码内，可引用一个名为 OLD（不区分大小写）的虚拟表来访问 UPDATE 语句执行前的值。</li>
<li>在 BEFORE UPDATE 触发器中，NEW 中的值可能也被更新，即允许更改将要用于 UPDATE 语句中的值（只要具有对应的操作权限）。</li>
<li>OLD 中的值全部是只读的，不能被更新。</li>
</ul>
<p>注意：当触发器设计对触发表自身的更新操作时，只能使用 BEFORE 类型的触发器，AFTER 类型的触发器将不被允许。</p>
<h4 id="delete-触发器">DELETE 触发器</h4>
<p>在 DELETE 语句执行之前或之后响应的触发器。</p>
<p>使用 DELETE 触发器需要注意以下几点：</p>
<ul>
<li>在 DELETE 触发器代码内，可以引用一个名为 OLD（不区分大小写）的虚拟表来访问被删除的行。</li>
<li>OLD 中的值全部是只读的，不能被更新。</li>
</ul>
<p>总体来说，触发器使用的过程中，MySQL 会按照以下方式来处理错误。</p>
<p>对于事务性表，如果触发程序失败，以及由此导致的整个语句失败，那么该语句所执行的所有更改将回滚；对于非事务性表，则不能执行此类回滚，即使语句失败，失败之前所做的任何更改依然有效。</p>
<p>若 BEFORE 触发程序失败，则 MySQL 将不执行相应行上的操作。</p>
<p>若在 BEFORE 或 AFTER 触发程序的执行过程中出现错误，则将导致调用触发程序的整个语句失败。</p>
<p>仅当 BEFORE 触发程序和行操作均已被成功执行，MySQL 才会执行 AFTER 触发程序。</p>
<h2 id="3-事件">3. 事件</h2>
<p>在数据库管理中，经常要周期性的执行某一命令或 SQL 语句，于是 MySQL 5.1 版本以后就提供了事件，它可以很方便的实现 MySQL 数据库的计划任务，定期运行指定命令，使用起来非常简单方便。</p>
<p>事件（Event）也可称为事件调度器（Event Scheduler），是用来执行定时任务的一组 SQL 集合，可以通俗理解成 MySQL 中的定时器。一个事件可调用一次，也可周期性的启动。</p>
<p>事件可以作为定时任务调度器，取代部分原来只能用操作系统的计划任务才能执行的工作。另外，更值得一提的是，MySQL 的事件可以实现每秒钟执行一个任务，非常适合对实时性要求较高的环境，而操作系统的计划任务只能精确到每分钟一次。</p>
<p>事件和触发器类似，都是在某些事情发生时启动。当数据库启动一条语句的时候，触发器就启动了，而事件是根据调度事件来启动的。由于他们彼此相似，所以事件也称为临时性触发器。</p>
<h3 id="31-查看事件是否开启">3.1 查看事件是否开启</h3>
<p>在 MySQL 中，调度器 event_scheduler 负责调用事件。我们可以通过以下几种命令查看事件是否开启，一般情况下默认值为 OFF。SQL 命令和运行结果如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">mysql&gt; SHOW VARIABLES LIKE &#39;event_scheduler&#39;;
+-----------------+-------+
| Variable_name   | Value |
+-----------------+-------+
| event_scheduler | OFF   |
+-----------------+-------+
1 row in set, 1 warning (0.02 sec)

mysql&gt; SELECT @@event_scheduler;
+-------------------+
| @@event_scheduler |
+-------------------+
| OFF               |
+-------------------+
1 row in set (0.00 sec)

mysql&gt; SHOW PROCESSLIST;
+----+------+-----------------+------+---------+------+----------+------------------+
| Id | User | Host            | db   | Command | Time | State    | Info             |
+----+------+-----------------+------+---------+------+----------+------------------+
|  2 | root | localhost:56279 | NULL | Query   |    0 | starting | SHOW PROCESSLIST |
+----+------+-----------------+------+---------+------+----------+------------------+
1 row in set (0.01 sec)
</code></pre></td></tr></table>
</div>
</div><p>从结果可以看出，事件没有开启。因为参数 event_scheduler 的值为 OFF，并且在 PROCESSLIST 中查看不到 event_scheduler 的信息。如果参数 event_scheduler 的值为 ON，或者在 PROCESSLIST 中显示了 event_scheduler 的信息，则说明事件已经开启。</p>
<h3 id="32-开启事件">3.2 开启事件</h3>
<p>开启事件主要通过以下两种方式实现。</p>
<h4 id="通过设置全局参数修改">通过设置全局参数修改</h4>
<p>可以使用 SET GLOBAL 命令设定全局变量 event_scheduler 的值，开启或关闭事件。将 event_scheduler 参数的值设置为 ON，表示开启事件；设置为 OFF，则关闭事件。</p>
<p>例如，要开启事件可以在命令行窗口中输入以下命令。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">mysql&gt; SET GLOBAL event_scheduler = ON ;
Query OK, 0 rows affected (0.06 sec)

mysql&gt; SHOW VARIABLES LIKE &#39;event_scheduler&#39;;
+-----------------+-------+
| Variable_name   | Value |
+-----------------+-------+
| event_scheduler | ON    |
+-----------------+-------+
1 row in set, 1 warning (0.01 sec)
</code></pre></td></tr></table>
</div>
</div><p>结果显示，event_scheduler 的值为 ON，表示事件已经开启。</p>
<p>通过 SET GLOBAL 命令开启或关闭事件，MySQL 重启服务后事件又会回到原来的状态，如果想要始终开启或关闭事件，可以修改 MySQL 配置文件。</p>
<h4 id="更改配置文件">更改配置文件</h4>
<p>在 MySQL 配置文件中找到 [mysqld] 选项，然后在下面添加以下代码开启事件。</p>
<p>event_scheduler = ON</p>
<p>在配置文件中添加代码并保存文件后，重启 MySQL 服务才能生效。</p>
<p>通过该方法开启或关闭事件，重启 MySQL 服务后，不会回到原来的状态。例如，此时重启 MySQL 服务器，然后查看事件是否开启。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">mysql&gt; SHOW VARIABLES LIKE &#39;event_scheduler&#39;;
+-----------------+-------+
| Variable_name   | Value |
+-----------------+-------+
| event_scheduler | ON    |
+-----------------+-------+
1 row in set, 1 warning (0.01 sec)
</code></pre></td></tr></table>
</div>
</div><p>结果显示，参数 event_scheduler 的值为 ON，表示已经开启。</p>]]></description></item><item><title>Mysql学习7-视图与索引</title><link>https://shuzang.github.io/mysql-learning-7-view-and-index/</link><pubDate>Wed, 15 Jul 2020 15:52:00 +0800</pubDate><author>作者</author><guid>https://shuzang.github.io/mysql-learning-7-view-and-index/</guid><description><![CDATA[<p>视图在数据库中的作用类似于窗户，用户可以通过这个窗口看到只对自己有用的数据。既保障了数据的安全性，又大大提高了查询效率。</p>
<p>索引是提高数据库性能的重要方式，用来快速找出数据表中的特定记录。如果在表中查询的列有一个索引，MySQL 能快速到达一个位置去搜寻数据，而不必查看所有数据。</p>
<p>本文介绍这两个概念。</p>
<h2 id="1-视图">1. 视图</h2>
<p>之后介绍&hellip;</p>
<h2 id="2-索引">2. 索引</h2>
<p>索引是一种特殊的数据库结构，由数据表中的一列或多列组合而成，用来快速查询数据表中是否有某一特定值的记录。其原理类似于书籍的目录，使用索引的好处是可以极大地提高数据库的查询速度。</p>
<h3 id="21-优缺点">2.1 优缺点</h3>
<p>在 MySQL 中，通常有以下两种方式访问数据库表的行数据：</p>
<ol>
<li><strong>顺序访问</strong>：在表中实行全表扫描，从头到尾逐行遍历，直到在无序的行数据中找到符合条件的目标数据。当表中有大量数据时，效率非常底下。</li>
<li><strong>索引访问</strong>：通过遍历索引来直接访问表中的记录行。使用这种方法的前提是对表建立了一个索引，索引存储了指定记录行的指针，根据指定的排序顺序对这些指针排序。例如，在学生基本信息表 tb_students 中，如果基于 student_id 建立了索引，系统就建立了一张索引列到实际记录的映射表。当用户需要查找 student_id 为 12022 的数据的时候，系统先在 student_id 索引上找到该记录，然后通过映射表直接找到数据行，并且返回该行数据。因为扫描索引的速度一般远远大于扫描实际数据行的速度，所以采用索引的方式可以大大提高数据库的工作效率。</li>
</ol>
<p>根据以上描述，我们可以总结索引的优缺点</p>
<table>
<thead>
<tr>
<th>优点</th>
<th>缺点</th>
</tr>
</thead>
<tbody>
<tr>
<td>可以大大加快数据的查询速度</td>
<td>创建和维护索引需要耗费时间，并且随着数据量的增加所耗费的时间也会增加</td>
</tr>
<tr>
<td>通过创建唯一索引可以保证数据库表中每一行数据的唯一性</td>
<td>索引需要占磁盘空间，如果有大量的索引，索引文件可能比数据文件更快达到最大文件尺寸</td>
</tr>
<tr>
<td>在实现数据的参照完整性方面可以加速表与表之间的连接</td>
<td></td>
</tr>
<tr>
<td>在使用分组和排序子句进行数据查询时也可以显著减少查询中分组和排序的时间</td>
<td></td>
</tr>
</tbody>
</table>
<p>所以，索引虽然可以提高查询速度，但会影响插入记录的速度，当插入大量数据时，最好先删除表中的索引，然后插入数据，插入完成后，再创建索引。</p>
<h3 id="22-索引类型">2.2 索引类型</h3>
<p>如果按<strong>底层实现</strong>分，MySQL 的索引可以分为 B+ 树索引和 Hash 索引两类。</p>
<ul>
<li>B+树索引又称为 BTREE 索引，主要采用B+ 树结构，基于这种结构构建索引，表中每一行都会在索引上有一个对应值，B+树的查找时间复杂度为 O(H)，H为树高，且可以保证树高始终处于可能的最小值。B+树可以进行全键值、键值范围和键值前缀查询，也可以对查询结果进行 ORDER BY 排序，主要是得益于倒数第二条特性，所有的值在倒数第二层以升序排列，且有指针连接。</li>
<li>哈希索引又称为散列索引，使用哈希表作为存储结构，哈希索引最大的特点是访问单条记录速度快，但也存在一些缺点：
<ul>
<li>MySQL 需要读取表中索引列的值来参与哈希计算，而哈希计算是一个比较耗时的操作，也就是说，相比 B+ 树索引，建立哈希索引需要耗费更多的时间；</li>
<li>不能使用哈希索引排序；</li>
<li>哈希索引只支持等值查询，比如 “=”，“IN()”，“&lt;=&gt;”</li>
<li>哈希索引不支持键的部分匹配，因为在计算哈希值的时候是通过整个索引值来计算的。</li>
</ul>
</li>
</ul>
<p>如果按存储方式分，可以分为聚簇索引和非聚簇索引</p>
<ul>
<li>找到了索引就找到了需要的数据，那么这个索引就是聚簇索引</li>
<li>索引的存储和数据的存储是分离的，也就是说找到了索引但没找到数据，需要根据索引上的值(主键)再次回表查询,非聚簇索引也叫做辅助索引。</li>
</ul>
<p>如果按<strong>逻辑</strong>区分，MySQL 的索引可以分为5类</p>
<ul>
<li>
<p>普通索引：MySQL 中最基本的索引类型，没有任何限制，唯一任务就是加快系统对数据的访问速度。普通索引允许在定义索引的列中插入重复值和空值。创建普通索引时，通常使用的关键字是 INDEX 和 KEY。比如，在 tb_student 表中的 id 字段上建立名为 index_id 的索引，语句如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">CREATE</span> <span class="k">INDEX</span> <span class="n">index_id</span> <span class="k">ON</span> <span class="nf">tb_student</span><span class="p">(</span><span class="n">id</span><span class="p">);</span>
</code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>唯一索引：与普通索引类似，不同的是创建唯一性索引的目的不是为了提高访问速度，而是为了避免数据出现重复。唯一索引列的值必须唯一，允许有空值，如果是组合索引，则列值的组合必须唯一。创建唯一索引通常使用 UNIQUE 关键字。比如，在 tb_student 表中的 id 字段上建立名为 index_id 的索引，SQL 语句如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">CREATE</span> <span class="k">UNIQUE</span> <span class="k">INDEX</span> <span class="n">index_id</span> <span class="k">ON</span> <span class="nf">tb_student</span><span class="p">(</span><span class="n">id</span><span class="p">);</span>
</code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>主键索引：专门为主键字段创建的索引，是一种特殊的唯一索引，不允许值重复或者值为空。创建主键索引通常使用 PRIMARY KEY 关键字，不能使用 CREATE INDEX 语句创建主键索引。</p>
</li>
<li>
<p>空间索引：空间索引是对空间数据类型的字段建立的索引，使用 SPATIAL 关键字进行扩展。创建空间索引的列必须将其声明为 NOT NULL，空间索引只能在存储引擎为 MyISAM 的表中创建。空间索引主要用于地理空间数据类型 GEOMETRY。对于初学者来说，这类索引很少会用到。下面在 tb_student 表中的 line 字段上建立名为 index_line 的索引，SQL 语句如下，其中，tb_student 表的存储引擎必须是 MyISAM，line 字段必须为空间数据类型，而且是非空的。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">CREATE</span> <span class="k">SPATIAL</span> <span class="k">INDEX</span> <span class="n">index_line</span> <span class="k">ON</span> <span class="nf">tb_student</span><span class="p">(</span><span class="n">line</span><span class="p">);</span>
</code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>全文索引：用来查找文本中的关键字，只能在 CHAR、VARCHAR 或 TEXT 类型的列上创建。在 MySQL 中只有 MyISAM 存储引擎支持全文索引。全文索引允许在索引列中插入重复值和空值。对于大容量的数据表，生成全文索引非常消耗时间和硬盘空间。创建全文索引使用 FULLTEXT 关键字。在 tb_student 表中的 info 字段上建立名为 index_info 的全文索引，SQL 语句如下，其中，index_info 的存储引擎必须是 MyISAM，info 字段必须是 CHAR、VARCHAR 和 TEXT 等类型。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">CREATE</span> <span class="k">FULLTEXT</span> <span class="k">INDEX</span> <span class="n">index_info</span> <span class="k">ON</span> <span class="nf">tb_student</span><span class="p">(</span><span class="n">info</span><span class="p">);</span>
</code></pre></td></tr></table>
</div>
</div></li>
</ul>
<p>如果按实际使用区分，索引通常被分为单列索引和组合索引</p>
<ul>
<li>
<p><strong>单列索引</strong>就是索引只包含原表的一个列，仅根据该列的值进行索引。单列索引可以是普通索引，也可以是唯一索引或全文索引。下面在 tb_student 表中的 address 字段上建立名为 index_addr 的单列索引，address 字段的数据类型为 VARCHAR(20)，索引的数据类型为 CHAR(4)。SQL 语句如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">CREATE</span> <span class="k">INDEX</span> <span class="n">index_addr</span> <span class="k">ON</span> <span class="nf">tb_student</span><span class="p">(</span><span class="nf">address</span><span class="p">(</span><span class="mi">4</span><span class="p">));</span>
</code></pre></td></tr></table>
</div>
</div><p>这样，查询时可以只查询 address 字段的前 4 个字符，而不需要全部查询。</p>
</li>
<li>
<p><strong>组合索引</strong>又称为符合索引或多列索引，是将原表的多个列共同组成一个索引，可以通过这几个字段进行查询，但是，只有查询条件中使用了这些字段中第一个字段时，索引才会被使用。例如，在表中的 id、name 和 sex 字段上建立一个多列索引，那么，只有查询条件使用了 id 字段时，该索引才会被使用</p>
<p>下面在 tb_student 表中的 name 和 address 字段上建立名为 index_na 的索引，SQL 语句如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">CREATE</span> <span class="k">INDEX</span> <span class="n">index_na</span> <span class="k">ON</span> <span class="nf">tb_student</span><span class="p">(</span><span class="n">name</span><span class="p">,</span><span class="n">address</span><span class="p">);</span>
</code></pre></td></tr></table>
</div>
</div><p>该索引创建好了以后，查询条件中必须有 name 字段才能使用索引。</p>
<p>一个表可以有多个单列索引，但这些索引不是组合索引。一个组合索引实质上为表的查询提供了多个索引，以此来加快查询速度。比如，在一个表中创建了一个组合索引(c1，c2，c3)，在实际查询中，系统用来实际加速的索引有三个：单个索引(c1)、双列索引(c1，c2)和多列索引(c1，c2，c3)。</p>
</li>
</ul>
<p>每种存储引擎所支持的索引类型不一定完全相同，如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">InnoDB 支持事务，支持行级别锁定，支持 B-tree、Full-text 等索引，不支持 Hash 索引；
MyISAM 不支持事务，支持表级别锁定，支持 B-tree、Full-text 等索引，不支持 Hash 索引；
Memory 不支持事务，支持表级别锁定，支持 B-tree、Hash 等索引，不支持 Full-text 索引；
NDB 支持事务，支持行级别锁定，支持 Hash 索引，不支持 B-tree、Full-text 等索引；
Archive 不支持事务，支持表级别锁定，不支持 B-tree、Hash、Full-text 等索引；
</code></pre></td></tr></table>
</div>
</div><h3 id="23-创建索引">2.3 创建索引</h3>
<p>MySQL 提供了三种创建索引的办法。</p>
<p>第一种是上一小节提到的使用 CREATE INDEX 语句，语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">CREATE</span> <span class="k">INDEX</span> <span class="o">&lt;</span><span class="err">索引名</span><span class="o">&gt;</span> <span class="k">ON</span> <span class="o">&lt;</span><span class="err">表名</span><span class="o">&gt;</span> <span class="p">(</span><span class="o">&lt;</span><span class="err">列名</span><span class="o">&gt;</span> <span class="p">[</span><span class="o">&lt;</span><span class="err">长度</span><span class="o">&gt;</span><span class="p">]</span> <span class="p">[</span><span class="k">ASC</span><span class="o">|</span><span class="k">DESC</span><span class="p">])</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li><code>&lt;长度&gt;</code>：可选项。指定使用列前的 length 个字符来创建索引。使用列的一部分创建索引有利于减小索引文件的大小，节省索引列所占的空间。在某些情况下，只能对列的前缀进行索引。索引列的长度有一个最大上限 255 个字节（MyISAM 和 InnoDB 表的最大上限为 1000 个字节），如果索引列的长度超过了这个上限，就只能用列的前缀进行索引。另外，BLOB 或 TEXT 类型的列也必须使用前缀索引。</li>
<li><code>ASC|DESC</code>：可选项。<code>ASC</code>指定索引按照升序来排列，<code>DESC</code>指定索引按照降序来排列，默认为<code>ASC</code>。</li>
</ul>
<p>第二种是在创建表（CREATE TABLE）的同时建立索引，只需要在建表语句中添加下面的语句即可</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">CONSTRAINT</span> <span class="k">PRIMARY</span> <span class="k">KEY</span> <span class="p">[</span><span class="err">索引类型</span><span class="p">]</span> <span class="p">(</span><span class="o">&lt;</span><span class="err">列名</span><span class="o">&gt;</span><span class="p">,</span><span class="err">…</span><span class="p">)</span> <span class="c1"># 表示在创建新表的同时创建该表的主键
</span><span class="c1"></span><span class="k">KEY</span> <span class="o">|</span> <span class="k">INDEX</span> <span class="p">[</span><span class="o">&lt;</span><span class="err">索引名</span><span class="o">&gt;</span><span class="p">]</span> <span class="p">[</span><span class="o">&lt;</span><span class="err">索引类型</span><span class="o">&gt;</span><span class="p">]</span> <span class="p">(</span><span class="o">&lt;</span><span class="err">列名</span><span class="o">&gt;</span><span class="p">,</span><span class="err">…</span><span class="p">)</span> <span class="c1"># 创建新表的同时创建该表的索引
</span><span class="c1"></span><span class="k">UNIQUE</span> <span class="p">[</span> <span class="k">INDEX</span> <span class="o">|</span> <span class="k">KEY</span><span class="p">]</span> <span class="p">[</span><span class="o">&lt;</span><span class="err">索引名</span><span class="o">&gt;</span><span class="p">]</span> <span class="p">[</span><span class="o">&lt;</span><span class="err">索引类型</span><span class="o">&gt;</span><span class="p">]</span> <span class="p">(</span><span class="o">&lt;</span><span class="err">列名</span><span class="o">&gt;</span><span class="p">,</span><span class="err">…</span><span class="p">)</span> <span class="c1"># 创建新表的同时创建该表的唯一性索引
</span><span class="c1"></span><span class="k">FOREIGN</span> <span class="k">KEY</span> <span class="o">&lt;</span><span class="err">索引名</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="err">列名</span><span class="o">&gt;</span> <span class="c1"># 创建新表的同时创建该表的外键
</span></code></pre></td></tr></table>
</div>
</div><p>一个在创建表时建立普通索引的例子如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">mysql&gt; CREATE TABLE tb_stu_info
    -&gt; (
    -&gt; id INT NOT NULL,
    -&gt; name CHAR(45) DEFAULT NULL,
    -&gt; dept_id INT DEFAULT NULL,
    -&gt; age INT DEFAULT NULL,
    -&gt; height INT DEFAULT NULL,
    -&gt; INDEX(height)
    -&gt; );
Query OK，0 rows affected (0.40 sec)
</code></pre></td></tr></table>
</div>
</div><p>一个在创建表时建立唯一索引的例子如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">tb_stu_info2</span>
    <span class="o">-&gt;</span> <span class="p">(</span>
    <span class="o">-&gt;</span> <span class="n">id</span> <span class="kt">INT</span> <span class="k">NOT</span> <span class="no">NULL</span><span class="p">,</span>
    <span class="o">-&gt;</span> <span class="n">name</span> <span class="kt">CHAR</span><span class="p">(</span><span class="mi">45</span><span class="p">)</span> <span class="k">DEFAULT</span> <span class="no">NULL</span><span class="p">,</span>
    <span class="o">-&gt;</span> <span class="n">dept_id</span> <span class="kt">INT</span> <span class="k">DEFAULT</span> <span class="no">NULL</span><span class="p">,</span>
    <span class="o">-&gt;</span> <span class="n">age</span> <span class="kt">INT</span> <span class="k">DEFAULT</span> <span class="no">NULL</span><span class="p">,</span>
    <span class="o">-&gt;</span> <span class="n">height</span> <span class="kt">INT</span> <span class="k">DEFAULT</span> <span class="no">NULL</span><span class="p">,</span>
    <span class="o">-&gt;</span> <span class="k">UNIQUE</span> <span class="k">INDEX</span><span class="p">(</span><span class="n">height</span><span class="p">)</span>
    <span class="o">-&gt;</span> <span class="p">);</span>
<span class="n">Query</span> <span class="n">OK</span><span class="err">，</span><span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">40</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>第三种是在利用 ALTER TABLE 语句修改表的时候向该表添加索引，方法是添加下面的语句</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">ADD</span> <span class="k">INDEX</span> <span class="p">[</span><span class="o">&lt;</span><span class="err">索引名</span><span class="o">&gt;</span><span class="p">]</span> <span class="p">[</span><span class="o">&lt;</span><span class="err">索引类型</span><span class="o">&gt;</span><span class="p">]</span> <span class="p">(</span><span class="o">&lt;</span><span class="err">列名</span><span class="o">&gt;</span><span class="p">,</span><span class="err">…</span><span class="p">)</span> <span class="c1"># 修改表的同时为该表添加索引
</span><span class="c1"></span><span class="k">ADD</span> <span class="k">PRIMARY</span> <span class="k">KEY</span> <span class="p">[</span><span class="o">&lt;</span><span class="err">索引类型</span><span class="o">&gt;</span><span class="p">]</span> <span class="p">(</span><span class="o">&lt;</span><span class="err">列名</span><span class="o">&gt;</span><span class="p">,</span><span class="err">…</span><span class="p">)</span> <span class="c1"># 表示在修改表的同时为该表添加主键
</span><span class="c1"></span><span class="k">ADD</span> <span class="k">UNIQUE</span> <span class="p">[</span> <span class="k">INDEX</span> <span class="o">|</span> <span class="k">KEY</span><span class="p">]</span> <span class="p">[</span><span class="o">&lt;</span><span class="err">索引名</span><span class="o">&gt;</span><span class="p">]</span> <span class="p">[</span><span class="o">&lt;</span><span class="err">索引类型</span><span class="o">&gt;</span><span class="p">]</span> <span class="p">(</span><span class="o">&lt;</span><span class="err">列名</span><span class="o">&gt;</span><span class="p">,</span><span class="err">…</span><span class="p">)</span> <span class="c1"># 修改表的同时为该表添加唯一性索引
</span><span class="c1"></span><span class="k">ADD</span> <span class="k">FOREIGN</span> <span class="k">KEY</span> <span class="p">[</span><span class="o">&lt;</span><span class="err">索引名</span><span class="o">&gt;</span><span class="p">]</span> <span class="p">(</span><span class="o">&lt;</span><span class="err">列名</span><span class="o">&gt;</span><span class="p">,</span><span class="err">…</span><span class="p">)</span> <span class="c1"># 修改表的同时为该表添加外键
</span></code></pre></td></tr></table>
</div>
</div><h3 id="24-查看索引">2.4 查看索引</h3>
<p>索引创建完成后，使用 SHOW INDEX 语句可以查看表中创建的索引，语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">SHOW</span> <span class="k">INDEX</span> <span class="k">FROM</span> <span class="o">&lt;</span><span class="err">表名</span><span class="o">&gt;</span> <span class="p">[</span> <span class="k">FROM</span> <span class="o">&lt;</span><span class="err">数据库名</span><span class="o">&gt;</span><span class="p">]</span>
</code></pre></td></tr></table>
</div>
</div><p>一个例子如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SHOW</span> <span class="k">INDEX</span> <span class="k">FROM</span> <span class="n">tb_stu_info2</span><span class="err">\</span><span class="n">G</span>
<span class="o">***************************</span> <span class="mi">1</span><span class="p">.</span> <span class="n">row</span> <span class="o">***************************</span>
        <span class="k">Table</span><span class="p">:</span> <span class="n">tb_stu_info2</span>
   <span class="n">Non_unique</span><span class="p">:</span> <span class="mi">0</span>
     <span class="n">Key_name</span><span class="p">:</span> <span class="n">height</span>
 <span class="n">Seq_in_index</span><span class="p">:</span> <span class="mi">1</span>
  <span class="n">Column_name</span><span class="p">:</span> <span class="n">height</span>
    <span class="n">Collation</span><span class="p">:</span> <span class="n">A</span>
  <span class="n">Cardinality</span><span class="p">:</span> <span class="mi">0</span>
     <span class="n">Sub_part</span><span class="p">:</span> <span class="no">NULL</span>
       <span class="n">Packed</span><span class="p">:</span> <span class="no">NULL</span>
         <span class="no">Null</span><span class="p">:</span> <span class="n">YES</span>
   <span class="n">Index_type</span><span class="p">:</span> <span class="n">BTREE</span>
      <span class="n">Comment</span><span class="p">:</span>
<span class="n">Index_comment</span><span class="p">:</span>
<span class="mi">1</span> <span class="n">row</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">03</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>其中各参数说明如下表</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>Table</td>
<td>表示创建索引的数据表名，这里是 tb_stu_info2 数据表。</td>
</tr>
<tr>
<td>Non_unique</td>
<td>表示该索引是否是唯一索引。若不是唯一索引，则该列的值为 1；若是唯一索引，则该列的值为 0。</td>
</tr>
<tr>
<td>Key_name</td>
<td>表示索引的名称。</td>
</tr>
<tr>
<td>Seq_in_index</td>
<td>表示该列在索引中的位置，如果索引是单列的，则该列的值为 1；如果索引是组合索引，则该列的值为每列在索引定义中的顺序。</td>
</tr>
<tr>
<td>Column_name</td>
<td>表示定义索引的列字段。</td>
</tr>
<tr>
<td>Collation</td>
<td>表示列以何种顺序存储在索引中。在 MySQL 中，升序显示值“A”（升序），若显示为 NULL，则表示无分类。</td>
</tr>
<tr>
<td>Cardinality</td>
<td>索引中唯一值数目的估计值。基数根据被存储为整数的统计数据计数，所以即使对于小型表，该值也没有必要是精确的。基数越大，当进行联合时，MySQL 使用该索引的机会就越大。</td>
</tr>
<tr>
<td>Sub_part</td>
<td>表示列中被编入索引的字符的数量。若列只是部分被编入索引，则该列的值为被编入索引的字符的数目；若整列被编入索引，则该列的值为 NULL。</td>
</tr>
<tr>
<td>Packed</td>
<td>指示关键字如何被压缩。若没有被压缩，值为 NULL。</td>
</tr>
<tr>
<td>Null</td>
<td>用于显示索引列中是否包含 NULL。若列含有 NULL，该列的值为 YES。若没有，则该列的值为 NO。</td>
</tr>
<tr>
<td>Index_type</td>
<td>显示索引使用的类型和方法（BTREE、FULLTEXT、HASH、RTREE）。</td>
</tr>
<tr>
<td>Comment</td>
<td>显示评注。</td>
</tr>
</tbody>
</table>
<h3 id="25-修改和删除索引">2.5 修改和删除索引</h3>
<p>删除索引是指将表中已经存在的索引删除掉。不用的索引建议进行删除，因为它们会降低表的更新速度，影响数据库的性能。对于这样的索引，应该将其删除。</p>
<p>在 MySQL 中修改索引可以通过删除原索引，再根据需要创建一个同名的索引，从而实现修改索引的操作。</p>
<p>删除索引使用 DROP INDEX 语句，语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">DROP</span> <span class="k">INDEX</span> <span class="o">&lt;</span><span class="err">索引名</span><span class="o">&gt;</span> <span class="k">ON</span> <span class="o">&lt;</span><span class="err">表名</span><span class="o">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>也可以使用 ALTER TABLE 语句，方法是在该语句中添加下面的某个子句</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">DROP</span> <span class="k">PRIMARY</span> <span class="k">KEY</span> <span class="c1">#表示删除表中的主键。一个表只有一个主键，主键也是一个索引。
</span><span class="c1"></span><span class="k">DROP</span> <span class="k">INDEX</span> <span class="n">index_name</span> <span class="c1">#表示删除名称为 index_name 的索引。
</span><span class="c1"></span><span class="k">DROP</span> <span class="k">FOREIGN</span> <span class="k">KEY</span> <span class="n">fk_symbol</span> <span class="c1"># 表示删除外键。
</span></code></pre></td></tr></table>
</div>
</div><p>注意：如果删除的列是索引的组成部分，那么在删除该列时，也会将该列从索引中删除；如果组成索引的所有列都被删除，那么整个索引将被删除。</p>
<p>删除索引的一个例子如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">DROP</span> <span class="k">INDEX</span> <span class="n">height</span>
    <span class="o">-&gt;</span> <span class="k">ON</span> <span class="n">tb_stu_info</span><span class="p">;</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">27</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">Records</span><span class="p">:</span> <span class="mi">0</span>  <span class="n">Duplicates</span><span class="p">:</span> <span class="mi">0</span>  <span class="n">Warnings</span><span class="p">:</span> <span class="mi">0</span>
<span class="c1"># 或者
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">tb_stu_info2</span>
    <span class="o">-&gt;</span> <span class="k">DROP</span> <span class="k">INDEX</span> <span class="n">height</span><span class="p">;</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">13</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">Records</span><span class="p">:</span> <span class="mi">0</span>  <span class="n">Duplicates</span><span class="p">:</span> <span class="mi">0</span>  <span class="n">Warnings</span><span class="p">:</span> <span class="mi">0</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="26-索引的设计原则">2.6 索引的设计原则</h3>
<p>索引的设计可以遵循一些已有的原则，创建索引的时候应尽量考虑符合这些原则，便于提升索引的使用效率，更高效的使用索引。本节将介绍一些索引的设计原则。</p>
<ol>
<li>
<p>选择唯一性索引：唯一性索引的值是唯一的，可以更快速的通过该索引来确定某条记录。例如，学生表中学号是具有唯一性的字段。为该字段建立唯一性索引可以很快的确定某个学生的信息。如果使用姓名的话，可能存在同名现象，从而降低查询速度。</p>
</li>
<li>
<p>为经常需要排序、分组和联合操作的字段建立索引：经常需要 ORDER BY、GROUP BY、DISTINCT 和 UNION 等操作的字段，排序操作会浪费很多时间。如果为其建立索引，可以有效地避免排序操作。</p>
</li>
<li>
<p>为常作为查询条件的字段建立索引：如果某个字段经常用来做查询条件，那么该字段的查询速度会影响整个表的查询速度。因此，为这样的字段建立索引，可以提高整个表的查询速度。注意：常查询条件的字段不一定是所要选择的列，换句话说，最适合索引的列是出现在 WHERE 子句中的列，或连接子句中指定的列，而不是出现在 SELECT 关键字后的选择列表中的列。</p>
</li>
<li>
<p>限制索引的数目：索引的数目不是“越多越好”。每个索引都需要占用磁盘空间，索引越多，需要的磁盘空间就越大。在修改表的内容时，索引必须进行更新，有时还可能需要重构。因此，索引越多，更新表的时间就越长。如果有一个索引很少利用或从不使用，那么会不必要地减缓表的修改速度。此外，MySQL 在生成一个执行计划时，要考虑各个索引，这也要花费时间。创建多余的索引给查询优化带来了更多的工作。索引太多，也可能会使 MySQL 选择不到所要使用的最佳索引。</p>
</li>
<li>
<p>尽量使用数据量少的索引：如果索引的值很长，那么查询的速度会受到影响。例如，对一个 CHAR(100) 类型的字段进行全文检索需要的时间肯定要比对 CHAR(10) 类型的字段需要的时间要多。</p>
</li>
<li>
<p>数据量小的表最好不要使用索引：由于数据较小，查询花费的时间可能比遍历索引的时间还要短，索引可能不会产生优化效果。</p>
</li>
<li>
<p>尽量使用前缀来索引：如果索引字段的值很长，最好使用值的前缀来索引。例如，TEXT 和 BLOG 类型的字段，进行全文检索会很浪费时间。如果只检索字段的前面的若干个字符，这样可以提高检索速度。</p>
</li>
<li>
<p>删除不再使用或者很少使用的索引：表中的数据被大量更新，或者数据的使用方式被改变后，原有的一些索引可能不再需要。应该定期找出这些索引，将它们删除，从而减少索引对更新操作的影响。</p>
</li>
</ol>
<p>总之，选择索引的最终目的是为了使查询的速度变快，上面给出的原则是最基本的准则，但不能只拘泥于上面的准则。应该在学习和工作中不断的实践，根据应用的实际情况进行分析和判断，选择最合适的索引方式。</p>]]></description></item><item><title>Mysql学习6-操作表中数据</title><link>https://shuzang.github.io/mysql-learning-6-data-query-language/</link><pubDate>Sun, 24 May 2020 17:03:00 +0800</pubDate><author>作者</author><guid>https://shuzang.github.io/mysql-learning-6-data-query-language/</guid><description><![CDATA[<p>本文详细介绍 <strong>对表中数据</strong> 的增删查改操作。</p>
<h2 id="1-查询数据">1. 查询数据</h2>
<p>查询表中数据所涉及的命令是最多的，一个基本的语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">SELECT</span> <span class="err">{</span><span class="o">*</span> <span class="o">|</span> <span class="o">&lt;</span><span class="err">字段列名</span><span class="o">&gt;</span><span class="err">}</span>
<span class="k">FROM</span> <span class="o">&lt;</span><span class="err">表</span> <span class="mi">1</span><span class="o">&gt;</span><span class="p">,</span> <span class="o">&lt;</span><span class="err">表</span> <span class="mi">2</span><span class="o">&gt;</span><span class="err">…</span>
<span class="o">&lt;</span><span class="n">join_type</span><span class="o">&gt;</span> <span class="k">join</span> <span class="o">&lt;</span><span class="n">join_table</span><span class="o">&gt;</span> <span class="k">on</span> <span class="o">&lt;</span><span class="n">join_condition</span><span class="o">&gt;</span>
<span class="k">WHERE</span> <span class="o">&lt;</span><span class="err">表达式</span><span class="o">&gt;</span>
<span class="k">GROUP</span> <span class="k">BY</span> <span class="o">&lt;</span><span class="k">group</span> <span class="k">by</span> <span class="n">definition</span><span class="o">&gt;</span>
<span class="k">HAVING</span> <span class="o">&lt;</span><span class="n">expression</span><span class="o">&gt;</span> <span class="p">[</span><span class="err">{</span><span class="o">&lt;</span><span class="n">operator</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">expression</span><span class="o">&gt;</span><span class="err">}…</span><span class="p">]</span>
<span class="k">ORDER</span> <span class="k">BY</span> <span class="o">&lt;</span><span class="k">order</span> <span class="k">by</span> <span class="n">definition</span><span class="o">&gt;</span>
<span class="k">LIMIT</span> <span class="p">[</span><span class="o">&lt;</span><span class="n">offset</span><span class="o">&gt;</span><span class="p">,]</span> <span class="o">&lt;</span><span class="n">row</span> <span class="n">count</span><span class="o">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>这里简单解释各条子句的含义，</p>
<ul>
<li><code>SELECT {*|&lt;字段列名&gt;}</code> 表示所要查询字段的名称。</li>
<li><code>FROM &lt;表 1&gt;，&lt;表 2&gt;…</code>，表示查询数据的来源，可以是单个或多个表。</li>
<li><code>WHERE &lt;表达式&gt;</code> 限定查询数据必须满足的查询条件。</li>
<li><code>GROUP BY&lt; 字段 &gt;</code> 告诉 MySQL 如何显示查询出来的数据，并按照指定的字段分组。</li>
<li><code>ORDER BY&lt; 字段 &gt;</code> 告诉 MySQL 按什么样的顺序显示查询出来的数据。</li>
<li><code>LIMIT[，]</code>，该子句告诉 MySQL 每次显示多少条查询出来的数据。</li>
</ul>
<h3 id="11-基本查询">1.1 基本查询</h3>
<p>使用 <code>*</code> 通配符可以查询整个表的数据</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="err">表名</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><p>下面的表将是后面所有语句执行的基表</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">tb_students_info</span><span class="p">;</span>
<span class="o">+----+--------+---------+------+------+--------+------------+</span>
<span class="o">|</span> <span class="n">id</span> <span class="o">|</span> <span class="n">name</span>   <span class="o">|</span> <span class="n">dept_id</span> <span class="o">|</span> <span class="n">age</span>  <span class="o">|</span> <span class="n">sex</span>  <span class="o">|</span> <span class="n">height</span> <span class="o">|</span> <span class="n">login_date</span> <span class="o">|</span>
<span class="o">+----+--------+---------+------+------+--------+------------+</span>
<span class="o">|</span>  <span class="mi">1</span> <span class="o">|</span> <span class="n">Dany</span>   <span class="o">|</span>       <span class="mi">1</span> <span class="o">|</span>   <span class="mi">25</span> <span class="o">|</span> <span class="n">F</span>    <span class="o">|</span>    <span class="mi">160</span> <span class="o">|</span> <span class="mi">2015</span><span class="o">-</span><span class="mi">09</span><span class="o">-</span><span class="mi">10</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">2</span> <span class="o">|</span> <span class="n">Green</span>  <span class="o">|</span>       <span class="mi">3</span> <span class="o">|</span>   <span class="mi">23</span> <span class="o">|</span> <span class="n">F</span>    <span class="o">|</span>    <span class="mi">158</span> <span class="o">|</span> <span class="mi">2016</span><span class="o">-</span><span class="mi">10</span><span class="o">-</span><span class="mi">22</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">3</span> <span class="o">|</span> <span class="n">Henry</span>  <span class="o">|</span>       <span class="mi">2</span> <span class="o">|</span>   <span class="mi">23</span> <span class="o">|</span> <span class="n">M</span>    <span class="o">|</span>    <span class="mi">185</span> <span class="o">|</span> <span class="mi">2015</span><span class="o">-</span><span class="mi">05</span><span class="o">-</span><span class="mi">31</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">4</span> <span class="o">|</span> <span class="n">Jane</span>   <span class="o">|</span>       <span class="mi">1</span> <span class="o">|</span>   <span class="mi">22</span> <span class="o">|</span> <span class="n">F</span>    <span class="o">|</span>    <span class="mi">162</span> <span class="o">|</span> <span class="mi">2016</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">20</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">5</span> <span class="o">|</span> <span class="n">Jim</span>    <span class="o">|</span>       <span class="mi">1</span> <span class="o">|</span>   <span class="mi">24</span> <span class="o">|</span> <span class="n">M</span>    <span class="o">|</span>    <span class="mi">175</span> <span class="o">|</span> <span class="mi">2016</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">15</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">6</span> <span class="o">|</span> <span class="n">John</span>   <span class="o">|</span>       <span class="mi">2</span> <span class="o">|</span>   <span class="mi">21</span> <span class="o">|</span> <span class="n">M</span>    <span class="o">|</span>    <span class="mi">172</span> <span class="o">|</span> <span class="mi">2015</span><span class="o">-</span><span class="mi">11</span><span class="o">-</span><span class="mi">11</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">7</span> <span class="o">|</span> <span class="n">Lily</span>   <span class="o">|</span>       <span class="mi">6</span> <span class="o">|</span>   <span class="mi">22</span> <span class="o">|</span> <span class="n">F</span>    <span class="o">|</span>    <span class="mi">165</span> <span class="o">|</span> <span class="mi">2016</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">26</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">8</span> <span class="o">|</span> <span class="n">Susan</span>  <span class="o">|</span>       <span class="mi">4</span> <span class="o">|</span>   <span class="mi">23</span> <span class="o">|</span> <span class="n">F</span>    <span class="o">|</span>    <span class="mi">170</span> <span class="o">|</span> <span class="mi">2015</span><span class="o">-</span><span class="mi">10</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">9</span> <span class="o">|</span> <span class="n">Thomas</span> <span class="o">|</span>       <span class="mi">3</span> <span class="o">|</span>   <span class="mi">22</span> <span class="o">|</span> <span class="n">M</span>    <span class="o">|</span>    <span class="mi">178</span> <span class="o">|</span> <span class="mi">2016</span><span class="o">-</span><span class="mi">06</span><span class="o">-</span><span class="mi">07</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">10</span> <span class="o">|</span> <span class="n">Tom</span>    <span class="o">|</span>       <span class="mi">4</span> <span class="o">|</span>   <span class="mi">23</span> <span class="o">|</span> <span class="n">M</span>    <span class="o">|</span>    <span class="mi">165</span> <span class="o">|</span> <span class="mi">2016</span><span class="o">-</span><span class="mi">08</span><span class="o">-</span><span class="mi">05</span> <span class="o">|</span>
<span class="o">+----+--------+---------+------+------+--------+------------+</span>
<span class="mi">10</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">26</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>如果在 SELECT 命令后指定字段名，则结果只显示这些字段，相当于投影操作</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">SELECT</span> <span class="o">&lt;</span><span class="err">字段名</span><span class="mi">1</span><span class="o">&gt;</span><span class="p">,</span><span class="o">&lt;</span><span class="err">字段名</span><span class="mi">2</span><span class="o">&gt;</span><span class="p">,</span><span class="err">…</span><span class="p">,</span><span class="o">&lt;</span><span class="err">字段名</span><span class="n">n</span><span class="o">&gt;</span> <span class="k">FROM</span> <span class="o">&lt;</span> <span class="err">表名</span> <span class="o">&gt;</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><p>查询多个字段的示例如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="n">id</span><span class="p">,</span><span class="n">name</span><span class="p">,</span><span class="n">height</span>
    <span class="o">-&gt;</span> <span class="k">FROM</span> <span class="n">tb_students_info</span><span class="p">;</span>
<span class="o">+----+--------+--------+</span>
<span class="o">|</span> <span class="n">id</span> <span class="o">|</span> <span class="n">name</span>   <span class="o">|</span> <span class="n">height</span> <span class="o">|</span>
<span class="o">+----+--------+--------+</span>
<span class="o">|</span>  <span class="mi">1</span> <span class="o">|</span> <span class="n">Dany</span>   <span class="o">|</span>    <span class="mi">160</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">2</span> <span class="o">|</span> <span class="n">Green</span>  <span class="o">|</span>    <span class="mi">158</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">3</span> <span class="o">|</span> <span class="n">Henry</span>  <span class="o">|</span>    <span class="mi">185</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">4</span> <span class="o">|</span> <span class="n">Jane</span>   <span class="o">|</span>    <span class="mi">162</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">5</span> <span class="o">|</span> <span class="n">Jim</span>    <span class="o">|</span>    <span class="mi">175</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">6</span> <span class="o">|</span> <span class="n">John</span>   <span class="o">|</span>    <span class="mi">172</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">7</span> <span class="o">|</span> <span class="n">Lily</span>   <span class="o">|</span>    <span class="mi">165</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">8</span> <span class="o">|</span> <span class="n">Susan</span>  <span class="o">|</span>    <span class="mi">170</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">9</span> <span class="o">|</span> <span class="n">Thomas</span> <span class="o">|</span>    <span class="mi">178</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">10</span> <span class="o">|</span> <span class="n">Tom</span>    <span class="o">|</span>    <span class="mi">165</span> <span class="o">|</span>
<span class="o">+----+--------+--------+</span>
<span class="mi">10</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="12-条件查询">1.2 条件查询</h3>
<p>使用 WHERE 关键字来指定查询条件，相当于选择操作。查询条件可以是：</p>
<ul>
<li>带比较运算符和逻辑运算符的查询条件</li>
<li>带 IS NULL 或 IS NOT NULL 关键字的查询条件</li>
<li>带 BETWEEN AND 关键字的查询条件</li>
<li>带 IN 或 NOT IN 关键字的查询条件</li>
<li>带 LIKE 关键字的查询条件</li>
</ul>
<p>查询条件可以是一条，也可以是多条，如下例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="c1"># 单一条件
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="n">name</span><span class="p">,</span><span class="n">height</span> <span class="k">FROM</span> <span class="n">tb_students_info</span>
    <span class="o">-&gt;</span> <span class="k">WHERE</span> <span class="n">height</span><span class="o">=</span><span class="mi">170</span><span class="p">;</span>
<span class="o">+-------+--------+</span>
<span class="o">|</span> <span class="n">name</span>  <span class="o">|</span> <span class="n">height</span> <span class="o">|</span>
<span class="o">+-------+--------+</span>
<span class="o">|</span> <span class="n">Susan</span> <span class="o">|</span>    <span class="mi">170</span> <span class="o">|</span>
<span class="o">+-------+--------+</span>
<span class="mi">1</span> <span class="n">row</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">17</span> <span class="n">sec</span><span class="p">)</span>
<span class="c1"># 多条件
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="n">name</span><span class="p">,</span><span class="n">age</span><span class="p">,</span><span class="n">height</span> <span class="k">FROM</span> <span class="n">tb_students_info</span> 
    <span class="o">-&gt;</span> <span class="k">WHERE</span> <span class="n">age</span><span class="o">&gt;</span><span class="mi">21</span> <span class="k">AND</span> <span class="n">height</span><span class="o">&gt;=</span><span class="mi">175</span><span class="p">;</span>
<span class="o">+--------+------+--------+</span>
<span class="o">|</span> <span class="n">name</span>   <span class="o">|</span> <span class="n">age</span>  <span class="o">|</span> <span class="n">height</span> <span class="o">|</span>
<span class="o">+--------+------+--------+</span>
<span class="o">|</span> <span class="n">Henry</span>  <span class="o">|</span>   <span class="mi">23</span> <span class="o">|</span>    <span class="mi">185</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Jim</span>    <span class="o">|</span>   <span class="mi">24</span> <span class="o">|</span>    <span class="mi">175</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Thomas</span> <span class="o">|</span>   <span class="mi">22</span> <span class="o">|</span>    <span class="mi">178</span> <span class="o">|</span>
<span class="o">+--------+------+--------+</span>
<span class="mi">3</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>比较运算符和逻辑运算符的时候大家都很熟悉，下面介绍其它几种运算</p>
<h4 id="空值查询">空值查询</h4>
<p>IS NULL 和 IS NOT NULL 关键字用来进行判空查询，判断某个元组的分量是不是等于 NULL。</p>
<p>这里要注意的是 MySQL 中空值不等于 0，也不等于空字符串。一个使用示例如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">mysql&gt; SELECT `name`,`login_date` FROM tb_students_info 
    -&gt; WHERE login_date IS NULL;
+--------+------------+
| NAME   | login_date |
+--------+------------+
| Dany   | NULL       |
| Green  | NULL       |
| Henry  | NULL       |
| Jane   | NULL       |
| Thomas | NULL       |
| Tom    | NULL       |
+--------+------------+
6 rows in set (0.01 sec)
</code></pre></td></tr></table>
</div>
</div><h4 id="范围查询">范围查询</h4>
<p>BETWEEN AND 关键字用来进行范围查询，判断某个属性是否在指定的范围内，语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="p">[</span><span class="k">NOT</span><span class="p">]</span> <span class="k">BETWEEN</span> <span class="err">取值</span><span class="mi">1</span> <span class="k">AND</span> <span class="err">取值</span><span class="mi">2</span>
</code></pre></td></tr></table>
</div>
</div><p>使用示例如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="n">name</span><span class="p">,</span><span class="n">age</span> <span class="k">FROM</span> <span class="n">tb_students_info</span> 
    <span class="o">-&gt;</span> <span class="k">WHERE</span> <span class="n">age</span> <span class="k">BETWEEN</span> <span class="mi">20</span> <span class="k">AND</span> <span class="mi">23</span><span class="p">;</span>
<span class="o">+--------+------+</span>
<span class="o">|</span> <span class="n">name</span>   <span class="o">|</span> <span class="n">age</span>  <span class="o">|</span>
<span class="o">+--------+------+</span>
<span class="o">|</span> <span class="n">Green</span>  <span class="o">|</span>   <span class="mi">23</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Henry</span>  <span class="o">|</span>   <span class="mi">23</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Jane</span>   <span class="o">|</span>   <span class="mi">22</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">John</span>   <span class="o">|</span>   <span class="mi">21</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Lily</span>   <span class="o">|</span>   <span class="mi">22</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Susan</span>  <span class="o">|</span>   <span class="mi">23</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Thomas</span> <span class="o">|</span>   <span class="mi">22</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Tom</span>    <span class="o">|</span>   <span class="mi">23</span> <span class="o">|</span>
<span class="o">+--------+------+</span>
<span class="mi">8</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h4 id="innot-in">IN/NOT IN</h4>
<p>MySQL 中的 IN 用来判断表达式的值是否位于给出的列表中；如果是，返回值为 1，否则返回值为 0。语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">expr</span> <span class="k">IN</span> <span class="p">(</span> <span class="n">value1</span><span class="p">,</span> <span class="n">value2</span><span class="p">,</span> <span class="n">value3</span> <span class="p">...</span> <span class="n">valueN</span> <span class="p">)</span>
<span class="n">expr</span> <span class="k">NOT</span> <span class="k">IN</span> <span class="p">(</span> <span class="n">value1</span><span class="p">,</span> <span class="n">value2</span><span class="p">,</span> <span class="n">value3</span> <span class="p">...</span> <span class="n">valueN</span> <span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>示例如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"> <span class="k">SELECT</span> <span class="mi">2</span> <span class="k">IN</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="s1">&#39;this&#39;</span><span class="p">),</span> <span class="s1">&#39;this&#39;</span> <span class="k">NOT</span> <span class="k">IN</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="s1">&#39;this&#39;</span><span class="p">);</span>
<span class="o">+---------------------+------------------------------+</span>
<span class="o">|</span> <span class="mi">2</span> <span class="k">IN</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="s1">&#39;this&#39;</span><span class="p">)</span> <span class="o">|</span> <span class="s1">&#39;this&#39;</span> <span class="k">NOT</span> <span class="k">IN</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="s1">&#39;this&#39;</span><span class="p">)</span> <span class="o">|</span>
<span class="o">+---------------------+------------------------------+</span>
<span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                            <span class="mi">0</span> <span class="o">|</span>
<span class="o">+---------------------+------------------------------+</span>
<span class="mi">1</span> <span class="n">row</span> <span class="k">in</span> <span class="kt">set</span><span class="p">,</span> <span class="mi">2</span> <span class="nf">warnings</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>当 IN 运算符的两侧有一个为空值 NULL 时，如果找不到匹配项，则返回值为 NULL；如果找到了匹配项，则返回值为 1。</p>
<p>NOT IN 的作用和 IN 恰好相反。</p>
<h4 id="模糊查询">模糊查询</h4>
<p>使用 LIKE 关键字可以搜索匹配字段中的指定内容，语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="p">[</span><span class="k">NOT</span><span class="p">]</span> <span class="k">LIKE</span>  <span class="s1">&#39;字符串&#39;</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li>NOT ：可选参数，字段中的内容与指定的字符串不匹配时满足条件。</li>
<li>字符串：指定用来匹配的字符串。“字符串”可以是一个很完整的字符串，也可以包含通配符。</li>
</ul>
<p>LIKE 关键字支持百分号 <code>%</code> 和下划线 <code>_</code> 通配符。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="c1"># %通配符,代表任何长度的字符串，字符串的长度可以为 0
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="n">name</span> <span class="k">FROM</span> <span class="n">tb_students_info</span>
    <span class="o">-&gt;</span> <span class="k">WHERE</span> <span class="n">name</span> <span class="k">LIKE</span> <span class="s1">&#39;T%&#39;</span><span class="p">;</span>
<span class="o">+--------+</span>
<span class="o">|</span> <span class="n">name</span>   <span class="o">|</span>
<span class="o">+--------+</span>
<span class="o">|</span> <span class="n">Thomas</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Tom</span>    <span class="o">|</span>
<span class="o">+--------+</span>
<span class="mi">2</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">12</span> <span class="n">sec</span><span class="p">)</span>
<span class="c1"># _通配符,只能代表单个字符，字符的长度不能为 0
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="n">name</span> <span class="k">FROM</span> <span class="n">tb_students_info</span>
    <span class="o">-&gt;</span> <span class="k">WHERE</span> <span class="n">name</span> <span class="k">LIKE</span> <span class="s1">&#39;____y&#39;</span><span class="p">;</span> <span class="c1"># 4个下划线
</span><span class="c1"></span><span class="o">+-------+</span>
<span class="o">|</span> <span class="n">name</span>  <span class="o">|</span>
<span class="o">+-------+</span>
<span class="o">|</span> <span class="n">Henry</span> <span class="o">|</span>
<span class="o">+-------+</span>
<span class="mi">1</span> <span class="n">row</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>默认情况下，LIKE 关键字匹配字符的时候是不区分大小写的。如果需要区分大小写，可以加入 BINARY 关键字。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="n">name</span> <span class="k">FROM</span> <span class="n">tb_students_info</span> <span class="k">WHERE</span> <span class="n">name</span> <span class="k">LIKE</span> <span class="k">BINARY</span> <span class="s1">&#39;t%&#39;</span><span class="p">;</span>
<span class="n">Empty</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">01</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>如果查询内容中包含通配符，可以使用“\”转义符</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="n">NAME</span> <span class="k">FROM</span> <span class="n">test</span><span class="p">.</span><span class="o">`</span><span class="n">tb_students_info</span><span class="o">`</span> <span class="k">WHERE</span> <span class="n">NAME</span> <span class="k">LIKE</span> <span class="s1">&#39;%\%&#39;</span><span class="p">;</span>
<span class="o">+-------+</span>
<span class="o">|</span> <span class="n">NAME</span>  <span class="o">|</span>
<span class="o">+-------+</span>
<span class="o">|</span> <span class="n">Dany</span><span class="o">%</span> <span class="o">|</span>
<span class="o">+-------+</span>
<span class="mi">1</span> <span class="n">row</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="13-分组查询">1.3 分组查询</h3>
<p>通过 WHERE 子句筛选后，可能会使用 GROUP BY 关键字根据一个或多个字段对查询结果进行分组。语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">GROUP</span> <span class="k">BY</span>  <span class="o">&lt;</span><span class="err">字段名</span><span class="o">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>其中，&lt;字段名&gt; 表示需要分组的字段名称，多个字段时用逗号隔开。</p>
<h4 id="单个字段分组">单个字段分组</h4>
<p>单独使用时，查询结果只显示每个分组的第一条记录，但要记得，每个分组一般不会只有这一条记录</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="o">`</span><span class="n">name</span><span class="o">`</span><span class="p">,</span><span class="o">`</span><span class="n">sex</span><span class="o">`</span> <span class="k">FROM</span> <span class="n">tb_students_info</span> 
    <span class="o">-&gt;</span> <span class="k">GROUP</span> <span class="k">BY</span> <span class="n">sex</span><span class="p">;</span>
<span class="o">+-------+------+</span>
<span class="o">|</span> <span class="n">name</span>  <span class="o">|</span> <span class="n">sex</span>  <span class="o">|</span>
<span class="o">+-------+------+</span>
<span class="o">|</span> <span class="n">Henry</span> <span class="o">|</span> <span class="err">女</span>   <span class="o">|</span>
<span class="o">|</span> <span class="n">Dany</span>  <span class="o">|</span> <span class="err">男</span>   <span class="o">|</span>
<span class="o">+-------+------+</span>
<span class="mi">2</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">01</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>使用 GROUP_CONCAT() 函数可以在一条记录中把该分组所有的结果显示出来</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="o">`</span><span class="n">sex</span><span class="o">`</span><span class="p">,</span> <span class="nf">GROUP_CONCAT</span><span class="p">(</span><span class="n">name</span><span class="p">)</span> <span class="k">FROM</span> <span class="n">tb_students_info</span> 
    <span class="o">-&gt;</span> <span class="k">GROUP</span> <span class="k">BY</span> <span class="n">sex</span><span class="p">;</span>
<span class="o">+------+----------------------------+</span>
<span class="o">|</span> <span class="n">sex</span>  <span class="o">|</span> <span class="nf">GROUP_CONCAT</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>         <span class="o">|</span>
<span class="o">+------+----------------------------+</span>
<span class="o">|</span> <span class="err">女</span>   <span class="o">|</span> <span class="n">Henry</span><span class="p">,</span><span class="n">Jim</span><span class="p">,</span><span class="n">John</span><span class="p">,</span><span class="n">Thomas</span><span class="p">,</span><span class="n">Tom</span>  <span class="o">|</span>
<span class="o">|</span> <span class="err">男</span>   <span class="o">|</span> <span class="n">Dany</span><span class="p">,</span><span class="n">Green</span><span class="p">,</span><span class="n">Jane</span><span class="p">,</span><span class="n">Lily</span><span class="p">,</span><span class="n">Susan</span> <span class="o">|</span>
<span class="o">+------+----------------------------+</span>
<span class="mi">2</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h4 id="多个字段分组">多个字段分组</h4>
<p>多个字段分组查询时，会先按照第一个字段进行分组。如果第一个字段中有相同的值，MySQL 才会按照第二个字段进行分组。如果第一个字段中的数据都是唯一的，那么 MySQL 将不再对第二个字段进行分组。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="n">age</span><span class="p">,</span><span class="n">sex</span><span class="p">,</span><span class="nf">GROUP_CONCAT</span><span class="p">(</span><span class="n">name</span><span class="p">)</span> <span class="k">FROM</span> <span class="n">tb_students_info</span> 
    <span class="o">-&gt;</span> <span class="k">GROUP</span> <span class="k">BY</span> <span class="n">age</span><span class="p">,</span><span class="n">sex</span><span class="p">;</span>
<span class="o">+------+------+--------------------+</span>
<span class="o">|</span> <span class="n">age</span>  <span class="o">|</span> <span class="n">sex</span>  <span class="o">|</span> <span class="nf">GROUP_CONCAT</span><span class="p">(</span><span class="n">name</span><span class="p">)</span> <span class="o">|</span>
<span class="o">+------+------+--------------------+</span>
<span class="o">|</span>   <span class="mi">21</span> <span class="o">|</span> <span class="err">女</span>   <span class="o">|</span> <span class="n">John</span>               <span class="o">|</span>
<span class="o">|</span>   <span class="mi">22</span> <span class="o">|</span> <span class="err">女</span>   <span class="o">|</span> <span class="n">Thomas</span>             <span class="o">|</span>
<span class="o">|</span>   <span class="mi">22</span> <span class="o">|</span> <span class="err">男</span>   <span class="o">|</span> <span class="n">Jane</span><span class="p">,</span><span class="n">Lily</span>          <span class="o">|</span>
<span class="o">|</span>   <span class="mi">23</span> <span class="o">|</span> <span class="err">女</span>   <span class="o">|</span> <span class="n">Henry</span><span class="p">,</span><span class="n">Tom</span>          <span class="o">|</span>
<span class="o">|</span>   <span class="mi">23</span> <span class="o">|</span> <span class="err">男</span>   <span class="o">|</span> <span class="n">Green</span><span class="p">,</span><span class="n">Susan</span>        <span class="o">|</span>
<span class="o">|</span>   <span class="mi">24</span> <span class="o">|</span> <span class="err">女</span>   <span class="o">|</span> <span class="n">Jim</span>                <span class="o">|</span>
<span class="o">|</span>   <span class="mi">25</span> <span class="o">|</span> <span class="err">男</span>   <span class="o">|</span> <span class="n">Dany</span>               <span class="o">|</span>
<span class="o">+------+------+--------------------+</span>
<span class="mi">7</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h4 id="聚合函数">聚合函数</h4>
<p>聚合函数包括 COUNT()，SUM()，AVG()，MAX() 和 MIN()。其中，COUNT() 用来统计记录的条数；SUM() 用来计算字段值的总和；AVG() 用来计算字段值的平均值；MAX() 用来查询字段的最大值；MIN() 用来查询字段的最小值。这些都是分组查询时常用的函数。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="n">sex</span><span class="p">,</span><span class="nf">COUNT</span><span class="p">(</span><span class="n">sex</span><span class="p">)</span> <span class="k">FROM</span> <span class="n">tb_students_info</span> 
    <span class="o">-&gt;</span> <span class="k">GROUP</span> <span class="k">BY</span> <span class="n">sex</span><span class="p">;</span>
<span class="o">+------+------------+</span>
<span class="o">|</span> <span class="n">sex</span>  <span class="o">|</span> <span class="nf">COUNT</span><span class="p">(</span><span class="n">sex</span><span class="p">)</span> <span class="o">|</span>
<span class="o">+------+------------+</span>
<span class="o">|</span> <span class="err">女</span>   <span class="o">|</span>          <span class="mi">5</span> <span class="o">|</span>
<span class="o">|</span> <span class="err">男</span>   <span class="o">|</span>          <span class="mi">5</span> <span class="o">|</span>
<span class="o">+------+------------+</span>
<span class="mi">2</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h4 id="with-rollup">WITH ROLLUP</h4>
<p>WITH POLLUP 关键字用来在所有记录的最后加上一条记录，这条记录是上面所有记录的总和，即统计记录数量。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="n">sex</span><span class="p">,</span><span class="nf">GROUP_CONCAT</span><span class="p">(</span><span class="n">name</span><span class="p">)</span> <span class="k">FROM</span> <span class="n">tb_students_info</span> 
    <span class="o">-&gt;</span><span class="k">GROUP</span> <span class="k">BY</span> <span class="n">sex</span> <span class="k">WITH</span> <span class="n">ROLLUP</span><span class="p">;</span>
<span class="o">+------+------------------------------------------------------+</span>
<span class="o">|</span> <span class="n">sex</span>  <span class="o">|</span> <span class="nf">GROUP_CONCAT</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>                                   <span class="o">|</span>
<span class="o">+------+------------------------------------------------------+</span>
<span class="o">|</span> <span class="err">女</span>   <span class="o">|</span> <span class="n">Henry</span><span class="p">,</span><span class="n">Jim</span><span class="p">,</span><span class="n">John</span><span class="p">,</span><span class="n">Thomas</span><span class="p">,</span><span class="n">Tom</span>                            <span class="o">|</span>
<span class="o">|</span> <span class="err">男</span>   <span class="o">|</span> <span class="n">Dany</span><span class="p">,</span><span class="n">Green</span><span class="p">,</span><span class="n">Jane</span><span class="p">,</span><span class="n">Lily</span><span class="p">,</span><span class="n">Susan</span>                           <span class="o">|</span>
<span class="o">|</span> <span class="no">NULL</span> <span class="o">|</span> <span class="n">Henry</span><span class="p">,</span><span class="n">Jim</span><span class="p">,</span><span class="n">John</span><span class="p">,</span><span class="n">Thomas</span><span class="p">,</span><span class="n">Tom</span><span class="p">,</span><span class="n">Dany</span><span class="p">,</span><span class="n">Green</span><span class="p">,</span><span class="n">Jane</span><span class="p">,</span><span class="n">Lily</span><span class="p">,</span><span class="n">Susan</span> <span class="o">|</span>
<span class="o">+------+------------------------------------------------------+</span>
<span class="mi">3</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="14-过滤分组">1.4 过滤分组</h3>
<p>在 MySQL 中，可以使用 HAVING 子句对分组后的数据进行过滤。语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">HAVING</span> <span class="o">&lt;</span><span class="err">查询条件</span><span class="o">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>HAVING 关键字和 WHERE 关键字都可以用来过滤数据，且 HAVING 支持 WHERE 关键字中所有的操作符和语法。但是 WHERE 和 HAVING 关键字也存在以下几点差异：</p>
<ul>
<li>一般情况下，WHERE 用于过滤数据行，而 HAVING 用于过滤分组。</li>
<li>WHERE 查询条件中不可以使用聚合函数，而 HAVING 查询条件中可以使用聚合函数。</li>
<li>WHERE 在数据分组前进行过滤，而 HAVING 在数据分组后进行过滤 。</li>
<li>WHERE 查询条件中不可以使用字段别名，而 HAVING 查询条件中可以使用字段别名。</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="c1"># 使用 WHERE
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="n">name</span><span class="p">,</span><span class="n">sex</span> <span class="k">FROM</span> <span class="n">tb_students_info</span> 
    <span class="o">-&gt;</span> <span class="k">WHERE</span> <span class="n">height</span><span class="o">&gt;</span><span class="mi">150</span><span class="p">;</span>
<span class="o">+--------+------+</span>
<span class="o">|</span> <span class="n">name</span>   <span class="o">|</span> <span class="n">sex</span>  <span class="o">|</span>
<span class="o">+--------+------+</span>
<span class="o">|</span> <span class="n">Dany</span>   <span class="o">|</span> <span class="err">男</span>   <span class="o">|</span>
<span class="o">|</span> <span class="n">Green</span>  <span class="o">|</span> <span class="err">男</span>   <span class="o">|</span>
<span class="o">|</span> <span class="n">Henry</span>  <span class="o">|</span> <span class="err">女</span>   <span class="o">|</span>
<span class="o">|</span> <span class="n">Jane</span>   <span class="o">|</span> <span class="err">男</span>   <span class="o">|</span>
<span class="o">|</span> <span class="n">Jim</span>    <span class="o">|</span> <span class="err">女</span>   <span class="o">|</span>
<span class="o">|</span> <span class="n">John</span>   <span class="o">|</span> <span class="err">女</span>   <span class="o">|</span>
<span class="o">|</span> <span class="n">Lily</span>   <span class="o">|</span> <span class="err">男</span>   <span class="o">|</span>
<span class="o">|</span> <span class="n">Susan</span>  <span class="o">|</span> <span class="err">男</span>   <span class="o">|</span>
<span class="o">|</span> <span class="n">Thomas</span> <span class="o">|</span> <span class="err">女</span>   <span class="o">|</span>
<span class="o">|</span> <span class="n">Tom</span>    <span class="o">|</span> <span class="err">女</span>   <span class="o">|</span>
<span class="o">+--------+------+</span>
<span class="mi">10</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>

<span class="c1"># 使用 HAVING
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="nf">GROUP_CONCAT</span><span class="p">(</span><span class="n">name</span><span class="p">),</span><span class="n">sex</span><span class="p">,</span><span class="n">height</span> <span class="k">FROM</span> <span class="n">tb_students_info</span> 
    <span class="o">-&gt;</span> <span class="k">GROUP</span> <span class="k">BY</span> <span class="n">height</span> 
    <span class="o">-&gt;</span> <span class="k">HAVING</span> <span class="nf">AVG</span><span class="p">(</span><span class="n">height</span><span class="p">)</span><span class="o">&gt;</span><span class="mi">170</span><span class="p">;</span>
<span class="o">+--------------------+------+--------+</span>
<span class="o">|</span> <span class="nf">GROUP_CONCAT</span><span class="p">(</span><span class="n">name</span><span class="p">)</span> <span class="o">|</span> <span class="n">sex</span>  <span class="o">|</span> <span class="n">height</span> <span class="o">|</span>
<span class="o">+--------------------+------+--------+</span>
<span class="o">|</span> <span class="n">John</span>               <span class="o">|</span> <span class="err">女</span>   <span class="o">|</span>    <span class="mi">172</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Jim</span>                <span class="o">|</span> <span class="err">女</span>   <span class="o">|</span>    <span class="mi">175</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Thomas</span>             <span class="o">|</span> <span class="err">女</span>   <span class="o">|</span>    <span class="mi">178</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Henry</span>              <span class="o">|</span> <span class="err">女</span>   <span class="o">|</span>    <span class="mi">185</span> <span class="o">|</span>
<span class="o">+--------------------+------+--------+</span>
<span class="mi">4</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="15-排序">1.5 排序</h3>
<p>ORDER BY 关键字用来将查询结果中的数据按照一定的顺序进行排序。其语法格式如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">ORDER</span> <span class="k">BY</span> <span class="o">&lt;</span><span class="err">字段名</span><span class="o">&gt;</span> <span class="p">[</span><span class="k">ASC</span><span class="o">|</span><span class="k">DESC</span><span class="p">]</span>
</code></pre></td></tr></table>
</div>
</div><p>语法说明如下。</p>
<ul>
<li>字段名：表示需要排序的字段名称，多个字段时用逗号隔开。</li>
<li>ASC|DESC：<code>ASC</code>表示字段按升序排序；<code>DESC</code>表示字段按降序排序。其中<code>ASC</code>为默认值。</li>
</ul>
<p>使用 ORDER BY 关键字应该注意以下几个方面：</p>
<ul>
<li>ORDER BY 关键字后可以跟子查询。</li>
<li>当排序的字段中存在空值时，ORDER BY 会将该空值作为最小值来对待。</li>
<li>在对多个字段进行排序时，排序的第一个字段必须有相同的值，才会对第二个字段进行排序。如果第一个字段数据中所有的值都是唯一的，MySQL 将不再对第二个字段进行排序。</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="c1"># 单字段排序
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">tb_students_info</span> <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">height</span><span class="p">;</span>
<span class="o">+----+--------+---------+------+------+--------+------------+</span>
<span class="o">|</span> <span class="n">id</span> <span class="o">|</span> <span class="n">name</span>   <span class="o">|</span> <span class="n">dept_id</span> <span class="o">|</span> <span class="n">age</span>  <span class="o">|</span> <span class="n">sex</span>  <span class="o">|</span> <span class="n">height</span> <span class="o">|</span> <span class="n">login_date</span> <span class="o">|</span>
<span class="o">+----+--------+---------+------+------+--------+------------+</span>
<span class="o">|</span>  <span class="mi">2</span> <span class="o">|</span> <span class="n">Green</span>  <span class="o">|</span>       <span class="mi">3</span> <span class="o">|</span>   <span class="mi">23</span> <span class="o">|</span> <span class="n">F</span>    <span class="o">|</span>    <span class="mi">158</span> <span class="o">|</span> <span class="mi">2016</span><span class="o">-</span><span class="mi">10</span><span class="o">-</span><span class="mi">22</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">1</span> <span class="o">|</span> <span class="n">Dany</span>   <span class="o">|</span>       <span class="mi">1</span> <span class="o">|</span>   <span class="mi">25</span> <span class="o">|</span> <span class="n">F</span>    <span class="o">|</span>    <span class="mi">160</span> <span class="o">|</span> <span class="mi">2015</span><span class="o">-</span><span class="mi">09</span><span class="o">-</span><span class="mi">10</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">4</span> <span class="o">|</span> <span class="n">Jane</span>   <span class="o">|</span>       <span class="mi">1</span> <span class="o">|</span>   <span class="mi">22</span> <span class="o">|</span> <span class="n">F</span>    <span class="o">|</span>    <span class="mi">162</span> <span class="o">|</span> <span class="mi">2016</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">20</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">7</span> <span class="o">|</span> <span class="n">Lily</span>   <span class="o">|</span>       <span class="mi">6</span> <span class="o">|</span>   <span class="mi">22</span> <span class="o">|</span> <span class="n">F</span>    <span class="o">|</span>    <span class="mi">165</span> <span class="o">|</span> <span class="mi">2016</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">26</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">10</span> <span class="o">|</span> <span class="n">Tom</span>    <span class="o">|</span>       <span class="mi">4</span> <span class="o">|</span>   <span class="mi">23</span> <span class="o">|</span> <span class="n">M</span>    <span class="o">|</span>    <span class="mi">165</span> <span class="o">|</span> <span class="mi">2016</span><span class="o">-</span><span class="mi">08</span><span class="o">-</span><span class="mi">05</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">8</span> <span class="o">|</span> <span class="n">Susan</span>  <span class="o">|</span>       <span class="mi">4</span> <span class="o">|</span>   <span class="mi">23</span> <span class="o">|</span> <span class="n">F</span>    <span class="o">|</span>    <span class="mi">170</span> <span class="o">|</span> <span class="mi">2015</span><span class="o">-</span><span class="mi">10</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">6</span> <span class="o">|</span> <span class="n">John</span>   <span class="o">|</span>       <span class="mi">2</span> <span class="o">|</span>   <span class="mi">21</span> <span class="o">|</span> <span class="n">M</span>    <span class="o">|</span>    <span class="mi">172</span> <span class="o">|</span> <span class="mi">2015</span><span class="o">-</span><span class="mi">11</span><span class="o">-</span><span class="mi">11</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">5</span> <span class="o">|</span> <span class="n">Jim</span>    <span class="o">|</span>       <span class="mi">1</span> <span class="o">|</span>   <span class="mi">24</span> <span class="o">|</span> <span class="n">M</span>    <span class="o">|</span>    <span class="mi">175</span> <span class="o">|</span> <span class="mi">2016</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">15</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">9</span> <span class="o">|</span> <span class="n">Thomas</span> <span class="o">|</span>       <span class="mi">3</span> <span class="o">|</span>   <span class="mi">22</span> <span class="o">|</span> <span class="n">M</span>    <span class="o">|</span>    <span class="mi">178</span> <span class="o">|</span> <span class="mi">2016</span><span class="o">-</span><span class="mi">06</span><span class="o">-</span><span class="mi">07</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">3</span> <span class="o">|</span> <span class="n">Henry</span>  <span class="o">|</span>       <span class="mi">2</span> <span class="o">|</span>   <span class="mi">23</span> <span class="o">|</span> <span class="n">M</span>    <span class="o">|</span>    <span class="mi">185</span> <span class="o">|</span> <span class="mi">2015</span><span class="o">-</span><span class="mi">05</span><span class="o">-</span><span class="mi">31</span> <span class="o">|</span>
<span class="o">+----+--------+---------+------+------+--------+------------+</span>
<span class="mi">10</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">08</span> <span class="n">sec</span><span class="p">)</span>
<span class="c1"># 多字段排序
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="n">name</span><span class="p">,</span><span class="n">height</span> <span class="k">FROM</span> <span class="n">tb_students_info</span> <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">height</span><span class="p">,</span><span class="n">name</span><span class="p">;</span>
<span class="o">+--------+--------+</span>
<span class="o">|</span> <span class="n">name</span>   <span class="o">|</span> <span class="n">height</span> <span class="o">|</span>
<span class="o">+--------+--------+</span>
<span class="o">|</span> <span class="n">Green</span>  <span class="o">|</span>    <span class="mi">158</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Dany</span>   <span class="o">|</span>    <span class="mi">160</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Jane</span>   <span class="o">|</span>    <span class="mi">162</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Lily</span>   <span class="o">|</span>    <span class="mi">165</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Tom</span>    <span class="o">|</span>    <span class="mi">165</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Susan</span>  <span class="o">|</span>    <span class="mi">170</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">John</span>   <span class="o">|</span>    <span class="mi">172</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Jim</span>    <span class="o">|</span>    <span class="mi">175</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Thomas</span> <span class="o">|</span>    <span class="mi">178</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Henry</span>  <span class="o">|</span>    <span class="mi">185</span> <span class="o">|</span>
<span class="o">+--------+--------+</span>
<span class="mi">10</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">09</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>默认情况下，查询数据按字母升序进行排序（A～Z），但数据的排序并不仅限于此，还可以使用 ORDER BY 中的 DESC 对查询结果进行降序排序（Z～A）。</p>
<h3 id="16-去重">1.6 去重</h3>
<p>SELECT 选择属性列后，新表可能出现重复的元组，可以使用 DISTINCT 关键字去重</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">SELECT</span> <span class="k">DISTINCT</span> <span class="o">&lt;</span><span class="err">字段名</span><span class="o">&gt;</span> <span class="k">FROM</span> <span class="o">&lt;</span><span class="err">表名</span><span class="o">&gt;</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><p>其中，“字段名”为需要消除重复记录的字段名称，多个字段时用逗号隔开。</p>
<p>使用 DISTINCT 关键字时需要注意以下几点：</p>
<ul>
<li>DISTINCT 关键字只能在 SELECT 语句中使用。</li>
<li>在对一个或多个字段去重时，DISTINCT 关键字必须在所有字段的最前面。</li>
<li>如果 DISTINCT 关键字后有多个字段，则会对多个字段进行组合去重，也就是说，只有多个字段组合起来完全是一样的情况下才会被去重。</li>
</ul>
<p>示例如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="c1"># 原表
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">test</span><span class="p">.</span><span class="n">student</span><span class="p">;</span>
<span class="o">+----+----------+------+-------+</span>
<span class="o">|</span> <span class="n">id</span> <span class="o">|</span> <span class="n">name</span>     <span class="o">|</span> <span class="n">age</span>  <span class="o">|</span> <span class="n">stuno</span> <span class="o">|</span>
<span class="o">+----+----------+------+-------+</span>
<span class="o">|</span>  <span class="mi">1</span> <span class="o">|</span> <span class="n">zhangsan</span> <span class="o">|</span>   <span class="mi">18</span> <span class="o">|</span>    <span class="mi">23</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">2</span> <span class="o">|</span> <span class="n">lisi</span>     <span class="o">|</span>   <span class="mi">19</span> <span class="o">|</span>    <span class="mi">24</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">3</span> <span class="o">|</span> <span class="n">wangwu</span>   <span class="o">|</span>   <span class="mi">18</span> <span class="o">|</span>    <span class="mi">25</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">4</span> <span class="o">|</span> <span class="n">zhaoliu</span>  <span class="o">|</span>   <span class="mi">18</span> <span class="o">|</span>    <span class="mi">26</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">5</span> <span class="o">|</span> <span class="n">zhangsan</span> <span class="o">|</span>   <span class="mi">18</span> <span class="o">|</span>    <span class="mi">27</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">6</span> <span class="o">|</span> <span class="n">wangwu</span>   <span class="o">|</span>   <span class="mi">20</span> <span class="o">|</span>    <span class="mi">28</span> <span class="o">|</span>
<span class="o">+----+----------+------+-------+</span>
<span class="mi">6</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
<span class="c1"># 对 name 和 age 字段搜索结果去重
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="k">DISTINCT</span> <span class="n">name</span><span class="p">,</span><span class="n">age</span> <span class="k">FROM</span> <span class="n">student</span><span class="p">;</span>
<span class="o">+----------+------+</span>
<span class="o">|</span> <span class="n">name</span>     <span class="o">|</span> <span class="n">age</span>  <span class="o">|</span>
<span class="o">+----------+------+</span>
<span class="o">|</span> <span class="n">zhangsan</span> <span class="o">|</span>   <span class="mi">18</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">lisi</span>     <span class="o">|</span>   <span class="mi">19</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">wangwu</span>   <span class="o">|</span>   <span class="mi">18</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">zhaoliu</span>  <span class="o">|</span>   <span class="mi">18</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">wangwu</span>   <span class="o">|</span>   <span class="mi">20</span> <span class="o">|</span>
<span class="o">+----------+------+</span>
<span class="mi">5</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>因为 DISTINCT 只能返回它的目标字段，而无法返回其它字段，所以在实际情况中，我们经常使用 DISTINCT 关键字来返回不重复字段的条数。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="nf">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">name</span><span class="p">,</span><span class="n">age</span><span class="p">)</span> <span class="k">FROM</span> <span class="n">student</span><span class="p">;</span>
<span class="o">+--------------------------+</span>
<span class="o">|</span> <span class="nf">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">name</span><span class="p">,</span><span class="n">age</span><span class="p">)</span> <span class="o">|</span>
<span class="o">+--------------------------+</span>
<span class="o">|</span>                        <span class="mi">5</span> <span class="o">|</span>
<span class="o">+--------------------------+</span>
<span class="mi">1</span> <span class="n">row</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">01</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>值得一提的是，聚合函数中也有 DISTINCT 的选项，如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="nf">AVG</span><span class="p">([</span><span class="k">distinct</span><span class="p">]</span> <span class="n">expr</span><span class="p">)</span>
<span class="nf">COUNT</span><span class="p">(</span><span class="err">{</span><span class="o">*|</span><span class="p">[</span><span class="k">distinct</span><span class="p">]</span> <span class="err">}</span> <span class="n">expr</span><span class="p">)</span>
<span class="nf">MAX</span><span class="p">([</span><span class="k">distinct</span><span class="p">]</span> <span class="n">expr</span><span class="p">)</span>
<span class="nf">MIN</span><span class="p">([</span><span class="k">distinct</span><span class="p">]</span> <span class="n">expr</span><span class="p">)</span>
<span class="nf">SUM</span><span class="p">([</span><span class="k">distinct</span><span class="p">]</span> <span class="n">expr</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>这意味着 HAVING 子句也可以出现该关键字，比如</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">SELECT</span> <span class="n">class</span>
<span class="k">FROM</span> <span class="n">courses</span>
<span class="k">GROUP</span> <span class="k">BY</span> <span class="n">class</span>
<span class="k">HAVING</span> <span class="nf">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">student</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">5</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="17-设置别名">1.7 设置别名</h3>
<p>当表名或字段名很长或者执行一些特殊查询的时候，为了查询方便，可以使用 AS 关键字来为表和字段指定别名。</p>
<p>注意：表的别名不能与该数据库的其它表同名。字段的别名不能与该表的其它字段同名。在条件表达式中不能使用字段的别名，否则会出现 <code>ERROR 1054 (42S22): Unknown column</code> 这样的错误提示信息。</p>
<p>语法格式如下，其中 AS 关键字可省略，省略后原名和别名用空格隔开</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="o">&lt;</span><span class="err">表名</span><span class="o">&gt;</span> <span class="p">[</span><span class="k">AS</span><span class="p">]</span> <span class="o">&lt;</span><span class="err">别名</span><span class="o">&gt;</span> <span class="c1"># 为表指定别名
</span><span class="c1"></span><span class="o">&lt;</span><span class="err">字段名</span><span class="o">&gt;</span> <span class="p">[</span><span class="k">AS</span><span class="p">]</span> <span class="o">&lt;</span><span class="err">别名</span><span class="o">&gt;</span> <span class="c1"># 为字段指定别名
</span></code></pre></td></tr></table>
</div>
</div><p>示例如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="c1"># 为表指定别名
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="n">stu</span><span class="p">.</span><span class="n">name</span><span class="p">,</span><span class="n">stu</span><span class="p">.</span><span class="n">height</span> <span class="k">FROM</span> <span class="n">tb_students_info</span> <span class="k">AS</span> <span class="n">stu</span><span class="p">;</span>
<span class="o">+--------+--------+</span>
<span class="o">|</span> <span class="n">name</span>   <span class="o">|</span> <span class="n">height</span> <span class="o">|</span>
<span class="o">+--------+--------+</span>
<span class="o">|</span> <span class="n">Dany</span>   <span class="o">|</span>    <span class="mi">160</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Green</span>  <span class="o">|</span>    <span class="mi">158</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Henry</span>  <span class="o">|</span>    <span class="mi">185</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Jane</span>   <span class="o">|</span>    <span class="mi">162</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Jim</span>    <span class="o">|</span>    <span class="mi">175</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">John</span>   <span class="o">|</span>    <span class="mi">172</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Lily</span>   <span class="o">|</span>    <span class="mi">165</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Susan</span>  <span class="o">|</span>    <span class="mi">170</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Thomas</span> <span class="o">|</span>    <span class="mi">178</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Tom</span>    <span class="o">|</span>    <span class="mi">165</span> <span class="o">|</span>
<span class="o">+--------+--------+</span>
<span class="mi">10</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">04</span> <span class="n">sec</span><span class="p">)</span>

<span class="c1"># 为字段指定别名
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="n">name</span> <span class="k">AS</span> <span class="n">student_name</span><span class="p">,</span> <span class="n">age</span> <span class="k">AS</span> <span class="n">student_age</span> <span class="k">FROM</span> <span class="n">tb_students_info</span><span class="p">;</span>
<span class="o">+--------------+-------------+</span>
<span class="o">|</span> <span class="n">student_name</span> <span class="o">|</span> <span class="n">student_age</span> <span class="o">|</span>
<span class="o">+--------------+-------------+</span>
<span class="o">|</span> <span class="n">Dany</span>         <span class="o">|</span>          <span class="mi">25</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Green</span>        <span class="o">|</span>          <span class="mi">23</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Henry</span>        <span class="o">|</span>          <span class="mi">23</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Jane</span>         <span class="o">|</span>          <span class="mi">22</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Jim</span>          <span class="o">|</span>          <span class="mi">24</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">John</span>         <span class="o">|</span>          <span class="mi">21</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Lily</span>         <span class="o">|</span>          <span class="mi">22</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Susan</span>        <span class="o">|</span>          <span class="mi">23</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Thomas</span>       <span class="o">|</span>          <span class="mi">22</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">Tom</span>          <span class="o">|</span>          <span class="mi">23</span> <span class="o">|</span>
<span class="o">+--------------+-------------+</span>
<span class="mi">10</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="18-限制查询结果的条数">1.8 限制查询结果的条数</h3>
<p>使用 LIMIT 关键字限制查询结果返回的条数。LIMIT 关键字有 3 种使用方式，即指定初始位置、不指定初始位置以及与 OFFSET 组合使用。</p>
<p>基本语法格式如下，第一条记录的位置是 0，两个参数必须都是正整数。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">LIMIT</span> <span class="err">初始位置，记录数</span>
</code></pre></td></tr></table>
</div>
</div><p>示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">tb_students_info</span> <span class="k">LIMIT</span> <span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">;</span>
<span class="o">+----+-------+---------+------+------+--------+------------+</span>
<span class="o">|</span> <span class="n">id</span> <span class="o">|</span> <span class="n">name</span>  <span class="o">|</span> <span class="n">dept_id</span> <span class="o">|</span> <span class="n">age</span>  <span class="o">|</span> <span class="n">sex</span>  <span class="o">|</span> <span class="n">height</span> <span class="o">|</span> <span class="n">login_date</span> <span class="o">|</span>
<span class="o">+----+-------+---------+------+------+--------+------------+</span>
<span class="o">|</span>  <span class="mi">4</span> <span class="o">|</span> <span class="n">Jane</span>  <span class="o">|</span>       <span class="mi">1</span> <span class="o">|</span>   <span class="mi">22</span> <span class="o">|</span> <span class="n">F</span>    <span class="o">|</span>    <span class="mi">162</span> <span class="o">|</span> <span class="mi">2016</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">20</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">5</span> <span class="o">|</span> <span class="n">Jim</span>   <span class="o">|</span>       <span class="mi">1</span> <span class="o">|</span>   <span class="mi">24</span> <span class="o">|</span> <span class="n">M</span>    <span class="o">|</span>    <span class="mi">175</span> <span class="o">|</span> <span class="mi">2016</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">15</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">6</span> <span class="o">|</span> <span class="n">John</span>  <span class="o">|</span>       <span class="mi">2</span> <span class="o">|</span>   <span class="mi">21</span> <span class="o">|</span> <span class="n">M</span>    <span class="o">|</span>    <span class="mi">172</span> <span class="o">|</span> <span class="mi">2015</span><span class="o">-</span><span class="mi">11</span><span class="o">-</span><span class="mi">11</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">7</span> <span class="o">|</span> <span class="n">Lily</span>  <span class="o">|</span>       <span class="mi">6</span> <span class="o">|</span>   <span class="mi">22</span> <span class="o">|</span> <span class="n">F</span>    <span class="o">|</span>    <span class="mi">165</span> <span class="o">|</span> <span class="mi">2016</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">26</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">8</span> <span class="o">|</span> <span class="n">Susan</span> <span class="o">|</span>       <span class="mi">4</span> <span class="o">|</span>   <span class="mi">23</span> <span class="o">|</span> <span class="n">F</span>    <span class="o">|</span>    <span class="mi">170</span> <span class="o">|</span> <span class="mi">2015</span><span class="o">-</span><span class="mi">10</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span>
<span class="o">+----+-------+---------+------+------+--------+------------+</span>
<span class="mi">5</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>省略初始位置时默认从第一条记录开始，如果表中剩余记录数不够，则返回所有剩余记录</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">tb_students_info</span> <span class="k">LIMIT</span> <span class="mi">4</span><span class="p">;</span>
<span class="o">+----+-------+---------+------+------+--------+------------+</span>
<span class="o">|</span> <span class="n">id</span> <span class="o">|</span> <span class="n">name</span>  <span class="o">|</span> <span class="n">dept_id</span> <span class="o">|</span> <span class="n">age</span>  <span class="o">|</span> <span class="n">sex</span>  <span class="o">|</span> <span class="n">height</span> <span class="o">|</span> <span class="n">login_date</span> <span class="o">|</span>
<span class="o">+----+-------+---------+------+------+--------+------------+</span>
<span class="o">|</span>  <span class="mi">1</span> <span class="o">|</span> <span class="n">Dany</span>  <span class="o">|</span>       <span class="mi">1</span> <span class="o">|</span>   <span class="mi">25</span> <span class="o">|</span> <span class="n">F</span>    <span class="o">|</span>    <span class="mi">160</span> <span class="o">|</span> <span class="mi">2015</span><span class="o">-</span><span class="mi">09</span><span class="o">-</span><span class="mi">10</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">2</span> <span class="o">|</span> <span class="n">Green</span> <span class="o">|</span>       <span class="mi">3</span> <span class="o">|</span>   <span class="mi">23</span> <span class="o">|</span> <span class="n">F</span>    <span class="o">|</span>    <span class="mi">158</span> <span class="o">|</span> <span class="mi">2016</span><span class="o">-</span><span class="mi">10</span><span class="o">-</span><span class="mi">22</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">3</span> <span class="o">|</span> <span class="n">Henry</span> <span class="o">|</span>       <span class="mi">2</span> <span class="o">|</span>   <span class="mi">23</span> <span class="o">|</span> <span class="n">M</span>    <span class="o">|</span>    <span class="mi">185</span> <span class="o">|</span> <span class="mi">2015</span><span class="o">-</span><span class="mi">05</span><span class="o">-</span><span class="mi">31</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">4</span> <span class="o">|</span> <span class="n">Jane</span>  <span class="o">|</span>       <span class="mi">1</span> <span class="o">|</span>   <span class="mi">22</span> <span class="o">|</span> <span class="n">F</span>    <span class="o">|</span>    <span class="mi">162</span> <span class="o">|</span> <span class="mi">2016</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">20</span> <span class="o">|</span>
<span class="o">+----+-------+---------+------+------+--------+------------+</span>
<span class="mi">4</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>LIMIT 可以和 OFFSET 组合使用，不过仅仅是换了一种写法，没有其它语义</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">LIMIT</span> <span class="err">记录数</span> <span class="n">OFFSET</span> <span class="err">初始位置</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="19-多表查询">1.9 多表查询</h3>
<p>前面所讲的查询语句都是针对一个表的，但是在关系型数据库中，表与表之间是有联系的，所以在实际应用中，经常使用多表查询。多表查询就是同时查询两个或两个以上的表，主要有交叉连接、内连接和外连接。</p>
<h4 id="交叉连接">交叉连接</h4>
<p>交叉连接（CROSS JOIN）一般用来返回连接表的笛卡尔积。语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">SELECT</span> <span class="o">&lt;</span><span class="err">字段名</span><span class="o">&gt;</span> <span class="k">FROM</span> <span class="o">&lt;</span><span class="err">表</span><span class="mi">1</span><span class="o">&gt;</span> <span class="k">CROSS</span> <span class="k">JOIN</span> <span class="o">&lt;</span><span class="err">表</span><span class="mi">2</span><span class="o">&gt;</span> <span class="p">[</span><span class="n">WHERE子句</span><span class="p">]</span>
<span class="k">SELECT</span> <span class="o">&lt;</span><span class="err">字段名</span><span class="o">&gt;</span> <span class="k">FROM</span> <span class="o">&lt;</span><span class="err">表</span><span class="mi">1</span><span class="o">&gt;</span><span class="p">,</span> <span class="o">&lt;</span><span class="err">表</span><span class="mi">2</span><span class="o">&gt;</span> <span class="p">[</span><span class="n">WHERE子句</span><span class="p">]</span> 
</code></pre></td></tr></table>
</div>
</div><p>以上两种语法的返回结果是相同的，但是第一种语法是官方建议的标准写法。</p>
<p>当存在 WHERE 语句时，执行完交叉连接会执行筛选，当没有 WHERE 语句，返回的就是完整的笛卡尔积，但是，不管哪种情况，都会先生成完整的笛卡尔积结果，这个结果中包含的元组数目非常大，所以一般不建议使用交叉连接。</p>
<p>为了减少结果结果中数据行的数目，应尽量使用内连接，内连接使用 ON 关键字设置连接条件。我们从 WHERE 语句 和 ON 语句的执行顺序可以理解这一点，WHERE 在 连接之后执行，而 ON 语句在连接之前进行。</p>
<h4 id="内连接">内连接</h4>
<p>内连接（INNER JOIN）就是利用条件表达式来消除交叉连接的某些数据行。</p>
<p>内连接使用 INNER JOIN 关键字连接两张表，并使用 ON 子句来设置连接条件。如果没有连接条件，INNER JOIN 和 CROSS JOIN 在语法上是等同的，两者可以互换，因此 ON 子句的作用比较重要。内连接的语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">SELECT</span> <span class="o">&lt;</span><span class="err">字段名</span><span class="o">&gt;</span> <span class="k">FROM</span> <span class="o">&lt;</span><span class="err">表</span><span class="mi">1</span><span class="o">&gt;</span> <span class="k">INNER</span> <span class="k">JOIN</span> <span class="o">&lt;</span><span class="err">表</span><span class="mi">2</span><span class="o">&gt;</span> <span class="p">[</span><span class="n">ON子句</span><span class="p">]</span>
</code></pre></td></tr></table>
</div>
</div><p>示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="n">s</span><span class="p">.</span><span class="n">name</span><span class="p">,</span><span class="n">c</span><span class="p">.</span><span class="n">course_name</span> <span class="k">FROM</span> <span class="n">tb_students_info</span> <span class="n">s</span> <span class="k">INNER</span> <span class="k">JOIN</span> <span class="n">tb_course</span> <span class="n">c</span> 
    <span class="o">-&gt;</span> <span class="k">ON</span> <span class="n">s</span><span class="p">.</span><span class="n">course_id</span> <span class="o">=</span> <span class="n">c</span><span class="p">.</span><span class="n">id</span><span class="p">;</span>
<span class="o">+--------+-------------+</span>
<span class="o">|</span> <span class="n">name</span>   <span class="o">|</span> <span class="n">course_name</span> <span class="o">|</span>
<span class="o">+--------+-------------+</span>
<span class="o">|</span> <span class="n">Dany</span>   <span class="o">|</span> <span class="n">Java</span>        <span class="o">|</span>
<span class="o">|</span> <span class="n">Green</span>  <span class="o">|</span> <span class="n">MySQL</span>       <span class="o">|</span>
<span class="o">|</span> <span class="n">Henry</span>  <span class="o">|</span> <span class="n">Java</span>        <span class="o">|</span>
<span class="o">|</span> <span class="n">Jane</span>   <span class="o">|</span> <span class="n">Python</span>      <span class="o">|</span>
<span class="o">|</span> <span class="n">Jim</span>    <span class="o">|</span> <span class="n">MySQL</span>       <span class="o">|</span>
<span class="o">|</span> <span class="n">John</span>   <span class="o">|</span> <span class="n">Go</span>          <span class="o">|</span>
<span class="o">|</span> <span class="n">Lily</span>   <span class="o">|</span> <span class="n">Go</span>          <span class="o">|</span>
<span class="o">|</span> <span class="n">Susan</span>  <span class="o">|</span> <span class="n">C</span><span class="o">++</span>         <span class="o">|</span>
<span class="o">|</span> <span class="n">Thomas</span> <span class="o">|</span> <span class="n">C</span><span class="o">++</span>         <span class="o">|</span>
<span class="o">|</span> <span class="n">Tom</span>    <span class="o">|</span> <span class="n">C</span><span class="o">++</span>         <span class="o">|</span>
<span class="o">+--------+-------------+</span>
<span class="mi">10</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>注意：当对多个表进行查询时，要在 SELECT 语句后面指定字段是来源于哪一张表。因此，在多表查询时，SELECT 语句后面的写法是表名.列名。另外，如果表名非常长的话，也可以给表设置别名，这样就可以直接在 SELECT 语句后面写上表的别名.列名。</p>
<h4 id="外连接">外连接</h4>
<p>内连接的查询结果都是符合连接条件的记录，而外连接会先将连接的表分为基表和参考表，再以基表为依据返回满足和不满足条件的记录。外连接可以分为左外连接和右外连接。</p>
<p><strong>左外连接</strong>使用 LEFT OUTER JOIN 关键字，语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">SELECT</span> <span class="o">&lt;</span><span class="err">字段名</span><span class="o">&gt;</span> <span class="k">FROM</span> <span class="o">&lt;</span><span class="err">表</span><span class="mi">1</span><span class="o">&gt;</span> <span class="k">LEFT</span> <span class="k">OUTER</span> <span class="k">JOIN</span> <span class="o">&lt;</span><span class="err">表</span><span class="mi">2</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">ON子句</span><span class="o">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>上述语法中，“表1”为基表，“表2”为参考表。左外连接查询时，可以查询出“表1”中的所有记录和“表2”中匹配连接条件的记录。如果“表1”的某行在“表2”中没有匹配行，那么在返回结果中，“表2”的字段值均为空值（NULL）。示例如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="c1"># 两张原始表
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">tb_course</span><span class="p">;</span>
<span class="o">+----+-------------+</span>
<span class="o">|</span> <span class="n">id</span> <span class="o">|</span> <span class="n">course_name</span> <span class="o">|</span>
<span class="o">+----+-------------+</span>
<span class="o">|</span>  <span class="mi">1</span> <span class="o">|</span> <span class="n">Java</span>        <span class="o">|</span>
<span class="o">|</span>  <span class="mi">2</span> <span class="o">|</span> <span class="n">MySQL</span>       <span class="o">|</span>
<span class="o">|</span>  <span class="mi">3</span> <span class="o">|</span> <span class="n">Python</span>      <span class="o">|</span>
<span class="o">|</span>  <span class="mi">4</span> <span class="o">|</span> <span class="n">Go</span>          <span class="o">|</span>
<span class="o">|</span>  <span class="mi">5</span> <span class="o">|</span> <span class="n">C</span><span class="o">++</span>         <span class="o">|</span>
<span class="o">|</span>  <span class="mi">6</span> <span class="o">|</span> <span class="n">HTML</span>        <span class="o">|</span>
<span class="o">+----+-------------+</span>
<span class="mi">6</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>

<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">tb_students_info</span><span class="p">;</span>
<span class="o">+----+--------+------+------+--------+-----------+</span>
<span class="o">|</span> <span class="n">id</span> <span class="o">|</span> <span class="n">name</span>   <span class="o">|</span> <span class="n">age</span>  <span class="o">|</span> <span class="n">sex</span>  <span class="o">|</span> <span class="n">height</span> <span class="o">|</span> <span class="n">course_id</span> <span class="o">|</span>
<span class="o">+----+--------+------+------+--------+-----------+</span>
<span class="o">|</span>  <span class="mi">1</span> <span class="o">|</span> <span class="n">Dany</span>   <span class="o">|</span>   <span class="mi">25</span> <span class="o">|</span> <span class="err">男</span>   <span class="o">|</span>    <span class="mi">160</span> <span class="o">|</span>         <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">2</span> <span class="o">|</span> <span class="n">Green</span>  <span class="o">|</span>   <span class="mi">23</span> <span class="o">|</span> <span class="err">男</span>   <span class="o">|</span>    <span class="mi">158</span> <span class="o">|</span>         <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">3</span> <span class="o">|</span> <span class="n">Henry</span>  <span class="o">|</span>   <span class="mi">23</span> <span class="o">|</span> <span class="err">女</span>   <span class="o">|</span>    <span class="mi">185</span> <span class="o">|</span>         <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">4</span> <span class="o">|</span> <span class="n">Jane</span>   <span class="o">|</span>   <span class="mi">22</span> <span class="o">|</span> <span class="err">男</span>   <span class="o">|</span>    <span class="mi">162</span> <span class="o">|</span>         <span class="mi">3</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">5</span> <span class="o">|</span> <span class="n">Jim</span>    <span class="o">|</span>   <span class="mi">24</span> <span class="o">|</span> <span class="err">女</span>   <span class="o">|</span>    <span class="mi">175</span> <span class="o">|</span>         <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">6</span> <span class="o">|</span> <span class="n">John</span>   <span class="o">|</span>   <span class="mi">21</span> <span class="o">|</span> <span class="err">女</span>   <span class="o">|</span>    <span class="mi">172</span> <span class="o">|</span>         <span class="mi">4</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">7</span> <span class="o">|</span> <span class="n">Lily</span>   <span class="o">|</span>   <span class="mi">22</span> <span class="o">|</span> <span class="err">男</span>   <span class="o">|</span>    <span class="mi">165</span> <span class="o">|</span>         <span class="mi">4</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">8</span> <span class="o">|</span> <span class="n">Susan</span>  <span class="o">|</span>   <span class="mi">23</span> <span class="o">|</span> <span class="err">男</span>   <span class="o">|</span>    <span class="mi">170</span> <span class="o">|</span>         <span class="mi">5</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">9</span> <span class="o">|</span> <span class="n">Thomas</span> <span class="o">|</span>   <span class="mi">22</span> <span class="o">|</span> <span class="err">女</span>   <span class="o">|</span>    <span class="mi">178</span> <span class="o">|</span>         <span class="mi">5</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">10</span> <span class="o">|</span> <span class="n">Tom</span>    <span class="o">|</span>   <span class="mi">23</span> <span class="o">|</span> <span class="err">女</span>   <span class="o">|</span>    <span class="mi">165</span> <span class="o">|</span>         <span class="mi">5</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">11</span> <span class="o">|</span> <span class="n">LiMing</span> <span class="o">|</span>   <span class="mi">22</span> <span class="o">|</span> <span class="err">男</span>   <span class="o">|</span>    <span class="mi">180</span> <span class="o">|</span>         <span class="mi">7</span> <span class="o">|</span>
<span class="o">+----+--------+------+------+--------+-----------+</span>
<span class="mi">11</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
<span class="c1"># 左外连接查询结果
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="n">s</span><span class="p">.</span><span class="n">name</span><span class="p">,</span><span class="n">c</span><span class="p">.</span><span class="n">course_name</span> <span class="k">FROM</span> <span class="n">tb_students_info</span> <span class="n">s</span> <span class="k">LEFT</span> <span class="k">OUTER</span> <span class="k">JOIN</span> <span class="n">tb_course</span> <span class="n">c</span> 
    <span class="o">-&gt;</span> <span class="k">ON</span> <span class="n">s</span><span class="p">.</span><span class="o">`</span><span class="n">course_id</span><span class="o">`=</span><span class="n">c</span><span class="p">.</span><span class="o">`</span><span class="n">id</span><span class="o">`</span><span class="p">;</span>
<span class="o">+--------+-------------+</span>
<span class="o">|</span> <span class="n">name</span>   <span class="o">|</span> <span class="n">course_name</span> <span class="o">|</span>
<span class="o">+--------+-------------+</span>
<span class="o">|</span> <span class="n">Dany</span>   <span class="o">|</span> <span class="n">Java</span>        <span class="o">|</span>
<span class="o">|</span> <span class="n">Henry</span>  <span class="o">|</span> <span class="n">Java</span>        <span class="o">|</span>
<span class="o">|</span> <span class="no">NULL</span>   <span class="o">|</span> <span class="n">Java</span>        <span class="o">|</span>
<span class="o">|</span> <span class="n">Green</span>  <span class="o">|</span> <span class="n">MySQL</span>       <span class="o">|</span>
<span class="o">|</span> <span class="n">Jim</span>    <span class="o">|</span> <span class="n">MySQL</span>       <span class="o">|</span>
<span class="o">|</span> <span class="n">Jane</span>   <span class="o">|</span> <span class="n">Python</span>      <span class="o">|</span>
<span class="o">|</span> <span class="n">John</span>   <span class="o">|</span> <span class="n">Go</span>          <span class="o">|</span>
<span class="o">|</span> <span class="n">Lily</span>   <span class="o">|</span> <span class="n">Go</span>          <span class="o">|</span>
<span class="o">|</span> <span class="n">Susan</span>  <span class="o">|</span> <span class="n">C</span><span class="o">++</span>         <span class="o">|</span>
<span class="o">|</span> <span class="n">Thomas</span> <span class="o">|</span> <span class="n">C</span><span class="o">++</span>         <span class="o">|</span>
<span class="o">|</span> <span class="n">Tom</span>    <span class="o">|</span> <span class="n">C</span><span class="o">++</span>         <span class="o">|</span>
<span class="o">|</span> <span class="n">LiMing</span> <span class="o">|</span> <span class="no">NULL</span>        <span class="o">|</span>
<span class="o">+--------+-------------+</span>
<span class="mi">12</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p><strong>右外连接</strong> 是左外连接的反向连接，使用 RIGHT OUTER JOIN 关键字，大致内容相同，不再赘述。</p>
<h3 id="110-子查询">1.10 子查询</h3>
<p>子查询指将一个查询语句嵌套在另一个查询语句中，通过这种方式可以实现多表查询。子查询可以在 SELECT、INSERT、UPDATE 和 DELETE 语句中使用，而且可以进行多层嵌套。</p>
<p>子查询可以在使用表达式的任何地方使用，不过在实际开发时出现在 WHERE 子句和 FROM 子句中比较多。语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">WHERE</span> <span class="o">&lt;</span><span class="err">表达式</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="err">操作符</span><span class="o">&gt;</span> <span class="p">(</span><span class="err">子查询</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>其中，操作符可以是比较运算符和 IN、NOT IN、EXISTS、NOT EXISTS 等关键字。</p>
<ol>
<li>
<p><strong>IN | NOT IN</strong>：当表达式与子查询返回的结果集中的某个值相等时，返回 TRUE，否则返回 FALSE；若使用关键字 NOT，则返回值正好相反。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="n">name</span> <span class="k">FROM</span> <span class="n">tb_students_info</span> 
    <span class="o">-&gt;</span> <span class="k">WHERE</span> <span class="n">course_id</span> <span class="k">IN</span> <span class="p">(</span><span class="k">SELECT</span> <span class="n">id</span> <span class="k">FROM</span> <span class="n">tb_course</span> <span class="k">WHERE</span> <span class="n">course_name</span> <span class="o">=</span> <span class="s1">&#39;Java&#39;</span><span class="p">);</span>
<span class="o">+-------+</span>
<span class="o">|</span> <span class="n">name</span>  <span class="o">|</span>
<span class="o">+-------+</span>
<span class="o">|</span> <span class="n">Dany</span>  <span class="o">|</span>
<span class="o">|</span> <span class="n">Henry</span> <span class="o">|</span>
<span class="o">+-------+</span>
<span class="mi">2</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">01</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div></li>
<li>
<p><strong>EXISTS | NOT EXISTS</strong>：用于判断子查询的结果集是否为空，若子查询的结果集不为空，返回 TRUE，否则返回 FALSE；若使用关键字 NOT，则返回的值正好相反。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">tb_students_info</span>
    <span class="o">-&gt;</span> <span class="k">WHERE</span> <span class="k">EXISTS</span><span class="p">(</span><span class="k">SELECT</span> <span class="n">course_name</span> <span class="k">FROM</span> <span class="n">tb_course</span> <span class="k">WHERE</span> <span class="n">id</span><span class="o">=</span><span class="mi">1</span><span class="p">);</span>
<span class="o">+----+--------+------+------+--------+-----------+</span>
<span class="o">|</span> <span class="n">id</span> <span class="o">|</span> <span class="n">name</span>   <span class="o">|</span> <span class="n">age</span>  <span class="o">|</span> <span class="n">sex</span>  <span class="o">|</span> <span class="n">height</span> <span class="o">|</span> <span class="n">course_id</span> <span class="o">|</span>
<span class="o">+----+--------+------+------+--------+-----------+</span>
<span class="o">|</span>  <span class="mi">1</span> <span class="o">|</span> <span class="n">Dany</span>   <span class="o">|</span>   <span class="mi">25</span> <span class="o">|</span> <span class="err">男</span>   <span class="o">|</span>    <span class="mi">160</span> <span class="o">|</span>         <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">2</span> <span class="o">|</span> <span class="n">Green</span>  <span class="o">|</span>   <span class="mi">23</span> <span class="o">|</span> <span class="err">男</span>   <span class="o">|</span>    <span class="mi">158</span> <span class="o">|</span>         <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">3</span> <span class="o">|</span> <span class="n">Henry</span>  <span class="o">|</span>   <span class="mi">23</span> <span class="o">|</span> <span class="err">女</span>   <span class="o">|</span>    <span class="mi">185</span> <span class="o">|</span>         <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">4</span> <span class="o">|</span> <span class="n">Jane</span>   <span class="o">|</span>   <span class="mi">22</span> <span class="o">|</span> <span class="err">男</span>   <span class="o">|</span>    <span class="mi">162</span> <span class="o">|</span>         <span class="mi">3</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">5</span> <span class="o">|</span> <span class="n">Jim</span>    <span class="o">|</span>   <span class="mi">24</span> <span class="o">|</span> <span class="err">女</span>   <span class="o">|</span>    <span class="mi">175</span> <span class="o">|</span>         <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">6</span> <span class="o">|</span> <span class="n">John</span>   <span class="o">|</span>   <span class="mi">21</span> <span class="o">|</span> <span class="err">女</span>   <span class="o">|</span>    <span class="mi">172</span> <span class="o">|</span>         <span class="mi">4</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">7</span> <span class="o">|</span> <span class="n">Lily</span>   <span class="o">|</span>   <span class="mi">22</span> <span class="o">|</span> <span class="err">男</span>   <span class="o">|</span>    <span class="mi">165</span> <span class="o">|</span>         <span class="mi">4</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">8</span> <span class="o">|</span> <span class="n">Susan</span>  <span class="o">|</span>   <span class="mi">23</span> <span class="o">|</span> <span class="err">男</span>   <span class="o">|</span>    <span class="mi">170</span> <span class="o">|</span>         <span class="mi">5</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">9</span> <span class="o">|</span> <span class="n">Thomas</span> <span class="o">|</span>   <span class="mi">22</span> <span class="o">|</span> <span class="err">女</span>   <span class="o">|</span>    <span class="mi">178</span> <span class="o">|</span>         <span class="mi">5</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">10</span> <span class="o">|</span> <span class="n">Tom</span>    <span class="o">|</span>   <span class="mi">23</span> <span class="o">|</span> <span class="err">女</span>   <span class="o">|</span>    <span class="mi">165</span> <span class="o">|</span>         <span class="mi">5</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">11</span> <span class="o">|</span> <span class="n">LiMing</span> <span class="o">|</span>   <span class="mi">22</span> <span class="o">|</span> <span class="err">男</span>   <span class="o">|</span>    <span class="mi">180</span> <span class="o">|</span>         <span class="mi">7</span> <span class="o">|</span>
<span class="o">+----+--------+------+------+--------+-----------+</span>
<span class="mi">11</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">01</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div></li>
</ol>
<p>习惯上，外层的 SELECT 查询称为父查询，圆括号中嵌入的查询称为子查询（子查询必须放在圆括号内）。MySQL 在处理上例的 SELECT 语句时，执行流程为：先执行子查询，再执行父查询。</p>
<p>子查询的功能也可以通过表连接完成，但是子查询会使 SQL 语句更容易阅读和编写。一般来说，表连接（内连接和外连接等）都可以用子查询替换，但反过来却不一定，有的子查询不能用表连接来替换。子查询比较灵活、方便、形式多样，适合作为查询的筛选条件，而表连接更适合于查看连接表的数据。</p>
<h3 id="111-正则表达式查询">1.11 正则表达式查询</h3>
<p>MySQL 中，使用 <strong>REGEXP</strong> 关键字指定正则表达式的字符匹配模式，其基本语法格式如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="err">属性名</span> <span class="k">REGEXP</span> <span class="s1">&#39;匹配方式&#39;</span>
</code></pre></td></tr></table>
</div>
</div><p>其中，“属性名”表示需要查询的字段名称；“匹配方式”表示以哪种方式来匹配查询，符合正则表达式的写法。一个示例如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">tb_students_info</span> 
    <span class="o">-&gt;</span> <span class="k">WHERE</span> <span class="n">name</span> <span class="k">REGEXP</span> <span class="s1">&#39;^J&#39;</span><span class="p">;</span>
<span class="o">+----+------+------+------+--------+-----------+</span>
<span class="o">|</span> <span class="n">id</span> <span class="o">|</span> <span class="n">name</span> <span class="o">|</span> <span class="n">age</span>  <span class="o">|</span> <span class="n">sex</span>  <span class="o">|</span> <span class="n">height</span> <span class="o">|</span> <span class="n">course_id</span> <span class="o">|</span>
<span class="o">+----+------+------+------+--------+-----------+</span>
<span class="o">|</span>  <span class="mi">4</span> <span class="o">|</span> <span class="n">Jane</span> <span class="o">|</span>   <span class="mi">22</span> <span class="o">|</span> <span class="err">男</span>   <span class="o">|</span>    <span class="mi">162</span> <span class="o">|</span>         <span class="mi">3</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">5</span> <span class="o">|</span> <span class="n">Jim</span>  <span class="o">|</span>   <span class="mi">24</span> <span class="o">|</span> <span class="err">女</span>   <span class="o">|</span>    <span class="mi">175</span> <span class="o">|</span>         <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span>  <span class="mi">6</span> <span class="o">|</span> <span class="n">John</span> <span class="o">|</span>   <span class="mi">21</span> <span class="o">|</span> <span class="err">女</span>   <span class="o">|</span>    <span class="mi">172</span> <span class="o">|</span>         <span class="mi">4</span> <span class="o">|</span>
<span class="o">+----+------+------+------+--------+-----------+</span>
<span class="mi">3</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">01</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="2-插入数据">2. 插入数据</h2>
<p>INSERT 语句有两种语法形式，分别是 INSERT…VALUES 语句和 INSERT…SET 语句。</p>
<ol>
<li>
<p>INSERT…VALUES</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">INSERT</span> <span class="k">INTO</span> <span class="o">&lt;</span><span class="err">表名</span><span class="o">&gt;</span> <span class="p">[</span> <span class="o">&lt;</span><span class="err">列名</span><span class="mi">1</span><span class="o">&gt;</span> <span class="p">[</span> <span class="p">,</span> <span class="err">…</span> <span class="o">&lt;</span><span class="err">列名</span><span class="n">n</span><span class="o">&gt;</span><span class="p">]</span> <span class="p">]</span>
<span class="k">VALUES</span> <span class="p">(</span><span class="err">值</span><span class="mi">1</span><span class="p">)</span> <span class="p">[</span><span class="err">…</span> <span class="p">,</span> <span class="p">(</span><span class="err">值</span><span class="n">n</span><span class="p">)</span> <span class="p">];</span>
</code></pre></td></tr></table>
</div>
</div><p>语法说明如下。</p>
<ul>
<li><code>&lt;表名&gt;</code>：指定被操作的表名。</li>
<li><code>&lt;列名&gt;</code>：指定需要插入数据的列名。若向表中的所有列插入数据，则全部的列名均可以省略，直接采用 INSERT&lt;表名&gt;VALUES(…) 即可。</li>
<li><code>VALUES</code> 或 <code>VALUE</code> 子句：该子句包含要插入的数据清单。数据清单中数据的顺序要和列的顺序相对应。</li>
</ul>
</li>
<li>
<p>INSERT…SET</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">INSERT</span> <span class="k">INTO</span> <span class="o">&lt;</span><span class="err">表名</span><span class="o">&gt;</span>
<span class="kt">SET</span> <span class="o">&lt;</span><span class="err">列名</span><span class="mi">1</span><span class="o">&gt;</span> <span class="o">=</span> <span class="o">&lt;</span><span class="err">值</span><span class="mi">1</span><span class="o">&gt;</span><span class="p">,</span>
    <span class="o">&lt;</span><span class="err">列名</span><span class="mi">2</span><span class="o">&gt;</span> <span class="o">=</span> <span class="o">&lt;</span><span class="err">值</span><span class="mi">2</span><span class="o">&gt;</span><span class="p">,</span>
    <span class="err">…</span>
</code></pre></td></tr></table>
</div>
</div><p>此语句用于直接给表中的某些列指定对应的列值，即要插入的数据的列名在 SET 子句中指定，col_name 为指定的列名，等号后面为指定的数据，而对于未指定的列，列值会指定为该列的默认值。</p>
<p>由 INSERT 语句的两种形式可以看出：</p>
<ul>
<li>使用 INSERT…VALUES 语句可以向表中插入一行数据，也可以插入多行数据；</li>
<li>使用 INSERT…SET 语句可以指定插入行中每列的值，也可以指定部分列的值；</li>
<li>INSERT…SELECT 语句向表中插入其他表的数据。</li>
<li>采用 INSERT…SET 语句可以向表中插入部分列的值，这种方式更为灵活；</li>
<li>INSERT…VALUES 语句可以一次插入多条数据。</li>
</ul>
</li>
</ol>
<p>在 MySQL 中，用单条 INSERT 语句处理多个插入要比使用多条 INSERT 语句更快。</p>
<p>当使用单条 INSERT 语句插入多行数据的时候，只需要将每行数据用圆括号括起来即可。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">INSERT</span> <span class="k">INTO</span> <span class="n">tb_courses</span>
    <span class="o">-&gt;</span> <span class="p">(</span><span class="n">course_name</span><span class="p">,</span><span class="n">course_grade</span><span class="p">,</span><span class="n">course_info</span><span class="p">)</span>
    <span class="o">-&gt;</span> <span class="k">VALUES</span><span class="p">(</span><span class="s1">&#39;System&#39;</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="s1">&#39;Operation System&#39;</span><span class="p">);</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">1</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">08</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">tb_courses</span><span class="p">;</span>
<span class="o">+-----------+-------------+--------------+------------------+</span>
<span class="o">|</span> <span class="n">course_id</span> <span class="o">|</span> <span class="n">course_name</span> <span class="o">|</span> <span class="n">course_grade</span> <span class="o">|</span> <span class="n">course_info</span>      <span class="o">|</span>
<span class="o">+-----------+-------------+--------------+------------------+</span>
<span class="o">|</span>         <span class="mi">1</span> <span class="o">|</span> <span class="n">Network</span>     <span class="o">|</span>            <span class="mi">3</span> <span class="o">|</span> <span class="n">Computer</span> <span class="n">Network</span> <span class="o">|</span>
<span class="o">|</span>         <span class="mi">2</span> <span class="o">|</span> <span class="k">Database</span>    <span class="o">|</span>            <span class="mi">3</span> <span class="o">|</span> <span class="n">MySQL</span>            <span class="o">|</span>
<span class="o">|</span>         <span class="mi">3</span> <span class="o">|</span> <span class="n">Java</span>        <span class="o">|</span>            <span class="mi">4</span> <span class="o">|</span> <span class="n">Java</span> <span class="n">EE</span>          <span class="o">|</span>
<span class="o">|</span>         <span class="mi">4</span> <span class="o">|</span> <span class="n">System</span>      <span class="o">|</span>            <span class="mi">3</span> <span class="o">|</span> <span class="n">Operating</span> <span class="n">System</span> <span class="o">|</span>
<span class="o">+-----------+-------------+--------------+------------------+</span>
<span class="mi">4</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>可以使用 INSERT INTO…SELECT…FROM 语句从一个或多个表中取出数据，并将这些数据作为行数据插入另一个表中。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">INSERT</span> <span class="k">INTO</span> <span class="n">tb_courses_new</span>
    <span class="o">-&gt;</span> <span class="p">(</span><span class="n">course_id</span><span class="p">,</span><span class="n">course_name</span><span class="p">,</span><span class="n">course_grade</span><span class="p">,</span><span class="n">course_info</span><span class="p">)</span>
    <span class="o">-&gt;</span> <span class="k">SELECT</span> <span class="n">course_id</span><span class="p">,</span><span class="n">course_name</span><span class="p">,</span><span class="n">course_grade</span><span class="p">,</span><span class="n">course_info</span>
    <span class="o">-&gt;</span> <span class="k">FROM</span> <span class="n">tb_courses</span><span class="p">;</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">4</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">17</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">Records</span><span class="p">:</span> <span class="mi">4</span>  <span class="n">Duplicates</span><span class="p">:</span> <span class="mi">0</span>  <span class="n">Warnings</span><span class="p">:</span> <span class="mi">0</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">tb_courses_new</span><span class="p">;</span>
<span class="o">+-----------+-------------+--------------+------------------+</span>
<span class="o">|</span> <span class="n">course_id</span> <span class="o">|</span> <span class="n">course_name</span> <span class="o">|</span> <span class="n">course_grade</span> <span class="o">|</span> <span class="n">course_info</span>      <span class="o">|</span>
<span class="o">+-----------+-------------+--------------+------------------+</span>
<span class="o">|</span>         <span class="mi">1</span> <span class="o">|</span> <span class="n">Network</span>     <span class="o">|</span>            <span class="mi">3</span> <span class="o">|</span> <span class="n">Computer</span> <span class="n">Network</span> <span class="o">|</span>
<span class="o">|</span>         <span class="mi">2</span> <span class="o">|</span> <span class="k">Database</span>    <span class="o">|</span>            <span class="mi">3</span> <span class="o">|</span> <span class="n">MySQL</span>            <span class="o">|</span>
<span class="o">|</span>         <span class="mi">3</span> <span class="o">|</span> <span class="n">Java</span>        <span class="o">|</span>            <span class="mi">4</span> <span class="o">|</span> <span class="n">Java</span> <span class="n">EE</span>          <span class="o">|</span>
<span class="o">|</span>         <span class="mi">4</span> <span class="o">|</span> <span class="n">System</span>      <span class="o">|</span>            <span class="mi">3</span> <span class="o">|</span> <span class="n">Operating</span> <span class="n">System</span> <span class="o">|</span>
<span class="o">+-----------+-------------+--------------+------------------+</span>
<span class="mi">4</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="3-修改数据">3. 修改数据</h2>
<p>使用 UPDATE 语句修改单个表，语法格式为：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">UPDATE</span> <span class="o">&lt;</span><span class="err">表名</span><span class="o">&gt;</span> <span class="kt">SET</span> <span class="err">字段</span> <span class="mi">1</span><span class="o">=</span><span class="err">值</span> <span class="mi">1</span> <span class="p">[,</span><span class="err">字段</span> <span class="mi">2</span><span class="o">=</span><span class="err">值</span> <span class="mi">2</span><span class="err">…</span> <span class="p">]</span> <span class="p">[</span><span class="k">WHERE</span> <span class="err">子句</span> <span class="p">]</span>
<span class="p">[</span><span class="k">ORDER</span> <span class="k">BY</span> <span class="err">子句</span><span class="p">]</span> <span class="p">[</span><span class="k">LIMIT</span> <span class="err">子句</span><span class="p">]</span>
</code></pre></td></tr></table>
</div>
</div><p>语法说明如下：</p>
<ul>
<li><code>&lt;表名&gt;</code>：用于指定要更新的表名称。</li>
<li><code>SET</code> 子句：用于指定表中要修改的列名及其列值。其中，每个指定的列值可以是表达式，也可以是该列对应的默认值。如果指定的是默认值，可用关键字 DEFAULT 表示列值。</li>
<li><code>WHERE</code> 子句：可选项。用于限定表中要修改的行。若不指定，则修改表中所有的行。</li>
<li><code>ORDER BY</code> 子句：可选项。用于限定表中的行被修改的次序。</li>
<li><code>LIMIT</code> 子句：可选项。用于限定被修改的行数。</li>
</ul>
<blockquote>
<p>注意：修改一行数据的多个列值时，SET 子句的每个值用逗号分开即可。</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="c1"># 更新所有行的 course_grade 字段值为 4
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">UPDATE</span> <span class="n">tb_courses_new</span>
    <span class="o">-&gt;</span> <span class="kt">SET</span> <span class="n">course_grade</span><span class="o">=</span><span class="mi">4</span><span class="p">;</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">3</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">11</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">Rows</span> <span class="n">matched</span><span class="p">:</span> <span class="mi">4</span>  <span class="n">Changed</span><span class="p">:</span> <span class="mi">3</span>  <span class="n">Warnings</span><span class="p">:</span> <span class="mi">0</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">tb_courses_new</span><span class="p">;</span>
<span class="o">+-----------+-------------+--------------+------------------+</span>
<span class="o">|</span> <span class="n">course_id</span> <span class="o">|</span> <span class="n">course_name</span> <span class="o">|</span> <span class="n">course_grade</span> <span class="o">|</span> <span class="n">course_info</span>      <span class="o">|</span>
<span class="o">+-----------+-------------+--------------+------------------+</span>
<span class="o">|</span>         <span class="mi">1</span> <span class="o">|</span> <span class="n">Network</span>     <span class="o">|</span>            <span class="mi">4</span> <span class="o">|</span> <span class="n">Computer</span> <span class="n">Network</span> <span class="o">|</span>
<span class="o">|</span>         <span class="mi">2</span> <span class="o">|</span> <span class="k">Database</span>    <span class="o">|</span>            <span class="mi">4</span> <span class="o">|</span> <span class="n">MySQL</span>            <span class="o">|</span>
<span class="o">|</span>         <span class="mi">3</span> <span class="o">|</span> <span class="n">Java</span>        <span class="o">|</span>            <span class="mi">4</span> <span class="o">|</span> <span class="n">Java</span> <span class="n">EE</span>          <span class="o">|</span>
<span class="o">|</span>         <span class="mi">4</span> <span class="o">|</span> <span class="n">System</span>      <span class="o">|</span>            <span class="mi">4</span> <span class="o">|</span> <span class="n">Operating</span> <span class="n">System</span> <span class="o">|</span>
<span class="o">+-----------+-------------+--------------+------------------+</span>
<span class="mi">4</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>

<span class="c1"># 更新 course_id 值为 2 的记录，将 course_grade 字段值改为 3.5，将 course_name 字段值改为“DB”
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">UPDATE</span> <span class="n">tb_courses_new</span>
    <span class="o">-&gt;</span> <span class="kt">SET</span> <span class="n">course_name</span><span class="o">=</span><span class="s1">&#39;DB&#39;</span><span class="p">,</span><span class="n">course_grade</span><span class="o">=</span><span class="mi">3</span><span class="p">.</span><span class="mi">5</span>
    <span class="o">-&gt;</span> <span class="k">WHERE</span> <span class="n">course_id</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">1</span> <span class="n">row</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">13</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">Rows</span> <span class="n">matched</span><span class="p">:</span> <span class="mi">1</span>  <span class="n">Changed</span><span class="p">:</span> <span class="mi">1</span>  <span class="n">Warnings</span><span class="p">:</span> <span class="mi">0</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">tb_courses_new</span><span class="p">;</span>
<span class="o">+-----------+-------------+--------------+------------------+</span>
<span class="o">|</span> <span class="n">course_id</span> <span class="o">|</span> <span class="n">course_name</span> <span class="o">|</span> <span class="n">course_grade</span> <span class="o">|</span> <span class="n">course_info</span>      <span class="o">|</span>
<span class="o">+-----------+-------------+--------------+------------------+</span>
<span class="o">|</span>         <span class="mi">1</span> <span class="o">|</span> <span class="n">Network</span>     <span class="o">|</span>            <span class="mi">4</span> <span class="o">|</span> <span class="n">Computer</span> <span class="n">Network</span> <span class="o">|</span>
<span class="o">|</span>         <span class="mi">2</span> <span class="o">|</span> <span class="n">DB</span>          <span class="o">|</span>          <span class="mi">3</span><span class="p">.</span><span class="mi">5</span> <span class="o">|</span> <span class="n">MySQL</span>            <span class="o">|</span>
<span class="o">|</span>         <span class="mi">3</span> <span class="o">|</span> <span class="n">Java</span>        <span class="o">|</span>            <span class="mi">4</span> <span class="o">|</span> <span class="n">Java</span> <span class="n">EE</span>          <span class="o">|</span>
<span class="o">|</span>         <span class="mi">4</span> <span class="o">|</span> <span class="n">System</span>      <span class="o">|</span>            <span class="mi">4</span> <span class="o">|</span> <span class="n">Operating</span> <span class="n">System</span> <span class="o">|</span>
<span class="o">+-----------+-------------+--------------+------------------+</span>
<span class="mi">4</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="4-删除数据">4. 删除数据</h2>
<p>使用 DELETE 语句从单个表中删除数据，语法格式为：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">DELETE</span> <span class="k">FROM</span> <span class="o">&lt;</span><span class="err">表名</span><span class="o">&gt;</span> <span class="p">[</span><span class="k">WHERE</span> <span class="err">子句</span><span class="p">]</span> <span class="p">[</span><span class="k">ORDER</span> <span class="k">BY</span> <span class="err">子句</span><span class="p">]</span> <span class="p">[</span><span class="k">LIMIT</span> <span class="err">子句</span><span class="p">]</span>
</code></pre></td></tr></table>
</div>
</div><p>语法说明如下：</p>
<ul>
<li><code>&lt;表名&gt;</code>：指定要删除数据的表名。</li>
<li><code>ORDER BY</code> 子句：可选项。表示删除时，表中各行将按照子句中指定的顺序进行删除。</li>
<li><code>WHERE</code> 子句：可选项。表示为删除操作限定删除条件，若省略该子句，则代表删除该表中的所有行。</li>
<li><code>LIMIT</code> 子句：可选项。用于告知服务器在控制命令被返回到客户端前被删除行的最大值。</li>
</ul>
<p>注意：在不使用 WHERE 条件的时候，将删除所有数据。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="c1"># 删除表中全部数据
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">DELETE</span> <span class="k">FROM</span> <span class="n">tb_courses_new</span><span class="p">;</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">3</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">12</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">tb_courses_new</span><span class="p">;</span>
<span class="n">Empty</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>

<span class="c1"># 删除 course_id 为 4 的记录
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">DELETE</span> <span class="k">FROM</span> <span class="n">tb_courses</span>
    <span class="o">-&gt;</span> <span class="k">WHERE</span> <span class="n">course_id</span><span class="o">=</span><span class="mi">4</span><span class="p">;</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">1</span> <span class="n">row</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">tb_courses</span><span class="p">;</span>
<span class="o">+-----------+-------------+--------------+------------------+</span>
<span class="o">|</span> <span class="n">course_id</span> <span class="o">|</span> <span class="n">course_name</span> <span class="o">|</span> <span class="n">course_grade</span> <span class="o">|</span> <span class="n">course_info</span>      <span class="o">|</span>
<span class="o">+-----------+-------------+--------------+------------------+</span>
<span class="o">|</span>         <span class="mi">1</span> <span class="o">|</span> <span class="n">Network</span>     <span class="o">|</span>            <span class="mi">3</span> <span class="o">|</span> <span class="n">Computer</span> <span class="n">Network</span> <span class="o">|</span>
<span class="o">|</span>         <span class="mi">2</span> <span class="o">|</span> <span class="k">Database</span>    <span class="o">|</span>            <span class="mi">3</span> <span class="o">|</span> <span class="n">MySQL</span>            <span class="o">|</span>
<span class="o">|</span>         <span class="mi">3</span> <span class="o">|</span> <span class="n">Java</span>        <span class="o">|</span>            <span class="mi">4</span> <span class="o">|</span> <span class="n">Java</span> <span class="n">EE</span>          <span class="o">|</span>
<span class="o">+-----------+-------------+--------------+------------------+</span>
<span class="mi">3</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p><strong>TRUNCATE</strong> 关键字可以用于完全清空一个表</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">TRUNCATE [TABLE] 表名
</code></pre></td></tr></table>
</div>
</div><p>其中，TABLE 关键字可省略。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">mysql&gt; TRUNCATE TABLE tb_student_course;
Query OK, 0 rows affected (0.04 sec)

mysql&gt; SELECT * FROM tb_student_course;
Empty set (0.00 sec)
</code></pre></td></tr></table>
</div>
</div><p><strong>TRUNCATE 和 DELETE 的区别</strong></p>
<p>从逻辑上说，TRUNCATE 语句与 DELETE 语句作用相同，但是在某些情况下，两者在使用上有所区别。</p>
<ul>
<li>DELETE 是 DML 类型的语句；TRUNCATE 是 DDL 类型的语句。它们都用来清空表中的数据。</li>
<li>DELETE 是逐行一条一条删除记录的；TRUNCATE 则是直接删除原来的表，再重新创建一个一模一样的新表，而不是逐行删除表中的数据，执行数据比 DELETE 快。因此需要删除表中全部的数据行时，尽量使用 TRUNCATE 语句， 可以缩短执行时间。</li>
<li>DELETE 删除数据后，配合事件回滚可以找回数据；TRUNCATE 不支持事务的回滚，数据删除后无法找回。</li>
<li>DELETE 删除数据后，系统不会重新设置自增字段的计数器；TRUNCATE 清空表记录后，系统会重新设置自增字段的计数器。</li>
<li>DELETE 的使用范围更广，因为它可以通过 WHERE 子句指定条件来删除部分数据；而 TRUNCATE 不支持 WHERE 子句，只能删除整体。</li>
<li>DELETE 会返回删除数据的行数，但是 TRUNCATE 只会返回 0，没有任何意义。</li>
</ul>
<p><strong>总结</strong></p>
<p>当不需要该表时，用 DROP；当仍要保留该表，但要删除所有记录时，用 TRUNCATE；当要删除部分记录时，用 DELETE</p>]]></description></item><item><title>Mysql学习5-约束与运算符</title><link>https://shuzang.github.io/mysql-learning-5-constraints-and-operators/</link><pubDate>Sun, 24 May 2020 12:10:00 +0800</pubDate><author>作者</author><guid>https://shuzang.github.io/mysql-learning-5-constraints-and-operators/</guid><description><![CDATA[<p>约束是一种限制，它通过限制表中的数据，来确保数据的完整性和唯一性。本文介绍 MySQL 的约束和运算符。</p>
<h2 id="1-约束">1. 约束</h2>
<p>MySQL 主要支持 6 种约束</p>
<ol>
<li><strong>主键约束</strong>：唯一标识该表中的每条信息。例如，学生信息表中的学号是唯一的。</li>
<li><strong>外键约束</strong>：经常和主键约束一起使用，用来确保数据的一致性。</li>
<li><strong>唯一约束</strong>：保证列的唯一性，但与主键约束不同的是，可以为表中多个字段设置唯一约束，并且设置唯一约束的列是允许有空值的，虽然只能有一个空值。</li>
<li><strong>检查约束</strong>：检查数据表中字段值是否有效</li>
<li><strong>非空约束</strong>：约束表中的字段不能为空</li>
<li><strong>默认值约束</strong>：用来约束当数据表中某个字段不输入值时，自动为其添加一个已经设置好的值。通常用在已经设置了非空约束的列，这样能够防止数据表在录入数据时出现错误。</li>
</ol>
<p>以上 6 种约束中，一个数据表中只能有一个主键约束，其它约束可以有多个。使用 SHOW CREATE TABLE 语句可查看表中的约束。</p>
<h3 id="11-主键">1.1 主键</h3>
<p>主键分为单字段主键和多字段联合主键，联合主键指一张表的主键由多个字段组成，比如学生选课数据表，学生编号和课程编号都不能单独作为主键，因为要限定一个学生只能选择同一课程一次，要将两者一起作为主键。不论哪种情况，每个表只能定义一个主键</p>
<h4 id="创建表时设置">创建表时设置</h4>
<p>使用 <code>PRIMARY KEY</code> 关键字在定义字段时指定主键，适用于单字段主键设置，语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="o">&lt;</span><span class="err">字段名</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="err">数据类型</span><span class="o">&gt;</span> <span class="k">PRIMARY</span> <span class="k">KEY</span> <span class="p">[</span><span class="err">默认值</span><span class="p">]</span>
</code></pre></td></tr></table>
</div>
</div><p>示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">tb_emp3</span>
    <span class="o">-&gt;</span> <span class="p">(</span>
    <span class="o">-&gt;</span> <span class="n">id</span> <span class="kt">INT</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span> <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">,</span>
    <span class="o">-&gt;</span> <span class="n">name</span> <span class="kt">VARCHAR</span><span class="p">(</span><span class="mi">25</span><span class="p">),</span>
    <span class="o">-&gt;</span> <span class="n">deptId</span> <span class="kt">INT</span><span class="p">(</span><span class="mi">11</span><span class="p">),</span>
    <span class="o">-&gt;</span> <span class="n">salary</span> <span class="kt">FLOAT</span>
    <span class="o">-&gt;</span> <span class="p">);</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">37</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>或者在定义完所有字段后指定，多字段主键设置只能用这种方法。语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="p">[</span><span class="k">CONSTRAINT</span> <span class="o">&lt;</span><span class="err">约束名</span><span class="o">&gt;</span><span class="p">]</span> <span class="k">PRIMARY</span> <span class="k">KEY</span> <span class="p">[</span><span class="err">字段名</span><span class="p">]</span>
</code></pre></td></tr></table>
</div>
</div><p>示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="c1"># 单字段主键设置
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">tb_emp4</span>
    <span class="o">-&gt;</span> <span class="p">(</span>
    <span class="o">-&gt;</span> <span class="n">id</span> <span class="kt">INT</span><span class="p">(</span><span class="mi">11</span><span class="p">),</span>
    <span class="o">-&gt;</span> <span class="n">name</span> <span class="kt">VARCHAR</span><span class="p">(</span><span class="mi">25</span><span class="p">),</span>
    <span class="o">-&gt;</span> <span class="n">deptId</span> <span class="kt">INT</span><span class="p">(</span><span class="mi">11</span><span class="p">),</span>
    <span class="o">-&gt;</span> <span class="n">salary</span> <span class="kt">FLOAT</span><span class="p">,</span>
    <span class="o">-&gt;</span> <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">(</span><span class="n">id</span><span class="p">)</span>
    <span class="o">-&gt;</span> <span class="p">);</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">37</span> <span class="n">sec</span><span class="p">)</span>

<span class="c1"># 多字段主键设置
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">tb_emp5</span>
    <span class="o">-&gt;</span> <span class="p">(</span>
    <span class="o">-&gt;</span> <span class="n">name</span> <span class="kt">VARCHAR</span><span class="p">(</span><span class="mi">25</span><span class="p">),</span>
    <span class="o">-&gt;</span> <span class="n">deptId</span> <span class="kt">INT</span><span class="p">(</span><span class="mi">11</span><span class="p">),</span>
    <span class="o">-&gt;</span> <span class="n">salary</span> <span class="kt">FLOAT</span><span class="p">,</span>
    <span class="o">-&gt;</span> <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="n">deptId</span><span class="p">)</span>
    <span class="o">-&gt;</span> <span class="p">);</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">37</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h4 id="修改表时设置">修改表时设置</h4>
<p>主键约束可在修改表时添加，应保证原表没有主键，要设置成主键的字段没有空值且没有重复，语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="o">&lt;</span><span class="err">数据表名</span><span class="o">&gt;</span> <span class="k">ADD</span> <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">(</span><span class="o">&lt;</span><span class="err">字段名</span><span class="o">&gt;</span><span class="p">);</span>
</code></pre></td></tr></table>
</div>
</div><p>示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">tb_emp2</span>
    <span class="o">-&gt;</span> <span class="k">ADD</span> <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">(</span><span class="n">id</span><span class="p">);</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">94</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">Records</span><span class="p">:</span> <span class="mi">0</span>  <span class="n">Duplicates</span><span class="p">:</span> <span class="mi">0</span>  <span class="n">Warnings</span><span class="p">:</span> <span class="mi">0</span>
</code></pre></td></tr></table>
</div>
</div><h4 id="删除主键">删除主键</h4>
<p>语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="o">&lt;</span><span class="err">数据表名</span><span class="o">&gt;</span> <span class="k">DROP</span> <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><h4 id="主键自增长">主键自增长</h4>
<p>给字段添加 <code>AUTO_INCREMENT</code> 属性可以实现主键自增长，语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="err">字段名</span> <span class="err">数据类型</span> <span class="kp">AUTO_INCREMENT</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li>默认情况下，AUTO_INCREMENT 的初始值是 1，每新增一条记录，字段值自动加 1。</li>
<li>一个表中只能有一个字段使用 AUTO_INCREMENT 约束，且该字段必须有唯一索引，以避免序号重复（即为主键或主键的一部分）。</li>
<li>AUTO_INCREMENT 约束的字段必须具备 NOT NULL 属性。</li>
<li>AUTO_INCREMENT 约束的字段只能是整数类型（TINYINT、SMALLINT、INT、BIGINT 等）。</li>
<li>AUTO_INCREMENT 约束字段的最大值受该字段的数据类型约束，如果达到上限，AUTO_INCREMENT 就会失效。</li>
</ul>
<p>示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">CREATE</span> <span class="k">TABLE</span> <span class="nf">tb_student</span><span class="p">(</span>
    <span class="o">-&gt;</span> <span class="n">id</span> <span class="kt">INT</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span> <span class="k">PRIMARY</span> <span class="k">KEY</span> <span class="kp">AUTO_INCREMENT</span><span class="p">,</span>
    <span class="o">-&gt;</span> <span class="n">name</span> <span class="kt">VARCHAR</span><span class="p">(</span><span class="mi">25</span><span class="p">)</span> <span class="k">NOT</span> <span class="no">NULL</span>
    <span class="o">-&gt;</span> <span class="p">);</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">07</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>如果第一条记录设置了该字段的初始值，那么新增加的记录就从这个初始值开始自增。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">CREATE</span> <span class="k">TABLE</span> <span class="nf">tb_student2</span> <span class="p">(</span>
    <span class="o">-&gt;</span> <span class="n">id</span> <span class="kt">INT</span> <span class="k">NOT</span> <span class="no">NULL</span> <span class="kp">AUTO_INCREMENT</span><span class="p">,</span>
    <span class="o">-&gt;</span> <span class="n">name</span> <span class="kt">VARCHAR</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span> <span class="k">NOT</span> <span class="no">NULL</span><span class="p">,</span>
    <span class="o">-&gt;</span> <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">(</span><span class="n">ID</span><span class="p">)</span>
    <span class="o">-&gt;</span> <span class="p">)</span><span class="kp">AUTO_INCREMENT</span><span class="o">=</span><span class="mi">100</span><span class="p">;</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">03</span> <span class="n">sec</span><span class="p">)</span> <span class="c1"># 插入的数据从100开始增加，而不是1
</span></code></pre></td></tr></table>
</div>
</div><h3 id="12-外键">1.2 外键</h3>
<p>对于两个具有关联关系的表而言，相关联字段中主键所在的表就是主表（父表），外键所在的表就是从表（子表）。外键用来建立主表与从表的关联关系，为两个表的数据建立连接，约束两个表中数据的一致性和完整性。主表删除某条记录时，从表中与之对应的记录也必须有相应的改变。一些规则如下</p>
<ul>
<li>主表必须已经存在于数据库中，或者是当前正在创建的表。如果是后一种情况，则主表与从表是同一个表，这样的表称为自参照表，这种结构称为自参照完整性。</li>
<li>必须为主表定义主键。</li>
<li>一个表可以有一个或多个外键。</li>
<li>主键不能包含空值，但允许在外键中出现空值。也就是说，只要外键的每个非空值出现在指定的主键中，这个外键的内容就是正确的。</li>
<li>从表的外键关联的必须是主表的主键，且主键和外键的数据类型必须一致。</li>
</ul>
<p>可在创建表时使用 <code>FOREIGN KEY</code> 指定外键，语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="p">[</span><span class="k">CONSTRAINT</span> <span class="o">&lt;</span><span class="err">外键名</span><span class="o">&gt;</span><span class="p">]</span> <span class="k">FOREIGN</span> <span class="k">KEY</span> <span class="err">字段名</span> <span class="p">[</span><span class="err">，字段名</span><span class="mi">2</span><span class="err">，…</span><span class="p">]</span>
<span class="k">REFERENCES</span> <span class="o">&lt;</span><span class="err">主表名</span><span class="o">&gt;</span> <span class="err">主键列</span><span class="mi">1</span> <span class="p">[</span><span class="err">，主键列</span><span class="mi">2</span><span class="err">，…</span><span class="p">]</span>
</code></pre></td></tr></table>
</div>
</div><p>示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="c1"># 创建主表
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">tb_dept1</span>
    <span class="o">-&gt;</span> <span class="p">(</span>
    <span class="o">-&gt;</span> <span class="n">id</span> <span class="kt">INT</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span> <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">,</span>
    <span class="o">-&gt;</span> <span class="n">name</span> <span class="kt">VARCHAR</span><span class="p">(</span><span class="mi">22</span><span class="p">)</span> <span class="k">NOT</span> <span class="no">NULL</span><span class="p">,</span>
    <span class="o">-&gt;</span> <span class="n">location</span> <span class="kt">VARCHAR</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span>
    <span class="o">-&gt;</span> <span class="p">);</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">37</span> <span class="n">sec</span><span class="p">)</span>
<span class="c1"># 创建从表并设定外键
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">tb_emp6</span>
    <span class="o">-&gt;</span> <span class="p">(</span>
    <span class="o">-&gt;</span> <span class="n">id</span> <span class="kt">INT</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span> <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">,</span>
    <span class="o">-&gt;</span> <span class="n">name</span> <span class="kt">VARCHAR</span><span class="p">(</span><span class="mi">25</span><span class="p">),</span>
    <span class="o">-&gt;</span> <span class="n">deptId</span> <span class="kt">INT</span><span class="p">(</span><span class="mi">11</span><span class="p">),</span>
    <span class="o">-&gt;</span> <span class="n">salary</span> <span class="kt">FLOAT</span><span class="p">,</span>
    <span class="o">-&gt;</span> <span class="k">CONSTRAINT</span> <span class="n">fk_emp_dept1</span>
    <span class="o">-&gt;</span> <span class="k">FOREIGN</span> <span class="k">KEY</span><span class="p">(</span><span class="n">deptId</span><span class="p">)</span> <span class="k">REFERENCES</span> <span class="nf">tb_dept1</span><span class="p">(</span><span class="n">id</span><span class="p">)</span>
    <span class="o">-&gt;</span> <span class="p">);</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">37</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>也可在修改表时添加外键约束，前提是从表中外键列中的数据必须与主表中主键列中的数据一致或者是没有数据。语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="o">&lt;</span><span class="err">数据表名</span><span class="o">&gt;</span> <span class="k">ADD</span> <span class="k">CONSTRAINT</span> <span class="o">&lt;</span><span class="err">外键名</span><span class="o">&gt;</span>
<span class="k">FOREIGN</span> <span class="k">KEY</span><span class="p">(</span><span class="o">&lt;</span><span class="err">列名</span><span class="o">&gt;</span><span class="p">)</span> <span class="k">REFERENCES</span> <span class="o">&lt;</span><span class="err">主表名</span><span class="o">&gt;</span> <span class="p">(</span><span class="o">&lt;</span><span class="err">列名</span><span class="o">&gt;</span><span class="p">);</span>
</code></pre></td></tr></table>
</div>
</div><p>示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">tb_emp2</span>
    <span class="o">-&gt;</span> <span class="k">ADD</span> <span class="k">CONSTRAINT</span> <span class="n">fk_tb_dept1</span>
    <span class="o">-&gt;</span> <span class="k">FOREIGN</span> <span class="k">KEY</span><span class="p">(</span><span class="n">deptId</span><span class="p">)</span>
    <span class="o">-&gt;</span> <span class="k">REFERENCES</span> <span class="nf">tb_dept1</span><span class="p">(</span><span class="n">id</span><span class="p">);</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">1</span><span class="p">.</span><span class="mi">38</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">Records</span><span class="p">:</span> <span class="mi">0</span>  <span class="n">Duplicates</span><span class="p">:</span> <span class="mi">0</span>  <span class="n">Warnings</span><span class="p">:</span> <span class="mi">0</span>
</code></pre></td></tr></table>
</div>
</div><p>删除外键约束语法如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="o">&lt;</span><span class="err">表名</span><span class="o">&gt;</span> <span class="k">DROP</span> <span class="k">FOREIGN</span> <span class="k">KEY</span> <span class="o">&lt;</span><span class="err">外键约束名</span><span class="o">&gt;</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="13-唯一约束">1.3 唯一约束</h3>
<p>使字段值不能重复出现，一张表主键约束只有一个，唯一约束可有多个，虽然允许有空值，但只能有一个。</p>
<p>可在创建表时使用 <code>UNIQUE</code> 关键字指定，如下示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">tb_dept2</span>
    <span class="o">-&gt;</span> <span class="p">(</span>
    <span class="o">-&gt;</span> <span class="n">id</span> <span class="kt">INT</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span> <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">,</span>
    <span class="o">-&gt;</span> <span class="n">name</span> <span class="kt">VARCHAR</span><span class="p">(</span><span class="mi">22</span><span class="p">)</span> <span class="k">UNIQUE</span><span class="p">,</span>
    <span class="o">-&gt;</span> <span class="n">location</span> <span class="kt">VARCHAR</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span>
    <span class="o">-&gt;</span> <span class="p">);</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">37</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>也可在修改表时使用如下语法</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="o">&lt;</span><span class="err">数据表名</span><span class="o">&gt;</span> <span class="k">ADD</span> <span class="k">CONSTRAINT</span> <span class="o">&lt;</span><span class="err">唯一约束名</span><span class="o">&gt;</span> <span class="k">UNIQUE</span><span class="p">(</span><span class="o">&lt;</span><span class="err">列名</span><span class="o">&gt;</span><span class="p">);</span>
</code></pre></td></tr></table>
</div>
</div><p>示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">tb_dept1</span>
    <span class="o">-&gt;</span> <span class="k">ADD</span> <span class="k">CONSTRAINT</span> <span class="n">unique_name</span> <span class="k">UNIQUE</span><span class="p">(</span><span class="n">name</span><span class="p">);</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">63</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">Records</span><span class="p">:</span> <span class="mi">0</span>  <span class="n">Duplicates</span><span class="p">:</span> <span class="mi">0</span>  <span class="n">Warnings</span><span class="p">:</span> <span class="mi">0</span>
</code></pre></td></tr></table>
</div>
</div><p>删除唯一约束的语法如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="o">&lt;</span><span class="err">表名</span><span class="o">&gt;</span> <span class="k">DROP</span> <span class="k">INDEX</span> <span class="o">&lt;</span><span class="err">唯一约束名</span><span class="o">&gt;</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="14-检查约束">1.4 检查约束</h3>
<p>检查字段有效性，使用 SQL 表达式指定需要检查的条件，放在某个列的定义后称为基于列的 CHECK 约束，放在所有列的定义以及主键约束和外键定义之后，称为基于表的 CHECK 约束</p>
<p>创建表时使用 <code>CHECK</code> 关键字指定</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">tb_emp7</span>
    <span class="o">-&gt;</span> <span class="p">(</span>
    <span class="o">-&gt;</span> <span class="n">id</span> <span class="kt">INT</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span> <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">,</span>
    <span class="o">-&gt;</span> <span class="n">name</span> <span class="kt">VARCHAR</span><span class="p">(</span><span class="mi">25</span><span class="p">),</span>
    <span class="o">-&gt;</span> <span class="n">deptId</span> <span class="kt">INT</span><span class="p">(</span><span class="mi">11</span><span class="p">),</span>
    <span class="o">-&gt;</span> <span class="n">salary</span> <span class="kt">FLOAT</span><span class="p">,</span>
    <span class="o">-&gt;</span> <span class="k">CHECK</span><span class="p">(</span><span class="n">salary</span><span class="o">&gt;</span><span class="mi">0</span> <span class="k">AND</span> <span class="n">salary</span><span class="o">&lt;</span><span class="mi">100</span><span class="p">),</span>
    <span class="o">-&gt;</span> <span class="k">FOREIGN</span> <span class="k">KEY</span><span class="p">(</span><span class="n">deptId</span><span class="p">)</span> <span class="k">REFERENCES</span> <span class="nf">tb_dept1</span><span class="p">(</span><span class="n">id</span><span class="p">)</span>
    <span class="o">-&gt;</span> <span class="p">);</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">37</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>修改表时使用如下语法</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">tb_emp7</span> <span class="k">ADD</span> <span class="k">CONSTRAINT</span> <span class="o">&lt;</span><span class="err">检查约束名</span><span class="o">&gt;</span> <span class="k">CHECK</span><span class="p">(</span><span class="o">&lt;</span><span class="err">检查约束</span><span class="o">&gt;</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">tb_emp7</span>
    <span class="o">-&gt;</span> <span class="k">ADD</span> <span class="k">CONSTRAINT</span> <span class="n">check_id</span>
    <span class="o">-&gt;</span> <span class="k">CHECK</span><span class="p">(</span><span class="n">id</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">);</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">19</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">Records</span><span class="p">:</span> <span class="mi">0</span>  <span class="n">Duplicates</span><span class="p">:</span> <span class="mi">0</span>  <span class="n">Warnings</span><span class="p">:</span> <span class="mi">0</span>
</code></pre></td></tr></table>
</div>
</div><p>删除检查约束的语法如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="o">&lt;</span><span class="err">数据表名</span><span class="o">&gt;</span> <span class="k">DROP</span> <span class="k">CONSTRAINT</span> <span class="o">&lt;</span><span class="err">检查约束名</span><span class="o">&gt;</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="15-默认值">1.5 默认值</h3>
<p>创建表时使用 <code>DEFAULT</code> 关键字设定默认值</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">tb_dept3</span>
    <span class="o">-&gt;</span> <span class="p">(</span>
    <span class="o">-&gt;</span> <span class="n">id</span> <span class="kt">INT</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span> <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">,</span>
    <span class="o">-&gt;</span> <span class="n">name</span> <span class="kt">VARCHAR</span><span class="p">(</span><span class="mi">22</span><span class="p">),</span>
    <span class="o">-&gt;</span> <span class="n">location</span> <span class="kt">VARCHAR</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span> <span class="k">DEFAULT</span> <span class="s1">&#39;Beijing&#39;</span>
    <span class="o">-&gt;</span> <span class="p">);</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">37</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>修改表时使用如下语法</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="o">&lt;</span><span class="err">数据表名</span><span class="o">&gt;</span>
<span class="k">CHANGE</span> <span class="k">COLUMN</span> <span class="o">&lt;</span><span class="err">字段名</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="err">数据类型</span><span class="o">&gt;</span> <span class="k">DEFAULT</span> <span class="o">&lt;</span><span class="err">默认值</span><span class="o">&gt;</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><p>示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">tb_dept3</span>
    <span class="o">-&gt;</span> <span class="k">CHANGE</span> <span class="k">COLUMN</span> <span class="n">location</span>
    <span class="o">-&gt;</span> <span class="n">location</span> <span class="kt">VARCHAR</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span> <span class="k">DEFAULT</span> <span class="s1">&#39;Shanghai&#39;</span><span class="p">;</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">15</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">Records</span><span class="p">:</span> <span class="mi">0</span>  <span class="n">Duplicates</span><span class="p">:</span> <span class="mi">0</span>  <span class="n">Warnings</span><span class="p">:</span> <span class="mi">0</span>
</code></pre></td></tr></table>
</div>
</div><p>删除默认值的语法如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="o">&lt;</span><span class="err">数据表名</span><span class="o">&gt;</span>
<span class="k">CHANGE</span> <span class="k">COLUMN</span> <span class="o">&lt;</span><span class="err">字段名</span><span class="o">&gt;</span> 
<span class="o">&lt;</span><span class="err">字段名</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="err">数据类型</span><span class="o">&gt;</span> <span class="k">DEFAULT</span> <span class="no">NULL</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><p>示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">tb_dept3</span>
    <span class="o">-&gt;</span> <span class="k">CHANGE</span> <span class="k">COLUMN</span> <span class="n">location</span>
    <span class="o">-&gt;</span> <span class="n">location</span> <span class="kt">VARCHAR</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span> <span class="k">DEFAULT</span> <span class="no">NULL</span><span class="p">;</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">15</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">Records</span><span class="p">:</span> <span class="mi">0</span>  <span class="n">Duplicates</span><span class="p">:</span> <span class="mi">0</span>  <span class="n">Warnings</span><span class="p">:</span> <span class="mi">0</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="16-非空约束">1.6 非空约束</h3>
<p>创建表时使用 <code>NOT NULL</code> 关键字设置非空约束</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">tb_dept4</span>
    <span class="o">-&gt;</span> <span class="p">(</span>
    <span class="o">-&gt;</span> <span class="n">id</span> <span class="kt">INT</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span> <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">,</span>
    <span class="o">-&gt;</span> <span class="n">name</span> <span class="kt">VARCHAR</span><span class="p">(</span><span class="mi">22</span><span class="p">)</span> <span class="k">NOT</span> <span class="no">NULL</span><span class="p">,</span>
    <span class="o">-&gt;</span> <span class="n">location</span> <span class="kt">VARCHAR</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span>
    <span class="o">-&gt;</span> <span class="p">);</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">37</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>修改表时使用如下语法</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="o">&lt;</span><span class="err">数据表名</span><span class="o">&gt;</span>
<span class="k">CHANGE</span> <span class="k">COLUMN</span> <span class="o">&lt;</span><span class="err">字段名</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="err">字段名</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="err">数据类型</span><span class="o">&gt;</span> <span class="k">NOT</span> <span class="no">NULL</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><p>删除非空约束语法如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="o">&lt;</span><span class="err">数据表名</span><span class="o">&gt;</span>
<span class="k">CHANGE</span> <span class="k">COLUMN</span> <span class="o">&lt;</span><span class="err">字段名</span><span class="o">&gt;</span> 
<span class="o">&lt;</span><span class="err">字段名</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="err">数据类型</span><span class="o">&gt;</span> <span class="no">NULL</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="2-运算符">2. 运算符</h2>
<p>在 MySQL 中，可以通过运算符来获取表结构以外的另一种数据。例如，学生表中存在一个 birth 字段，这个字段表示学生的出生年份。如果想得到这个学生的实际年龄，可以使用 MySQL 中的算术运算符用当前的年份减学生出生的年份，求出的结果就是这个学生的实际年龄了。</p>
<h3 id="21-常用运算符">2.1 常用运算符</h3>
<p>MySQL 支持的 4 种运算符分别是</p>
<ol>
<li>算术运算符：加减乘除、取余</li>
<li>比较运算符：等于、安全的等于（&lt;=&gt;）、不等于、大于等于、大于、小于等于、小于、 IS NULL、IS NOT NULL、BETWEEN AND</li>
<li>逻辑运算符：与、或、非、异或</li>
<li>位运算符：按位与、按位或、按位取反、按位异或、按位左移、按位右移</li>
</ol>
<p><strong>算术运算示例</strong>如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="c1"># 创建和插入数据
</span><span class="c1"></span><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="nf">temp</span><span class="p">(</span><span class="n">num</span> <span class="kt">INT</span><span class="p">);</span>
<span class="k">INSERT</span> <span class="k">INTO</span> <span class="n">temp</span> <span class="nf">VALUE</span> <span class="p">(</span><span class="mi">64</span><span class="p">);</span>
<span class="c1"># 利用运算符查看
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="n">num</span><span class="p">,</span> <span class="n">num</span><span class="o">+</span><span class="mi">10</span><span class="p">,</span> <span class="n">num</span><span class="o">-</span><span class="mi">2</span><span class="p">.</span><span class="mi">4</span><span class="p">,</span> <span class="n">num</span><span class="o">*</span><span class="mi">2</span><span class="p">,</span> <span class="n">num</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span> <span class="n">num</span><span class="o">%</span><span class="mi">3</span><span class="p">,</span> <span class="k">MOD</span> <span class="p">(</span><span class="n">num</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span> <span class="n">num</span><span class="o">/</span><span class="mi">0</span><span class="p">,</span> <span class="n">num</span><span class="o">%</span><span class="mi">0</span> <span class="k">FROM</span> <span class="n">temp</span><span class="p">;</span>
<span class="o">+------+--------+---------+-------+---------+-------+-------------+-------+-------+</span>
<span class="o">|</span> <span class="n">num</span>  <span class="o">|</span> <span class="n">num</span><span class="o">+</span><span class="mi">10</span> <span class="o">|</span> <span class="n">num</span><span class="o">-</span><span class="mi">2</span><span class="p">.</span><span class="mi">4</span> <span class="o">|</span> <span class="n">num</span><span class="o">*</span><span class="mi">2</span> <span class="o">|</span> <span class="n">num</span><span class="o">/</span><span class="mi">2</span>   <span class="o">|</span> <span class="n">num</span><span class="o">%</span><span class="mi">3</span> <span class="o">|</span> <span class="k">MOD</span> <span class="p">(</span><span class="n">num</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span> <span class="o">|</span> <span class="n">num</span><span class="o">/</span><span class="mi">0</span> <span class="o">|</span> <span class="n">num</span><span class="o">%</span><span class="mi">0</span> <span class="o">|</span>
<span class="o">+------+--------+---------+-------+---------+-------+-------------+-------+-------+</span>
<span class="o">|</span>   <span class="mi">64</span> <span class="o">|</span>     <span class="mi">74</span> <span class="o">|</span>    <span class="mi">61</span><span class="p">.</span><span class="mi">6</span> <span class="o">|</span>   <span class="mi">128</span> <span class="o">|</span> <span class="mi">32</span><span class="p">.</span><span class="mi">0000</span> <span class="o">|</span>     <span class="mi">1</span> <span class="o">|</span>           <span class="mi">1</span> <span class="o">|</span>  <span class="no">NULL</span> <span class="o">|</span>  <span class="no">NULL</span> <span class="o">|</span>
<span class="o">+------+--------+---------+-------+---------+-------+-------------+-------+-------+</span>
<span class="mi">1</span> <span class="n">row</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">01</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>可以注意到以下几点</p>
<ol>
<li>无法整除时保留小数点后4位</li>
<li>取余有两种写法</li>
<li>除数为 0 没有意义返回 NULL</li>
</ol>
<p><strong>逻辑运算符示例</strong>如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">SELECT</span> <span class="k">NOT</span> <span class="mi">1</span><span class="p">,</span> <span class="k">NOT</span> <span class="no">NULL</span><span class="p">,</span> <span class="o">!</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span> <span class="k">AND</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span> <span class="k">OR</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span> <span class="k">XOR</span> <span class="mi">0</span><span class="p">;</span>
<span class="o">+-------+----------+----+---------+--------+---------+</span>
<span class="o">|</span> <span class="k">NOT</span> <span class="mi">1</span> <span class="o">|</span> <span class="k">NOT</span> <span class="no">NULL</span> <span class="o">|</span> <span class="o">!</span><span class="mi">0</span> <span class="o">|</span> <span class="mi">1</span> <span class="k">AND</span> <span class="mi">0</span> <span class="o">|</span> <span class="mi">1</span> <span class="k">OR</span> <span class="mi">0</span> <span class="o">|</span> <span class="mi">1</span> <span class="k">XOR</span> <span class="mi">0</span> <span class="o">|</span>
<span class="o">+-------+----------+----+---------+--------+---------+</span>
<span class="o">|</span>     <span class="mi">0</span> <span class="o">|</span>     <span class="no">NULL</span> <span class="o">|</span>  <span class="mi">1</span> <span class="o">|</span>       <span class="mi">0</span> <span class="o">|</span>      <span class="mi">1</span> <span class="o">|</span>       <span class="mi">1</span> <span class="o">|</span>
<span class="o">+-------+----------+----+---------+--------+---------+</span>
<span class="mi">1</span> <span class="n">row</span> <span class="k">in</span> <span class="kt">set</span><span class="p">,</span> <span class="mi">1</span> <span class="nf">warning</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>注意到以下几点</p>
<ol>
<li>逻辑非有 NOT 和 ! 两种写法，逻辑与有 AND 和 &amp;&amp; 两种写法，逻辑或有 OR 和 || 两种写法，逻辑异或只有 XOR 一种写法</li>
<li>操作数为 NULL，返回值与 NULL 相关，操作数为 0 ，返回值与 0 相关，这是两种不同情况</li>
</ol>
<p><strong>比较运算符示例</strong>如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="mi">1</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="no">NULL</span><span class="o">&lt;=&gt;</span><span class="no">NULL</span><span class="p">,</span> <span class="mi">1</span> <span class="o">!=</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&lt;=</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&gt;=</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span> <span class="k">IS</span> <span class="no">NULL</span><span class="p">,</span> <span class="mi">1</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="no">NULL</span><span class="p">,</span> <span class="mi">1</span> <span class="k">BETWEEN</span> <span class="mi">1</span> <span class="k">AND</span> <span class="mi">3</span><span class="p">;</span>
<span class="o">+-----+-------------+--------+--------+--------+-----------+---------------+-------------------+</span>
<span class="o">|</span> <span class="mi">1</span><span class="o">=</span><span class="mi">0</span> <span class="o">|</span> <span class="no">NULL</span><span class="o">&lt;=&gt;</span><span class="no">NULL</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">!=</span> <span class="mi">2</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">&lt;=</span> <span class="mi">2</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">&gt;=</span> <span class="mi">2</span> <span class="o">|</span> <span class="mi">1</span> <span class="k">IS</span> <span class="no">NULL</span> <span class="o">|</span> <span class="mi">1</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="no">NULL</span> <span class="o">|</span> <span class="mi">1</span> <span class="k">BETWEEN</span> <span class="mi">1</span> <span class="k">AND</span> <span class="mi">3</span> <span class="o">|</span>
<span class="o">+-----+-------------+--------+--------+--------+-----------+---------------+-------------------+</span>
<span class="o">|</span>   <span class="mi">0</span> <span class="o">|</span>           <span class="mi">1</span> <span class="o">|</span>      <span class="mi">1</span> <span class="o">|</span>      <span class="mi">1</span> <span class="o">|</span>      <span class="mi">0</span> <span class="o">|</span>         <span class="mi">0</span> <span class="o">|</span>             <span class="mi">1</span> <span class="o">|</span>                 <span class="mi">1</span> <span class="o">|</span>
<span class="o">+-----+-------------+--------+--------+--------+-----------+---------------+-------------------+</span>
<span class="mi">1</span> <span class="n">row</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>注意到</p>
<ol>
<li>&lt;=&gt; 指安全的等于，用来判断 NULL 值，使结果返回 1 或 0 而不是 NULL；</li>
<li>BETWEEN AND 判断的数可以位于区间边界；</li>
</ol>
<p><strong>位运算符示例</strong>如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="mi">10</span><span class="o">|</span><span class="mi">15</span><span class="p">,</span> <span class="mi">10</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">,</span> <span class="mi">10</span><span class="o">^</span><span class="mi">15</span><span class="p">,</span> <span class="mi">1</span><span class="o">&lt;&lt;</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="o">&gt;&gt;</span><span class="mi">1</span><span class="p">,</span> <span class="o">~</span><span class="mi">1</span><span class="p">;</span>
<span class="o">+-------+-------+-------+------+------+----------------------+</span>
<span class="o">|</span> <span class="mi">10</span><span class="o">|</span><span class="mi">15</span> <span class="o">|</span> <span class="mi">10</span><span class="o">&amp;</span><span class="mi">15</span> <span class="o">|</span> <span class="mi">10</span><span class="o">^</span><span class="mi">15</span> <span class="o">|</span> <span class="mi">1</span><span class="o">&lt;&lt;</span><span class="mi">2</span> <span class="o">|</span> <span class="mi">1</span><span class="o">&gt;&gt;</span><span class="mi">1</span> <span class="o">|</span> <span class="o">~</span><span class="mi">1</span>                   <span class="o">|</span>
<span class="o">+-------+-------+-------+------+------+----------------------+</span>
<span class="o">|</span>    <span class="mi">15</span> <span class="o">|</span>    <span class="mi">10</span> <span class="o">|</span>     <span class="mi">5</span> <span class="o">|</span>    <span class="mi">4</span> <span class="o">|</span>    <span class="mi">0</span> <span class="o">|</span> <span class="mi">18446744073709551614</span> <span class="o">|</span>
<span class="o">+-------+-------+-------+------+------+----------------------+</span>
<span class="mi">1</span> <span class="n">row</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>位运算一般用于操作整数，对整数进行位运算才有实际的意义。整数在内存中是以补码形式存储的，正数的补码形式和原码形式相同，而负数的补码形式和它的原码形式是不一样的，这意味着对负数进行位运算时，操作的是它的补码，而不是它的原码。</p>
<h3 id="22-运算符优先级表">2.2 运算符优先级表</h3>
<table>
<thead>
<tr>
<th>优先级由低到高排列</th>
<th>运算符</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>=(赋值运算）、:=</td>
</tr>
<tr>
<td>2</td>
<td>II、OR</td>
</tr>
<tr>
<td>3</td>
<td>XOR</td>
</tr>
<tr>
<td>4</td>
<td>&amp;&amp;、AND</td>
</tr>
<tr>
<td>5</td>
<td>NOT</td>
</tr>
<tr>
<td>6</td>
<td>BETWEEN、CASE、WHEN、THEN、ELSE</td>
</tr>
<tr>
<td>7</td>
<td>=(比较运算）、&lt;=&gt;、&gt;=、&gt;、&lt;=、&lt;、&lt;&gt;、!=、 IS、LIKE、REGEXP、IN</td>
</tr>
<tr>
<td>8</td>
<td>|</td>
</tr>
<tr>
<td>9</td>
<td>&amp;</td>
</tr>
<tr>
<td>10</td>
<td>&laquo;、&raquo;</td>
</tr>
<tr>
<td>11</td>
<td>-(减号）、+</td>
</tr>
<tr>
<td>12</td>
<td>*、/、%</td>
</tr>
<tr>
<td>13</td>
<td>^</td>
</tr>
<tr>
<td>14</td>
<td>-(负号）、〜（位反转）</td>
</tr>
<tr>
<td>15</td>
<td>!</td>
</tr>
</tbody>
</table>
<h3 id="23-in-和-not-in">2.3 IN 和 NOT IN</h3>
<p>MySQL 中的 IN 运算符用来判断表达式的值是否位于给出的列表中；如果是，返回值为 1，否则返回值为 0。NOT IN 的作用和 IN 恰好相反。语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">expr</span> <span class="k">IN</span> <span class="p">(</span> <span class="n">value1</span><span class="p">,</span> <span class="n">value2</span><span class="p">,</span> <span class="n">value3</span> <span class="p">...</span> <span class="n">valueN</span> <span class="p">)</span>
<span class="n">expr</span> <span class="k">NOT</span> <span class="k">IN</span> <span class="p">(</span> <span class="n">value1</span><span class="p">,</span> <span class="n">value2</span><span class="p">,</span> <span class="n">value3</span> <span class="p">...</span> <span class="n">valueN</span> <span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>示例如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"> <span class="k">SELECT</span> <span class="mi">2</span> <span class="k">IN</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="s1">&#39;this&#39;</span><span class="p">),</span> <span class="s1">&#39;this&#39;</span> <span class="k">NOT</span> <span class="k">IN</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="s1">&#39;this&#39;</span><span class="p">);</span>
<span class="o">+---------------------+------------------------------+</span>
<span class="o">|</span> <span class="mi">2</span> <span class="k">IN</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="s1">&#39;this&#39;</span><span class="p">)</span> <span class="o">|</span> <span class="s1">&#39;this&#39;</span> <span class="k">NOT</span> <span class="k">IN</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="s1">&#39;this&#39;</span><span class="p">)</span> <span class="o">|</span>
<span class="o">+---------------------+------------------------------+</span>
<span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                            <span class="mi">0</span> <span class="o">|</span>
<span class="o">+---------------------+------------------------------+</span>
<span class="mi">1</span> <span class="n">row</span> <span class="k">in</span> <span class="kt">set</span><span class="p">,</span> <span class="mi">2</span> <span class="nf">warnings</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>当 IN 运算符的两侧有一个为空值 NULL 时，如果找不到匹配项，则返回值为 NULL；如果找到了匹配项，则返回值为 1。</p>
<h2 id="3-mysql-函数">3. MySQL 函数</h2>
<p>MySQL 提供了一些内部函数帮助用户更方便地处理表中数据，包括数学函数、字符串函数、日期和时间函数、条件判断函数、系统信息函数和加密函数等。SELECT、INSERT、UPDATE 和 DELETE 语句及其子句（例如 WHERE、ORDER BY、HAVING 等）中都可以使用 MySQL 函数。实际应用时可以查阅：</p>
<ul>
<li><a href="http://m.biancheng.net/mysql/function/" target="_blank" rel="noopener noreffer">MySQL 常用函数汇总</a></li>
<li><a href="https://dev.mysql.com/doc/refman/5.7/en/" target="_blank" rel="noopener noreffer">MySQL 官方参考文档</a></li>
</ul>]]></description></item><item><title>Mysql学习4-数据表操作</title><link>https://shuzang.github.io/mysql-learning-4-data-manipulation-language/</link><pubDate>Sun, 24 May 2020 11:25:00 +0800</pubDate><author>作者</author><guid>https://shuzang.github.io/mysql-learning-4-data-manipulation-language/</guid><description><![CDATA[<p>介绍数据表的基本操作，主要包括创建数据表、查看数据表结构、修改数据表和删除数据表等。</p>
<h2 id="1-创建">1. 创建</h2>
<p>创建数据表的语法格式为</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="o">&lt;</span><span class="err">表名</span><span class="o">&gt;</span> <span class="p">([</span><span class="err">表定义选项</span><span class="p">])[</span><span class="err">表选项</span><span class="p">][</span><span class="err">分区选项</span><span class="p">];</span>
</code></pre></td></tr></table>
</div>
</div><p>其中，<code>[表定义选项]</code>的格式为：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="o">&lt;</span><span class="err">列名</span><span class="mi">1</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="err">类型</span><span class="mi">1</span><span class="o">&gt;</span> <span class="p">[,</span><span class="err">…</span><span class="p">]</span> <span class="o">&lt;</span><span class="err">列名</span><span class="n">n</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="err">类型</span><span class="n">n</span><span class="o">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>语句的主要语法及使用说明如下：</p>
<ul>
<li>CREATE TABLE：用于创建给定名称的表，必须拥有表CREATE的权限。</li>
<li>&lt;表名&gt;：指定要创建表的名称，在 CREATE TABLE 之后给出，必须符合标识符命名规则。表名称被指定为 db_name.tbl_name，以便在特定的数据库中创建表。无论是否有当前数据库，都可以通过这种方式创建。在当前数据库中创建表时，可以省略 db-name。如果使用加引号的识别名，则应对数据库和表名称分别加引号。例如，&lsquo;mydb&rsquo;.&lsquo;mytbl&rsquo; 是合法的，但 &lsquo;mydb.mytbl&rsquo; 不合法。</li>
<li>&lt;表定义选项&gt;：表创建定义，由列名（col_name）、列的定义（column_definition）以及可能的空值说明、完整性约束或表索引组成。</li>
<li>默认的情况是，表被创建到当前的数据库中。若表已存在、没有当前数据库或者数据库不存在，则会出现错误。</li>
</ul>
<p>示例如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">USE</span> <span class="n">test_db</span><span class="p">;</span>
<span class="k">Database</span> <span class="n">changed</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">tb_emp1</span>
    <span class="o">-&gt;</span> <span class="p">(</span>
    <span class="o">-&gt;</span> <span class="n">id</span> <span class="kt">INT</span><span class="p">(</span><span class="mi">11</span><span class="p">),</span>
    <span class="o">-&gt;</span> <span class="n">name</span> <span class="kt">VARCHAR</span><span class="p">(</span><span class="mi">25</span><span class="p">),</span>
    <span class="o">-&gt;</span> <span class="n">deptId</span> <span class="kt">INT</span><span class="p">(</span><span class="mi">11</span><span class="p">),</span>
    <span class="o">-&gt;</span> <span class="n">salary</span> <span class="kt">FLOAT</span>
    <span class="o">-&gt;</span> <span class="p">);</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">37</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="2-查看">2. 查看</h2>
<p>使用 <code>SHOW TABLES</code> 查看数据表</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SHOW</span> <span class="kp">TABLES</span><span class="p">;</span>
<span class="o">+--------------------+</span>
<span class="o">|</span> <span class="n">Tables_in_test_db</span>  <span class="o">|</span>
<span class="o">+--------------------+</span>
<span class="o">|</span> <span class="n">tb_emp1</span>            <span class="o">|</span>
<span class="o">+--------------------+</span>
<span class="mi">1</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>使用 <code>DESCRIBE/DESC &lt;表名&gt; </code> 查看表的字段信息，包括字段名、字段数据类型、是否为主键、是否有默认值等</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">DESC</span> <span class="n">tb_emp1</span><span class="p">;</span>
<span class="o">+--------+-------------+------+-----+---------+-------+</span>
<span class="o">|</span> <span class="n">Field</span>  <span class="o">|</span> <span class="n">Type</span>        <span class="o">|</span> <span class="no">Null</span> <span class="o">|</span> <span class="k">Key</span> <span class="o">|</span> <span class="k">Default</span> <span class="o">|</span> <span class="n">Extra</span> <span class="o">|</span>
<span class="o">+--------+-------------+------+-----+---------+-------+</span>
<span class="o">|</span> <span class="n">id</span>     <span class="o">|</span> <span class="kt">int</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span>     <span class="o">|</span> <span class="n">YES</span>  <span class="o">|</span>     <span class="o">|</span> <span class="no">NULL</span>    <span class="o">|</span>       <span class="o">|</span>
<span class="o">|</span> <span class="n">name</span>   <span class="o">|</span> <span class="kt">varchar</span><span class="p">(</span><span class="mi">25</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span>  <span class="o">|</span>     <span class="o">|</span> <span class="no">NULL</span>    <span class="o">|</span>       <span class="o">|</span>
<span class="o">|</span> <span class="n">deptId</span> <span class="o">|</span> <span class="kt">int</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span>     <span class="o">|</span> <span class="n">YES</span>  <span class="o">|</span>     <span class="o">|</span> <span class="no">NULL</span>    <span class="o">|</span>       <span class="o">|</span>
<span class="o">|</span> <span class="n">salary</span> <span class="o">|</span> <span class="kt">float</span>        <span class="o">|</span> <span class="n">YES</span>  <span class="o">|</span>     <span class="o">|</span> <span class="no">NULL</span>    <span class="o">|</span>       <span class="o">|</span>
<span class="o">+--------+-------------+------+-----+---------+-------+</span>
<span class="mi">4</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">14</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>其中，各个字段的含义如下：</p>
<ul>
<li>Null：表示该列是否可以存储 NULL 值。</li>
<li>Key：表示该列是否已编制索引。PRI 表示该列是表主键的一部分，UNI 表示该列是 UNIQUE 索引的一部分，MUL 表示在列中某个给定值允许出现多次。</li>
<li>Default：表示该列是否有默认值，如果有，值是多少。</li>
<li>Extra：表示可以获取的与给定列有关的附加信息，如 AUTO_INCREMENT 等。</li>
</ul>
<p>使用 <code>SHOW CREATE TABLE &lt;表名&gt;</code> 显示创建表时的CREATE TABLE语句、存储引擎和字符编码，末尾使用 <code>\G</code> 可以使显示结果更规整</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SHOW</span> <span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">tb_emp1</span><span class="err">\</span><span class="n">G</span>
<span class="o">***************************</span> <span class="mi">1</span><span class="p">.</span> <span class="n">row</span> <span class="o">***************************</span>
       <span class="k">Table</span><span class="p">:</span> <span class="n">tb_emp1</span>
<span class="k">Create</span> <span class="k">Table</span><span class="p">:</span> <span class="k">CREATE</span> <span class="k">TABLE</span> <span class="o">`</span><span class="n">tb_emp1</span><span class="o">`</span> <span class="p">(</span>
  <span class="o">`</span><span class="n">id</span><span class="o">`</span> <span class="kt">int</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span> <span class="k">DEFAULT</span> <span class="no">NULL</span><span class="p">,</span>
  <span class="o">`</span><span class="n">name</span><span class="o">`</span> <span class="kt">varchar</span><span class="p">(</span><span class="mi">25</span><span class="p">)</span> <span class="k">DEFAULT</span> <span class="no">NULL</span><span class="p">,</span>
  <span class="o">`</span><span class="n">deptId</span><span class="o">`</span> <span class="kt">int</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span> <span class="k">DEFAULT</span> <span class="no">NULL</span><span class="p">,</span>
  <span class="o">`</span><span class="n">salary</span><span class="o">`</span> <span class="kt">float</span> <span class="k">DEFAULT</span> <span class="no">NULL</span>
<span class="p">)</span> <span class="kp">ENGINE</span><span class="o">=</span><span class="n">InnoDB</span> <span class="k">DEFAULT</span> <span class="kp">CHARSET</span><span class="o">=</span><span class="n">gb2312</span>
<span class="mi">1</span> <span class="n">row</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">03</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="3-修改">3. 修改</h2>
<p>修改表指的是修改数据库中已经存在的数据表的结构，例如增加或删减列、更改原有列类型、重新命名列或表等，前提是数据库中已经存在该表。语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="o">&lt;</span><span class="err">表名</span><span class="o">&gt;</span> <span class="p">[</span><span class="err">修改选项</span><span class="p">]</span>
</code></pre></td></tr></table>
</div>
</div><p>修改选项的语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="err">{</span> <span class="k">ADD</span> <span class="k">COLUMN</span> <span class="o">&lt;</span><span class="err">列名</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="err">类型</span><span class="o">&gt;</span>
<span class="o">|</span> <span class="k">CHANGE</span> <span class="k">COLUMN</span> <span class="o">&lt;</span><span class="err">旧列名</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="err">新列名</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="err">新列类型</span><span class="o">&gt;</span>
<span class="o">|</span> <span class="k">ALTER</span> <span class="k">COLUMN</span> <span class="o">&lt;</span><span class="err">列名</span><span class="o">&gt;</span> <span class="err">{</span> <span class="kt">SET</span> <span class="k">DEFAULT</span> <span class="o">&lt;</span><span class="err">默认值</span><span class="o">&gt;</span> <span class="o">|</span> <span class="k">DROP</span> <span class="k">DEFAULT</span> <span class="err">}</span>
<span class="o">|</span> <span class="n">MODIFY</span> <span class="k">COLUMN</span> <span class="o">&lt;</span><span class="err">列名</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="err">类型</span><span class="o">&gt;</span>
<span class="o">|</span> <span class="k">DROP</span> <span class="k">COLUMN</span> <span class="o">&lt;</span><span class="err">列名</span><span class="o">&gt;</span>
<span class="o">|</span> <span class="k">RENAME</span> <span class="k">TO</span> <span class="o">&lt;</span><span class="err">新表名</span><span class="o">&gt;</span>
<span class="o">|</span> <span class="k">CHARACTER</span> <span class="kt">SET</span> <span class="o">&lt;</span><span class="err">字符集名</span><span class="o">&gt;</span>
<span class="o">|</span> <span class="k">COLLATE</span> <span class="o">&lt;</span><span class="err">校对规则名</span><span class="o">&gt;</span> <span class="err">}</span>
</code></pre></td></tr></table>
</div>
</div><p>一些示例如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="o">&lt;</span><span class="err">旧表名</span><span class="o">&gt;</span> <span class="k">RENAME</span> <span class="p">[</span><span class="k">TO</span><span class="p">]</span> <span class="o">&lt;</span><span class="err">新表名</span><span class="o">&gt;</span><span class="p">;</span> <span class="c1"># 修改表名
</span><span class="c1"></span><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="err">表名</span> <span class="p">[</span><span class="k">DEFAULT</span><span class="p">]</span> <span class="k">CHARACTER</span> <span class="kt">SET</span> <span class="o">&lt;</span><span class="err">字符集名</span><span class="o">&gt;</span> <span class="p">[</span><span class="k">DEFAULT</span><span class="p">]</span> <span class="k">COLLATE</span> <span class="o">&lt;</span><span class="err">校对规则名</span><span class="o">&gt;</span><span class="p">;</span> <span class="c1"># 修改表字符集
</span></code></pre></td></tr></table>
</div>
</div><p>一个具体的修改字段名的例子如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">tb_emp1</span>
    <span class="o">-&gt;</span> <span class="k">CHANGE</span> <span class="n">col1</span> <span class="n">col3</span> <span class="kt">CHAR</span><span class="p">(</span><span class="mi">30</span><span class="p">);</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">76</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">Records</span><span class="p">:</span> <span class="mi">0</span>  <span class="n">Duplicates</span><span class="p">:</span> <span class="mi">0</span>  <span class="n">Warnings</span><span class="p">:</span> <span class="mi">0</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">DESC</span> <span class="n">tb_emp1</span><span class="p">;</span>
<span class="o">+--------+-------------+------+-----+---------+-------+</span>
<span class="o">|</span> <span class="n">Field</span>  <span class="o">|</span> <span class="n">Type</span>        <span class="o">|</span> <span class="no">Null</span> <span class="o">|</span> <span class="k">Key</span> <span class="o">|</span> <span class="k">Default</span> <span class="o">|</span> <span class="n">Extra</span> <span class="o">|</span>
<span class="o">+--------+-------------+------+-----+---------+-------+</span>
<span class="o">|</span> <span class="n">col3</span>   <span class="o">|</span> <span class="kt">char</span><span class="p">(</span><span class="mi">30</span><span class="p">)</span>    <span class="o">|</span> <span class="n">YES</span>  <span class="o">|</span>     <span class="o">|</span> <span class="no">NULL</span>    <span class="o">|</span>       <span class="o">|</span>
<span class="o">|</span> <span class="n">id</span>     <span class="o">|</span> <span class="kt">int</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span>     <span class="o">|</span> <span class="n">YES</span>  <span class="o">|</span>     <span class="o">|</span> <span class="no">NULL</span>    <span class="o">|</span>       <span class="o">|</span>
<span class="o">|</span> <span class="n">name</span>   <span class="o">|</span> <span class="kt">varchar</span><span class="p">(</span><span class="mi">30</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span>  <span class="o">|</span>     <span class="o">|</span> <span class="no">NULL</span>    <span class="o">|</span>       <span class="o">|</span>
<span class="o">|</span> <span class="n">deptId</span> <span class="o">|</span> <span class="kt">int</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span>     <span class="o">|</span> <span class="n">YES</span>  <span class="o">|</span>     <span class="o">|</span> <span class="no">NULL</span>    <span class="o">|</span>       <span class="o">|</span>
<span class="o">|</span> <span class="n">salary</span> <span class="o">|</span> <span class="kt">float</span>        <span class="o">|</span> <span class="n">YES</span>  <span class="o">|</span>     <span class="o">|</span> <span class="no">NULL</span>    <span class="o">|</span>       <span class="o">|</span>
<span class="o">+--------+-------------+------+-----+---------+-------+</span>
<span class="mi">5</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">01</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>有意思的是，添加字段时可以选择位置</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">student</span> <span class="k">ADD</span> <span class="n">age</span> <span class="kt">INT</span><span class="p">(</span><span class="mi">4</span><span class="p">);</span> <span class="c1"># 默认在末尾添加
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">student</span> <span class="k">ADD</span> <span class="n">stuId</span> <span class="kt">INT</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span> <span class="n">FIRST</span><span class="p">;</span> <span class="c1"># 在开头添加
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">student</span> <span class="k">ADD</span> <span class="n">stuno</span> <span class="kt">INT</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span> <span class="n">AFTER</span> <span class="n">name</span><span class="p">;</span> <span class="c1"># 在中间位置添加
</span></code></pre></td></tr></table>
</div>
</div><h2 id="4-删除">4. 删除</h2>
<p>删除数据表的语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">DROP</span> <span class="k">TABLE</span> <span class="p">[</span><span class="k">IF</span> <span class="k">EXISTS</span><span class="p">]</span> <span class="err">表名</span><span class="mi">1</span> <span class="p">[</span> <span class="p">,</span><span class="err">表名</span><span class="mi">2</span><span class="p">,</span> <span class="err">表名</span><span class="mi">3</span> <span class="p">...]</span>
</code></pre></td></tr></table>
</div>
</div><p>在删除表的同时，表的结构和表中所有的数据都会被删除，因此在删除数据表之前最好先备份，以免造成无法挽回的损失。不过应注意</p>
<ol>
<li>用户必须拥有执行 DROP TABLE 命令的权限，否则数据表不会被删除。</li>
<li>表被删除时，用户在该表上的权限不会自动删除。</li>
</ol>
<p>数据表之间还经常存在外键关联的情况，这时如果直接删除父表，会破坏数据表的完整性，也会删除失败。此时有以下两种方法：</p>
<ul>
<li>先删除与它关联的子表，再删除父表；但是这样会同时删除两个表中的数据。</li>
<li>将关联表的外键约束取消，再删除父表；适用于需要保留子表的数据，只删除父表的情况。</li>
</ul>
<p>假设tb_emp5 表为子表，具有名称为 fk_emp4_emp5 的外键约束；tb_emp4 为父表，其主键 id 被子表 tb_ emp5 所关联。删除被数据表 tb_emp5 关联的数据表 tb_emp4，SQL 语句如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="c1"># 解除外键约束
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">tb_emp5</span> <span class="k">DROP</span> <span class="k">FOREIGN</span> <span class="k">KEY</span> <span class="n">fk_emp4_emp5</span><span class="p">;</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">03</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">Records</span><span class="p">:</span> <span class="mi">0</span>  <span class="n">Duplicates</span><span class="p">:</span> <span class="mi">0</span>  <span class="n">Warnings</span><span class="p">:</span> <span class="mi">0</span>
<span class="c1"># 删除父表
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">DROP</span> <span class="k">TABLE</span> <span class="n">tb_emp4</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>Mysql学习3-数据类型和存储引擎</title><link>https://shuzang.github.io/mysql-learning-3-data-type-and-storage-engine/</link><pubDate>Sun, 24 May 2020 10:32:00 +0800</pubDate><author>作者</author><guid>https://shuzang.github.io/mysql-learning-3-data-type-and-storage-engine/</guid><description><![CDATA[<p>存储引擎决定数据表的类型，数据表的字段则有自己的数据类型。</p>
<h2 id="1-数据类型">1. 数据类型</h2>
<p>MySQL 的数据类型有大概可以分为 4 种</p>
<ol>
<li><strong>数值类型</strong>：包括整数类型 TINYINT、SMALLINT、MEDIUMINT、INT、BIGINT，浮点数类型 FLOAT 和 DOUBLE，定点数类型 DECIMAL</li>
<li><strong>日期/时间类型</strong>：包括 YEAR、TIME、DATE、DATETIME 和 TIMESTAMP。</li>
<li><strong>字符串类型</strong>：包括 CHAR、VARCHAR、BINARY、VARBINARY、BLOB、TEXT、ENUM 和 SET 等。</li>
<li><strong>二进制类型</strong>：包括 BIT、BINARY、VARBINARY、TINYBLOB、BLOB、MEDIUMBLOB 和 LONGBLOB。</li>
</ol>
<h3 id="11-数值类型">1.1 数值类型</h3>
<p>整数类型大小如下表</p>
<table>
<thead>
<tr>
<th>类型名称</th>
<th>说明</th>
<th>存储需求</th>
</tr>
</thead>
<tbody>
<tr>
<td>TINYINT</td>
<td>很小的整数</td>
<td>1个字节</td>
</tr>
<tr>
<td>SMALLINT</td>
<td>小的整数</td>
<td>2个宇节</td>
</tr>
<tr>
<td>MEDIUMINT</td>
<td>中等大小的整数</td>
<td>3个字节</td>
</tr>
<tr>
<td>INT (INTEGHR)</td>
<td>普通大小的整数</td>
<td>4个字节</td>
</tr>
<tr>
<td>BIGINT</td>
<td>大整数</td>
<td>8个字节</td>
</tr>
</tbody>
</table>
<p>浮点类型和定点类型都可以用<code>(M, D)</code>来表示，其中<code>M</code>称为精度，表示总共的位数；<code>D</code>称为标度，表示小数的位数。浮点数类型的取值范围为 M（1～255）和 D（1～30，且不能大于 M-2），分别表示显示宽度和小数位数。M 和 D 在 FLOAT 和DOUBLE 中是可选的，FLOAT 和 DOUBLE 类型将被保存为硬件所支持的最大精度。DECIMAL 默认为 （10，0）。类型大小如下表</p>
<table>
<thead>
<tr>
<th>类型名称</th>
<th>说明</th>
<th>存储需求</th>
</tr>
</thead>
<tbody>
<tr>
<td>FLOAT</td>
<td>单精度浮点数</td>
<td>4 个字节</td>
</tr>
<tr>
<td>DOUBLE</td>
<td>双精度浮点数</td>
<td>8 个字节</td>
</tr>
<tr>
<td>DECIMAL (M, D)，DEC</td>
<td>压缩的“严格”定点数</td>
<td>M+2 个字节</td>
</tr>
</tbody>
</table>
<p>不论是定点还是浮点类型，如果用户指定的精度超出精度范围，则会四舍五入进行处理。</p>
<h3 id="12-日期时间类型">1.2 日期/时间类型</h3>
<p>整体情况如下表所示</p>
<table>
<thead>
<tr>
<th>类型名称</th>
<th>日期格式</th>
<th>日期范围</th>
<th>存储需求</th>
</tr>
</thead>
<tbody>
<tr>
<td>YEAR</td>
<td>YYYY</td>
<td>1901 ~ 2155</td>
<td>1 个字节</td>
</tr>
<tr>
<td>TIME</td>
<td>HH:MM:SS</td>
<td>-838:59:59 ~ 838:59:59</td>
<td>3 个字节</td>
</tr>
<tr>
<td>DATE</td>
<td>YYYY-MM-DD</td>
<td>1000-01-01 ~ 9999-12-3</td>
<td>3 个字节</td>
</tr>
<tr>
<td>DATETIME</td>
<td>YYYY-MM-DD HH:MM:SS</td>
<td>1000-01-01 00:00:00 ~ 9999-12-31 23:59:59</td>
<td>8 个字节</td>
</tr>
<tr>
<td>TIMESTAMP</td>
<td>YYYY-MM-DD HH:MM:SS</td>
<td>1980-01-01 00:00:01 UTC ~ 2040-01-19 03:14:07 UTC</td>
<td>4 个字节</td>
</tr>
</tbody>
</table>
<p>每一个类型都有合法的取值范围，当指定确定不合法的值时，系统将“零”值插入数据库中。</p>
<p>TIMESTAMP 与 DATETIME 最大区别是：</p>
<ul>
<li>DATETIME 在存储日期数据时，按实际输入的格式存储，即输入什么就存储什么，与时区无关；</li>
<li>而 TIMESTAMP 值的存储是以 UTC（世界标准时间）格式保存的，存储时对当前时区进行转换，检索时再转换回当前时区。即查询时，根据当前时区的不同，显示的时间值是不同的。</li>
</ul>
<h3 id="13-字符串类型">1.3 字符串类型</h3>
<p>下表中列出了 MySQL 中的字符串数据类型，括号中的<code>M</code>表示可以为其指定长度。</p>
<table>
<thead>
<tr>
<th>类型名称</th>
<th>说明</th>
<th>存储需求</th>
</tr>
</thead>
<tbody>
<tr>
<td>CHAR(M)</td>
<td>固定长度非二进制字符串</td>
<td>M 字节，1&lt;=M&lt;=255</td>
</tr>
<tr>
<td>VARCHAR(M)</td>
<td>变长非二进制字符串</td>
<td>L+1字节，在此，L&lt; = M和 1&lt;=M&lt;=255</td>
</tr>
<tr>
<td>TINYTEXT</td>
<td>非常小的非二进制字符串</td>
<td>L+1字节，在此，L&lt;2^8</td>
</tr>
<tr>
<td>TEXT</td>
<td>小的非二进制字符串</td>
<td>L+2字节，在此，L&lt;2^16</td>
</tr>
<tr>
<td>MEDIUMTEXT</td>
<td>中等大小的非二进制字符串</td>
<td>L+3字节，在此，L&lt;2^24</td>
</tr>
<tr>
<td>LONGTEXT</td>
<td>大的非二进制字符串</td>
<td>L+4字节，在此，L&lt;2^32</td>
</tr>
<tr>
<td>ENUM</td>
<td>枚举类型，只能有一个枚举字符串值</td>
<td>1或2个字节，取决于枚举值的数目 (最大值为65535)</td>
</tr>
<tr>
<td>SET</td>
<td>一个设置，字符串对象可以有零个或 多个SET成员</td>
<td>1、2、3、4或8个字节，取决于集合 成员的数量（最多64个成员）</td>
</tr>
</tbody>
</table>
<p><strong>ENUM</strong></p>
<p>ENUM 是一个字符串对象，值为表创建时列规定中枚举的一列值。其语法格式如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">&lt;字段名&gt; ENUM( &#39;值1&#39;, &#39;值1&#39;, …, &#39;值n&#39; )
</code></pre></td></tr></table>
</div>
</div><p>取值时在指定的枚举列表中使用索引获取，一次只能取一个。如果创建的成员中有空格，尾部的空格将自动被删除。</p>
<p>列表值所允许的成员值从 1 开始编号，MySQL 存储的就是这个索引编号，枚举最多可以有 65535 个元素。</p>
<p>ENUM 值依照列索引顺序排列，空字符串排在非空字符串前，NULL 值排在其他所有枚举值前。</p>
<p>如果将 ENUM 列声明为 NULL，默认值为 NULL。如果被声明为 NOT NULL，默认值为允许的值列表的第 1 个元素。</p>
<p><strong>SET</strong></p>
<p>SET 是一个字符串的对象，可以有零或多个值，SET 列最多可以有 64 个成员，值为表创建时规定的一列值。指定包括多个 SET 成员的 SET 列值时，各成员之间用逗号<code>,</code>隔开，语法格式如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">SET( &#39;值1&#39;, &#39;值2&#39;, …, &#39;值n&#39; )
</code></pre></td></tr></table>
</div>
</div><p>与 ENUM 类型相同，SET 值在内部用整数表示，列表中每个值都有一个索引编号。当创建表时，SET 成员值的尾部空格将自动删除。</p>
<p>但与 ENUM 类型不同的是，ENUM 类型的字段只能从定义的列值中选择一个值插入，而 SET 类型的列可从定义的列值中选择多个字符的联合。</p>
<p>如果插入 SET 字段中的列值有重复，则 MySQL 自动删除重复的值；插入 SET 字段的值的顺序并不重要，MySQL 会在存入数据库时，按照定义的顺序显示；如果插入了不正确的值，默认情况下，MySQL 将忽视这些值，给出警告。</p>
<h3 id="14-二进制类型">1.4 二进制类型</h3>
<p>MySQL 支持两类字符型数据：文本字符串和二进制字符串。文本字符串就是上一小节介绍的内容，二进制字符串就是本节介绍的「二进制类型」。下表中列出了 MySQL 中的二进制数据类型，括号中的<code>M</code>表示可以为其指定长度。</p>
<table>
<thead>
<tr>
<th>类型名称</th>
<th>说明</th>
<th>存储需求</th>
</tr>
</thead>
<tbody>
<tr>
<td>BIT(M)</td>
<td>位字段类型</td>
<td>大约 (M+7)/8 字节</td>
</tr>
<tr>
<td>BINARY(M)</td>
<td>固定长度二进制字符串</td>
<td>M 字节</td>
</tr>
<tr>
<td>VARBINARY (M)</td>
<td>可变长度二进制字符串</td>
<td>M+1 字节</td>
</tr>
<tr>
<td>TINYBLOB (M)</td>
<td>非常小的BLOB</td>
<td>L+1 字节，在此，L&lt;2^8</td>
</tr>
<tr>
<td>BLOB (M)</td>
<td>小 BLOB</td>
<td>L+2 字节，在此，L&lt;2^16</td>
</tr>
<tr>
<td>MEDIUMBLOB (M)</td>
<td>中等大小的BLOB</td>
<td>L+3 字节，在此，L&lt;2^24</td>
</tr>
<tr>
<td>LONGBLOB (M)</td>
<td>非常大的BLOB</td>
<td>L+4 字节，在此，L&lt;2^32</td>
</tr>
</tbody>
</table>
<h2 id="2-存储引擎">2. 存储引擎</h2>
<p>存储引擎可理解为表的类型，决定了数据表在计算机中的存储方式。不同的存储引擎提供不同的存储机制、索引技巧、锁定水平等功能，使用不同的存储引擎还可以获得特定的功能。</p>
<p>MySQL 提供了多个不同的存储引擎，包括处理事务安全表的引擎和处理非事务安全表的引擎。在 MySQL 中，不需要在整个服务器中使用同一种存储引擎，针对具体的要求，可以对每一个表使用不同的存储引擎。</p>
<h3 id="21-常见类型">2.1 常见类型</h3>
<p>使用 <code>SHOW ENGINES;</code> 语句查看系统所支持的引擎类型</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">show</span> <span class="n">engines</span><span class="p">;</span>
<span class="o">+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+</span>
<span class="o">|</span> <span class="kp">Engine</span>             <span class="o">|</span> <span class="n">Support</span> <span class="o">|</span> <span class="n">Comment</span>                                                        <span class="o">|</span> <span class="n">Transactions</span> <span class="o">|</span> <span class="n">XA</span>   <span class="o">|</span> <span class="n">Savepoints</span> <span class="o">|</span>
<span class="o">+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+</span>
<span class="o">|</span> <span class="n">MEMORY</span>             <span class="o">|</span> <span class="n">YES</span>     <span class="o">|</span> <span class="n">Hash</span> <span class="n">based</span><span class="p">,</span> <span class="n">stored</span> <span class="k">in</span> <span class="n">memory</span><span class="p">,</span> <span class="n">useful</span> <span class="k">for</span> <span class="n">temporary</span> <span class="kp">tables</span>      <span class="o">|</span> <span class="n">NO</span>           <span class="o">|</span> <span class="n">NO</span>   <span class="o">|</span> <span class="n">NO</span>         <span class="o">|</span>
<span class="o">|</span> <span class="n">MRG_MYISAM</span>         <span class="o">|</span> <span class="n">YES</span>     <span class="o">|</span> <span class="n">Collection</span> <span class="n">of</span> <span class="n">identical</span> <span class="n">MyISAM</span> <span class="kp">tables</span>                          <span class="o">|</span> <span class="n">NO</span>           <span class="o">|</span> <span class="n">NO</span>   <span class="o">|</span> <span class="n">NO</span>         <span class="o">|</span>
<span class="o">|</span> <span class="n">CSV</span>                <span class="o">|</span> <span class="n">YES</span>     <span class="o">|</span> <span class="n">CSV</span> <span class="n">storage</span> <span class="kp">engine</span>                                             <span class="o">|</span> <span class="n">NO</span>           <span class="o">|</span> <span class="n">NO</span>   <span class="o">|</span> <span class="n">NO</span>         <span class="o">|</span>
<span class="o">|</span> <span class="n">FEDERATED</span>          <span class="o">|</span> <span class="n">NO</span>      <span class="o">|</span> <span class="n">Federated</span> <span class="n">MySQL</span> <span class="n">storage</span> <span class="kp">engine</span>                                 <span class="o">|</span> <span class="no">NULL</span>         <span class="o">|</span> <span class="no">NULL</span> <span class="o">|</span> <span class="no">NULL</span>       <span class="o">|</span>
<span class="o">|</span> <span class="n">PERFORMANCE_SCHEMA</span> <span class="o">|</span> <span class="n">YES</span>     <span class="o">|</span> <span class="n">Performance</span> <span class="k">Schema</span>                                             <span class="o">|</span> <span class="n">NO</span>           <span class="o">|</span> <span class="n">NO</span>   <span class="o">|</span> <span class="n">NO</span>         <span class="o">|</span>
<span class="o">|</span> <span class="n">MyISAM</span>             <span class="o">|</span> <span class="n">YES</span>     <span class="o">|</span> <span class="n">MyISAM</span> <span class="n">storage</span> <span class="kp">engine</span>                                          <span class="o">|</span> <span class="n">NO</span>           <span class="o">|</span> <span class="n">NO</span>   <span class="o">|</span> <span class="n">NO</span>         <span class="o">|</span>
<span class="o">|</span> <span class="n">InnoDB</span>             <span class="o">|</span> <span class="k">DEFAULT</span> <span class="o">|</span> <span class="n">Supports</span> <span class="n">transactions</span><span class="p">,</span> <span class="n">row</span><span class="o">-</span><span class="n">level</span> <span class="n">locking</span><span class="p">,</span> <span class="k">and</span> <span class="k">foreign</span> <span class="k">keys</span>     <span class="o">|</span> <span class="n">YES</span>          <span class="o">|</span> <span class="n">YES</span>  <span class="o">|</span> <span class="n">YES</span>        <span class="o">|</span>
<span class="o">|</span> <span class="n">BLACKHOLE</span>          <span class="o">|</span> <span class="n">YES</span>     <span class="o">|</span> <span class="o">/</span><span class="n">dev</span><span class="o">/</span><span class="no">null</span> <span class="n">storage</span> <span class="kp">engine</span> <span class="p">(</span><span class="n">anything</span> <span class="n">you</span> <span class="k">write</span> <span class="k">to</span> <span class="n">it</span> <span class="n">disappears</span><span class="p">)</span> <span class="o">|</span> <span class="n">NO</span>           <span class="o">|</span> <span class="n">NO</span>   <span class="o">|</span> <span class="n">NO</span>         <span class="o">|</span>
<span class="o">|</span> <span class="n">ARCHIVE</span>            <span class="o">|</span> <span class="n">YES</span>     <span class="o">|</span> <span class="n">Archive</span> <span class="n">storage</span> <span class="kp">engine</span>                                         <span class="o">|</span> <span class="n">NO</span>           <span class="o">|</span> <span class="n">NO</span>   <span class="o">|</span> <span class="n">NO</span>         <span class="o">|</span>
<span class="o">+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+</span>
<span class="mi">9</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">01</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>简单介绍如下</p>
<table>
<thead>
<tr>
<th>存储引擎</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>ARCHIVE</td>
<td>用于数据存档的引擎，数据被插入后就不能在修改了，且不支持索引。</td>
</tr>
<tr>
<td>CSV</td>
<td>在存储数据时，会以逗号作为数据项之间的分隔符。</td>
</tr>
<tr>
<td>BLACKHOLE</td>
<td>会丢弃写操作，该操作会返回空内容。</td>
</tr>
<tr>
<td>FEDERATED</td>
<td>将数据存储在远程数据库中，用来访问远程表的存储引擎。</td>
</tr>
<tr>
<td>InnoDB</td>
<td>具备外键支持功能的事务处理引擎</td>
</tr>
<tr>
<td>MEMORY</td>
<td>置于内存的表</td>
</tr>
<tr>
<td>MRG_MYISAM</td>
<td>用来管理由多个 MyISAM 表构成的表集合</td>
</tr>
<tr>
<td>MyISAM</td>
<td>主要的非事务处理存储引擎</td>
</tr>
<tr>
<td>NDB</td>
<td>MySQL 集群专用存储引擎</td>
</tr>
</tbody>
</table>
<h3 id="22-操作">2.2 操作</h3>
<p>对默认存储引擎操作语句格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">SHOW</span> <span class="n">VARIABLES</span> <span class="k">LIKE</span> <span class="s1">&#39;default_storage_engine%&#39;</span><span class="p">;</span> <span class="c1"># 查看默认存储引擎
</span><span class="c1"></span><span class="kt">SET</span> <span class="n">default_storage_engine</span><span class="o">=&lt;</span> <span class="err">存储引擎名</span> <span class="o">&gt;</span> <span class="c1"># 设置默认存储引擎
</span></code></pre></td></tr></table>
</div>
</div><p>引擎选择的原则如下</p>
<ol>
<li>MyISAM 存储引擎不支持事务和外键，所以访问速度比较快。如果应用主要以读取和写入为主，只有少量的更新和删除操作，并且对事务的完整性、并发性要求不是很高，那么选择 MyISAM 存储引擎是非常适合的。MyISAM 是在 Web 数据仓储和其他应用环境下最常使用的存储引擎之一。</li>
<li>InnoDB 存储引擎在事务上具有优势，即支持具有提交、回滚和崩溃恢复能力的事务安装，所以比 MyISAM 存储引擎占用更多的磁盘空间。如果应用对事务的完整性有比较高的要求，在并发条件下要求数据的一致性，数据操作除了插入和查询以外，还包括很多的更新、删除操作，那么 InnoDB 存储引擎是比较合适的。InnoDB 存储引擎除了可以有效地降低由于删除和更新导致的锁定，还可以确保事务的完整提交（Commit）和回滚（Rollback），对于类似计费系统或者财务系统等对数据准确性要求比较高的系统，InnoDB 都是合适的选择。</li>
<li>MEMORY 存储引擎将所有数据保存在 RAM 中，所以该存储引擎的数据访问速度快，但是安全上没有保障。MEMORY 对表的大小有限制，太大的表无法缓存在内存中。由于使用 MEMORY 存储引擎没有安全保障，所以要确保数据库异常终止后表中的数据可以恢复。如果应用中涉及数据比较少，且需要进行快速访问，则适合使用 MEMORY 存储引擎。</li>
</ol>
<p>修改数据表的存储引擎的语法格式如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="o">&lt;</span><span class="err">表名</span><span class="o">&gt;</span> <span class="kp">ENGINE</span><span class="o">=&lt;</span><span class="err">存储引擎名</span><span class="o">&gt;</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>Mysql学习2-数据库操作</title><link>https://shuzang.github.io/mysql-learning-2-data-definition-language/</link><pubDate>Sun, 24 May 2020 09:17:00 +0800</pubDate><author>作者</author><guid>https://shuzang.github.io/mysql-learning-2-data-definition-language/</guid><description><![CDATA[<p>本文介绍对数据库的操作，包括创建、删除、修改等。</p>
<h2 id="1-查看">1. 查看</h2>
<p>查看数据库的语法格式为：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">SHOW</span> <span class="k">DATABASES</span> <span class="p">[</span><span class="k">LIKE</span> <span class="s1">&#39;数据库名&#39;</span><span class="p">];</span>
</code></pre></td></tr></table>
</div>
</div><p>语法说明如下：</p>
<ul>
<li>LIKE 从句是可选项，用于匹配指定的数据库名称。LIKE 从句可以部分匹配（使用 %），也可以完全匹配。</li>
<li>数据库名由单引号<code>' '</code>包围。</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SHOW</span> <span class="k">DATABASES</span><span class="p">;</span>
<span class="o">+--------------------+</span>
<span class="o">|</span> <span class="k">Database</span>           <span class="o">|</span>
<span class="o">+--------------------+</span>
<span class="o">|</span> <span class="n">information_schema</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">mysql</span>              <span class="o">|</span>
<span class="o">|</span> <span class="n">performance_schema</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">sakila</span>             <span class="o">|</span>
<span class="o">|</span> <span class="n">sys</span>                <span class="o">|</span>
<span class="o">|</span> <span class="n">world</span>              <span class="o">|</span>
<span class="o">+--------------------+</span>
<span class="mi">6</span> <span class="n">row</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">22</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>如上所示，安装 MySQL 时系统自动创建 6 个数据库，各自功能如下</p>
<ul>
<li>information_schema：主要存储了系统中的一些数据库对象信息，比如用户表信息、列信息、权限信息、字符集信息和分区信息等。</li>
<li>mysql：MySQL 的核心数据库，类似于 SQL Server 中的 master 表，主要负责存储数据库用户、用户访问权限等 MySQL 自己需要使用的控制和管理信息。常用的比如在 mysql 数据库的 user 表中修改 root 用户密码。</li>
<li>performance_schema：主要用于收集数据库服务器性能参数。</li>
<li>sakila：MySQL 提供的样例数据库，该数据库共有 16 张表，这些数据表都是比较常见的，在设计数据库时，可以参照这些样例数据表来快速完成所需的数据表。</li>
<li>sys：主要提供一些视图，数据都来自于 performation_schema，主要是让开发者和使用者更方便地查看性能问题。</li>
<li>world：MySQL 自动创建的数据库，只包括 3 张数据表，分别保存城市，国家和国家使用的语言等内容。</li>
</ul>
<h2 id="2-创建">2. 创建</h2>
<p>创建数据库的语法格式为：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">CREATE</span> <span class="k">DATABASE</span> <span class="p">[</span><span class="k">IF</span> <span class="k">NOT</span> <span class="k">EXISTS</span><span class="p">]</span> <span class="o">&lt;</span><span class="err">数据库名</span><span class="o">&gt;</span>
<span class="p">[[</span><span class="k">DEFAULT</span><span class="p">]</span> <span class="k">CHARACTER</span> <span class="kt">SET</span> <span class="o">&lt;</span><span class="err">字符集名</span><span class="o">&gt;</span><span class="p">]</span> 
<span class="p">[[</span><span class="k">DEFAULT</span><span class="p">]</span> <span class="k">COLLATE</span> <span class="o">&lt;</span><span class="err">校对规则名</span><span class="o">&gt;</span><span class="p">];</span>
</code></pre></td></tr></table>
</div>
</div><p><code>[]</code> 中的内容可选，语法说明如下</p>
<ul>
<li>数据库名不能以数字开头，尽量有实际意义，不区分大小写；</li>
<li><code>[IF NOT EXISTS]</code> 用来避免数据库已存在而重复创建的错误</li>
<li><code>[DEFAULT] CHARACTER SET</code> 指定字符集，避免数据乱码，不指定则使用默认字符集</li>
<li><code>[DEFAULT] COLLATE</code> 指定字符集默认校对规则</li>
</ul>
<p>注：字符集是用来定义 MySQL 存储字符串的方式，校对规则定义了比较字符串的方式。</p>
<p>示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">CREATE</span> <span class="k">DATABASE</span> <span class="n">test_db</span><span class="p">;</span> <span class="c1"># 创建数据库
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">CREATE</span> <span class="k">DATABASE</span> <span class="k">IF</span> <span class="k">NOT</span> <span class="k">EXISTS</span> <span class="n">test_db_char</span> <span class="c1"># 创建数据库的同时指定字符集和校对规则
</span><span class="c1"></span>    <span class="o">-&gt;</span> <span class="k">DEFAULT</span> <span class="k">CHARACTER</span> <span class="kt">SET</span> <span class="n">utf8</span>
    <span class="o">-&gt;</span> <span class="k">DEFAULT</span> <span class="k">COLLATE</span> <span class="n">utf8_chinese_ci</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="3-修改">3. 修改</h2>
<p>只能对数据库使用的字符集和校对规则进行修改，语法格式为：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">ALTER</span> <span class="k">DATABASE</span> <span class="p">[</span><span class="err">数据库名</span><span class="p">]</span> <span class="err">{</span> 
<span class="p">[</span> <span class="k">DEFAULT</span> <span class="p">]</span> <span class="k">CHARACTER</span> <span class="kt">SET</span> <span class="o">&lt;</span><span class="err">字符集名</span><span class="o">&gt;</span> <span class="o">|</span>
<span class="p">[</span> <span class="k">DEFAULT</span> <span class="p">]</span> <span class="k">COLLATE</span> <span class="o">&lt;</span><span class="err">校对规则名</span><span class="o">&gt;</span><span class="err">}</span>
</code></pre></td></tr></table>
</div>
</div><p>语法说明如下：</p>
<ul>
<li>ALTER DATABASE 用于更改数据库的全局特性。</li>
<li>使用 ALTER DATABASE 需要获得数据库 ALTER 权限。</li>
<li>数据库名称可以忽略，此时语句对应于默认数据库。</li>
<li>CHARACTER SET 子句用于更改默认的数据库字符集。</li>
</ul>
<h2 id="4-删除">4. 删除</h2>
<p>删除数据库的语法格式为：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">DROP</span> <span class="k">DATABASE</span> <span class="p">[</span> <span class="k">IF</span> <span class="k">EXISTS</span> <span class="p">]</span> <span class="o">&lt;</span><span class="err">数据库名</span><span class="o">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>执行该命令会将数据库中存储的所有数据表和数据一同删除，且不能恢复。因此最好在删除数据库之前先将数据库进行备份。</p>
<p>IF EXISTS 用于防止当数据库不存在时发生错误。</p>
<p>系统自动创建的 information_schema 和 mysql 两个数据库存放一些和数据库相关的信息，删除后MySQL 将不能正常工作。</p>
<h2 id="5-选择">5. 选择</h2>
<p>创建数据库之后，该数据库不会自动成为当前数据库，需要用 USE 来指定当前数据库。其语法格式为：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">USE</span> <span class="o">&lt;</span><span class="err">数据库名</span><span class="o">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>该语句可以通知 MySQL 把 <code>&lt;数据库名&gt;</code> 所指示的数据库作为当前数据库。该数据库保持为默认数据库，直到语段的结尾，或者直到遇见一个不同的 USE 语句。</p>
<h2 id="6-其它">6. 其它</h2>
<p>单行注释使用 <code>#</code>，多行注释使用 <code>/*……*/</code></p>
<p>不同操作系统大小写是否区分的规则如下表</p>
<table>
<thead>
<tr>
<th></th>
<th>Windows</th>
<th>Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td>数据库名</td>
<td>否（忽略大小写）</td>
<td>是</td>
</tr>
<tr>
<td>表名</td>
<td>否</td>
<td>是</td>
</tr>
<tr>
<td>表别名</td>
<td>否</td>
<td>是</td>
</tr>
<tr>
<td>列名</td>
<td>否</td>
<td>否</td>
</tr>
<tr>
<td>列别名</td>
<td>否</td>
<td>否</td>
</tr>
<tr>
<td>变量名</td>
<td>否</td>
<td>是</td>
</tr>
</tbody>
</table>]]></description></item></channel></rss>