<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>区块链开发 on Shuzang's Blog</title><link>https://shuzang.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%BC%80%E5%8F%91/</link><description>Recent content in 区块链开发 on Shuzang's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 01 Jan 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://shuzang.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%BC%80%E5%8F%91/index.xml" rel="self" type="application/rss+xml"/><item><title>Address checksum</title><link>https://shuzang.github.io/2020/01/address-checksum/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/2020/01/address-checksum/</guid><description>在智能合约中显式传入地址类型时，可能会出现如下错误 Address checksum This looks like an address but has an invalid checksum. If this is not used as an address, please prepend &amp;lsquo;00&amp;rsquo;. 关于该问题的一个讨论见 https://github.com/ethereum/EIPs/issues/55 这是因为合约中现在使</description></item><item><title>区块链实验9-truffle连接到quorum网络</title><link>https://shuzang.github.io/2019/12/experiment-9-connecting-truffle-to-quorum/</link><pubDate>Tue, 24 Dec 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/2019/12/experiment-9-connecting-truffle-to-quorum/</guid><description>手动配置的复杂性难以言表，这次的优化实验决定使用truffle进行部署测试。 1. 账户设置 按设计，Raspberry Pi 3B+是lightnode</description></item><item><title>区块链实验8-改进合约的测试与部署</title><link>https://shuzang.github.io/test-and-deployment-of-improved-contracts/</link><pubDate>Thu, 12 Dec 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/test-and-deployment-of-improved-contracts/</guid><description>共RC、ACC、JC三个合约，含义分别为Register Contract、Access Control Contract、Judge Contract Gas消耗 三个合约部署</description></item><item><title>区块链实验7-合约审计</title><link>https://shuzang.github.io/2019/12/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%9E%E9%AA%8C7-%E5%90%88%E7%BA%A6%E5%AE%A1%E8%AE%A1/</link><pubDate>Fri, 06 Dec 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/2019/12/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%9E%E9%AA%8C7-%E5%90%88%E7%BA%A6%E5%AE%A1%E8%AE%A1/</guid><description>由于访问控制的核心工作是基于智能合约的，智能合约的安全性显得尤为重要，行业内这方面的研究方向称之为审计，因此当前打算选取合适的自动审计工具来</description></item><item><title>智能合约-合约间调用</title><link>https://shuzang.github.io/2019/11/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6-%E5%90%88%E7%BA%A6%E9%97%B4%E8%B0%83%E7%94%A8/</link><pubDate>Fri, 08 Nov 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/2019/11/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6-%E5%90%88%E7%BA%A6%E9%97%B4%E8%B0%83%E7%94%A8/</guid><description>之前的实验合约间的调用没有成功，这次就仔细地研究一下合约间地调用机制。分为两种情况 调用者和被调用者在一个sol文件中 调用者和被调用者在不同的</description></item><item><title>Truffle框架安装使用</title><link>https://shuzang.github.io/2019/11/truffle%E6%A1%86%E6%9E%B6%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</link><pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/2019/11/truffle%E6%A1%86%E6%9E%B6%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</guid><description>Truffle和Ganache的安装使用 1. 安装Truffle 在Ubuntu18.04 下安装运行，要求Node.js版本高于v8.9.4 1 2 3</description></item><item><title>区块链实验6-异常检测工作梳理</title><link>https://shuzang.github.io/2019/11/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%9E%E9%AA%8C6-%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B%E5%B7%A5%E4%BD%9C%E6%A2%B3%E7%90%86/</link><pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/2019/11/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%9E%E9%AA%8C6-%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B%E5%B7%A5%E4%BD%9C%E6%A2%B3%E7%90%86/</guid><description>开会提到的事 传感器与执行器仿真或模拟 异常模拟或生成 异常检测的参数 智能合约实施优化的细节 registry transfer mechanism (归属移交机制) 最近的工作梳理 两类异常检测系统：</description></item><item><title>区块链实验5-访问控制方案优化</title><link>https://shuzang.github.io/idea-design-and-optimization-of-smart-contract-based-access-control-scheme/</link><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/idea-design-and-optimization-of-smart-contract-based-access-control-scheme/</guid><description>在第一阶段基于Quorum平台，使用智能合约完成基本的访问控制功能后，结合实验过程中遇到的问题以及一些自己的理解，总结梳理可做的工作，并考虑</description></item><item><title>区块链实验4-实验用设备整理</title><link>https://shuzang.github.io/2019/10/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%9E%E9%AA%8C4-%E5%AE%9E%E9%AA%8C%E7%94%A8%E8%AE%BE%E5%A4%87%E6%95%B4%E7%90%86/</link><pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/2019/10/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%9E%E9%AA%8C4-%E5%AE%9E%E9%AA%8C%E7%94%A8%E8%AE%BE%E5%A4%87%E6%95%B4%E7%90%86/</guid><description>设备列表 开发板、MCU或其它套件、传感器/执行器的列表如下 Demoboard 名称 实物图 数量 Raspberry pi Raspberry pi 2 BeagleBone Black(BBB) BeagelBone Black 2 MCU或其它 名称 实物图 数量 LoRa/GPS Hat LoRa/GPS HAT 1 CC1350 LaunchPad 2 Grove XBee</description></item><item><title>区块链实验3-合约实现、部署和交互</title><link>https://shuzang.github.io/2019/10/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%9E%E9%AA%8C3-%E5%90%88%E7%BA%A6%E5%AE%9E%E7%8E%B0%E9%83%A8%E7%BD%B2%E5%92%8C%E4%BA%A4%E4%BA%92/</link><pubDate>Tue, 15 Oct 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/2019/10/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%9E%E9%AA%8C3-%E5%90%88%E7%BA%A6%E5%AE%9E%E7%8E%B0%E9%83%A8%E7%BD%B2%E5%92%8C%E4%BA%A4%E4%BA%92/</guid><description>这里介绍三种合约中定义的功能，以及如何部署合约和测试。 1. 合约中定义的功能 共有RC(Register Contract)，ACC(Access Control</description></item><item><title>区块链实验2-搭建quorum网络</title><link>https://shuzang.github.io/2019/10/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%9E%E9%AA%8C2-%E6%90%AD%E5%BB%BAquorum%E7%BD%91%E7%BB%9C/</link><pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/2019/10/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%9E%E9%AA%8C2-%E6%90%AD%E5%BB%BAquorum%E7%BD%91%E7%BB%9C/</guid><description>一. 前言 之前使用两台电脑和两台树莓派搭建quorum网络，但到最后由于网络质量的问题，共识无法正常运行，导致合约部署无法完成。 1 2 3 4 5 6 INFO</description></item><item><title>基于quorum搭建访问控制实验平台(旧)</title><link>https://shuzang.github.io/2019/09/%E5%9F%BA%E4%BA%8Equorum%E6%90%AD%E5%BB%BA%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E5%AE%9E%E9%AA%8C%E5%B9%B3%E5%8F%B0%E6%97%A7/</link><pubDate>Fri, 13 Sep 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/2019/09/%E5%9F%BA%E4%BA%8Equorum%E6%90%AD%E5%BB%BA%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E5%AE%9E%E9%AA%8C%E5%B9%B3%E5%8F%B0%E6%97%A7/</guid><description>由于网络原因最后没有成功 一. 前言 为了设计一个对物联网的访问控制方案，首先利用两台树莓派和两台计算机搭建完成了一个quorum区块链实验平台，</description></item><item><title>区块链实验补充-树莓派安装quorum节点</title><link>https://shuzang.github.io/2019/09/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%9E%E9%AA%8C%E8%A1%A5%E5%85%85-%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85quorum%E8%8A%82%E7%82%B9/</link><pubDate>Mon, 09 Sep 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/2019/09/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%9E%E9%AA%8C%E8%A1%A5%E5%85%85-%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85quorum%E8%8A%82%E7%82%B9/</guid><description>在熟悉了树莓派并和虚拟机顺利组网以后，首要面临的事情就是在树莓派中安装quorum节点，由于暂时不使用隐私保护功能，不安装隐私管理器Tess</description></item><item><title>提取以太坊的区块产生时间</title><link>https://shuzang.github.io/2019/04/%E6%8F%90%E5%8F%96%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%9A%84%E5%8C%BA%E5%9D%97%E4%BA%A7%E7%94%9F%E6%97%B6%E9%97%B4/</link><pubDate>Fri, 05 Apr 2019 21:35:00 +0800</pubDate><guid>https://shuzang.github.io/2019/04/%E6%8F%90%E5%8F%96%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%9A%84%E5%8C%BA%E5%9D%97%E4%BA%A7%E7%94%9F%E6%97%B6%E9%97%B4/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>目的是提取以太坊的区块产生时间形成数据集，初步的思路有两种：&lt;/p>
&lt;ul>
&lt;li>爬取以太坊区块浏览器中的时间数据，然后格式化形成数据集输出&lt;/li>
&lt;li>同步以太坊的所有区块（头），利用以太坊本身提供的接口提取每个区块的时间戳信息，然后将时间戳转换为真实的日期格式形成数据集输出，&lt;a href="https://tool.lu/timestamp/" target="_blank">时间戳转换在线工具&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>查询资料过程中，了解到谷歌已提供以太坊的区块信息数据集。虽然数据集本身没有时间信息，但可以导出时间戳进行转换，了解到谷歌使用的工具是&lt;a href="https://github.com/blockchain-etl/ethereum-etl#blockscsv" target="_blank">ethereum-etl&lt;/a>，故最终的解决方案是：使用ethereum-etl导出时间戳，编写Python程序转换时间戳并导出数据集。&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://www.infoq.cn/article/ethereum-bigquery-public-dataset-smart-contract-analytics" target="_blank">谷歌宣布其 BigQuery 服务已支持以太坊区块链数据分析&lt;/a>&lt;/p>
&lt;/blockquote></description></item><item><title>swarm网络搭建</title><link>https://shuzang.github.io/2019/03/swarm%E7%BD%91%E7%BB%9C%E6%90%AD%E5%BB%BA/</link><pubDate>Thu, 28 Mar 2019 19:59:00 +0800</pubDate><guid>https://shuzang.github.io/2019/03/swarm%E7%BD%91%E7%BB%9C%E6%90%AD%E5%BB%BA/</guid><description>&lt;p>说实话，swarm的资料比较难找，倒是IPFS的比较多一点。最后只在&lt;a href="http://medium.com/" target="_blank">Medium&lt;/a>找到了一些，本篇文章就是在实践其中的一些项目，并通过这样来学习swarm。&lt;/p>
&lt;p>参考链接：&lt;a href="https://swarm-gateways.net/bzz:/theswarm.eth/" target="_blank">swarm官网&lt;/a>，&lt;a href="https://swarm-guide.readthedocs.io/en/latest/introduction.html" target="_blank">swarm文档&lt;/a>，&lt;a href="https://github.com/ethersphere" target="_blank">github项目&lt;/a>&lt;/p>
&lt;p>还有一些帮助理解的资料：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://ethereum.stackexchange.com/questions/55027/swarm-in-a-private-network" target="_blank">关于swarm的三个理解上的问题&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/ethersphere/go-ethereum/wiki/IPFS-&amp;amp;-SWARM" target="_blank">swarm和ipfs的比较&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>智能合约-gas limit问题</title><link>https://shuzang.github.io/2019/03/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6-gas-limit%E9%97%AE%E9%A2%98/</link><pubDate>Thu, 21 Mar 2019 22:00:00 +0800</pubDate><guid>https://shuzang.github.io/2019/03/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6-gas-limit%E9%97%AE%E9%A2%98/</guid><description>&lt;p>在搭建的以太坊私链上进行智能合约部署时，出现了以下问题&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">INFO&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">03&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">21&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mf">11.690&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nx">Served&lt;/span> &lt;span class="nx">eth_sendTransaction&lt;/span> &lt;span class="nx">reqid&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">24&lt;/span> &lt;span class="nx">t&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">684.186&lt;/span>&lt;span class="nx">µs&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;exceeds block gas limit&amp;#34;&lt;/span>
&lt;span class="nb">Error&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">exceeds&lt;/span> &lt;span class="nx">block&lt;/span> &lt;span class="nx">gas&lt;/span> &lt;span class="nx">limit&lt;/span> &lt;span class="kc">undefined&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>出现该错误的原因如错误描述，是当前合约所需的gas超过了区块的最大gas。这可能与参数gasLimit有关。在创世区块的配置文件中，我们使用了默认的配置值，为&lt;code>0x2fefd8&lt;/code>，转换为10进制即&lt;code>3141592&lt;/code>。&lt;/p>
&lt;p>注：&lt;a href="http://tool.oschina.net/hexconvert/" target="_blank">在线转换工具&lt;/a>&lt;/p></description></item><item><title>Docker搭建以太坊私链</title><link>https://shuzang.github.io/2019/03/docker%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%A7%81%E9%93%BE/</link><pubDate>Tue, 12 Mar 2019 11:24:00 +0800</pubDate><guid>https://shuzang.github.io/2019/03/docker%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%A7%81%E9%93%BE/</guid><description>&lt;p>在以太坊github的&lt;a href="https://github.com/ethereum/go-ethereum" target="_blank">官方项目地址&lt;/a>发现其支持Docker启动，同时因为Docker相对于虚拟机的易用性，决定尝试使用Docker搭建以太坊联盟链&lt;/p>
&lt;p>Docker安装部分查看自官方说明，搭建过程主要参考&lt;a href="https://www.jianshu.com/p/7994db7a2b89?from=singlemessage" target="_blank">简书-使用Docker搭建以太坊私有链并部署合约&lt;/a>&lt;/p>
&lt;h2 id="一docker安装">一、Docker安装&lt;/h2>
&lt;p>OS环境：Ubuntu 18.04 LTS(bionic)&lt;/p>
&lt;p>内核版本：4.18.0-16-generic&lt;/p>
&lt;p>处理器架构：amd64&lt;/p>
&lt;p>官方的安装说明位于：&lt;a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/" target="_blank">Get Docker CE for Ubuntu&lt;/a>&lt;/p></description></item><item><title>以太坊节点连接到网络的几种方式</title><link>https://shuzang.github.io/2019/03/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E8%8A%82%E7%82%B9%E8%BF%9E%E6%8E%A5%E5%88%B0%E7%BD%91%E7%BB%9C%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</link><pubDate>Tue, 12 Mar 2019 08:33:00 +0800</pubDate><guid>https://shuzang.github.io/2019/03/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E8%8A%82%E7%82%B9%E8%BF%9E%E6%8E%A5%E5%88%B0%E7%BD%91%E7%BB%9C%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</guid><description>文章翻译自：Connecting to the network 如何寻找对等节点 在初始化时，geth会使用一组记录在源码中的bootstrap节点来连接。要指定这些节</description></item><item><title>Geth console命令详解</title><link>https://shuzang.github.io/2019/03/geth-console%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</link><pubDate>Fri, 08 Mar 2019 10:27:00 +0800</pubDate><guid>https://shuzang.github.io/2019/03/geth-console%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid><description>&lt;p>Geth Console是一个交互式的JavaScript执行环境，其中&lt;code>&amp;gt;&lt;/code>是命令提示符。在这个环境里也内置了一些用来操作以太坊的JavaScript对象，可以直接使用这些对象。这些对象主要包括：&lt;/p>
&lt;ul>
&lt;li>eth：包含一些跟操作区块链相关的方法；&lt;/li>
&lt;li>net：包含一些查看p2p网络状态的方法；&lt;/li>
&lt;li>admin：包含一些与管理节点相关的方法；&lt;/li>
&lt;li>miner：包含启动&amp;amp;停止挖矿的一些方法；&lt;/li>
&lt;li>personal：主要包含一些管理账户的方法；&lt;/li>
&lt;li>txpool：包含一些查看交易内存池的方法；&lt;/li>
&lt;li>web3：包含了以上对象，还包含一些单位换算的方法。&lt;/li>
&lt;/ul></description></item><item><title>geth命令参数说明</title><link>https://shuzang.github.io/2019/03/geth%E5%91%BD%E4%BB%A4%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E/</link><pubDate>Fri, 08 Mar 2019 09:26:00 +0800</pubDate><guid>https://shuzang.github.io/2019/03/geth%E5%91%BD%E4%BB%A4%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E/</guid><description>Geth是以太坊智能合约开发工具，是一个命令行工具，所以熟悉其命令参数有助于提高开发效率。本文是geth help的翻译，基于geth 1.8.</description></item><item><title>创世区块文件genesis.json</title><link>https://shuzang.github.io/2019/03/%E5%88%9B%E4%B8%96%E5%8C%BA%E5%9D%97%E6%96%87%E4%BB%B6genesis.json/</link><pubDate>Thu, 07 Mar 2019 19:48:00 +0800</pubDate><guid>https://shuzang.github.io/2019/03/%E5%88%9B%E4%B8%96%E5%8C%BA%E5%9D%97%E6%96%87%E4%BB%B6genesis.json/</guid><description>文件说明 关于genesis.json的官方说明位于两处 Private network Connecting to the network 每条区块链都以创世区块开头，而genesis.json正是创世区块的配置文</description></item><item><title>虚拟机搭建以太坊私链</title><link>https://shuzang.github.io/2019/03/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%A7%81%E9%93%BE/</link><pubDate>Thu, 07 Mar 2019 14:53:00 +0800</pubDate><guid>https://shuzang.github.io/2019/03/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%A7%81%E9%93%BE/</guid><description>一、单虚拟机 最简单的方式是使用一个虚拟机，这也是在条件有限的情况下的最好选择。方法是在一台虚拟机上启用多个终端，每个终端使用不同的端口通信。</description></item><item><title>区块链实验1-平台选择</title><link>https://shuzang.github.io/2019/01/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%9E%E9%AA%8C1-%E5%B9%B3%E5%8F%B0%E9%80%89%E6%8B%A9/</link><pubDate>Wed, 16 Jan 2019 13:11:00 +0800</pubDate><guid>https://shuzang.github.io/2019/01/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%9E%E9%AA%8C1-%E5%B9%B3%E5%8F%B0%E9%80%89%E6%8B%A9/</guid><description>上一节我们考虑了区块链应用中存储数据的几种方式，最后得到了三种可用方式，本节，我们就Ethereum等九个平台做分析，考虑该平台是否支持这些</description></item></channel></rss>